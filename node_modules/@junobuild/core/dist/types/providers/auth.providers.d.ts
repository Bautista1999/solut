import type { Provider, SignInOptions } from '../types/auth.types';
export interface AuthProvider {
    readonly id: Provider;
    signInOptions: (options: Pick<SignInOptions, 'windowed'>) => {
        identityProvider: string;
        windowOpenerFeatures?: string;
    };
}
export declare class InternetIdentityProvider implements AuthProvider {
    #private;
    constructor({ domain }: {
        domain?: 'internetcomputer.org' | 'ic0.app';
    });
    get id(): Provider;
    signInOptions({ windowed }: Pick<SignInOptions, 'windowed'>): {
        identityProvider: string;
        windowOpenerFeatures?: string;
    };
}
export declare class NFIDProvider implements AuthProvider {
    #private;
    constructor({ appName, logoUrl }: {
        appName: string;
        logoUrl: string;
    });
    get id(): Provider;
    signInOptions({ windowed }: Pick<SignInOptions, 'windowed'>): {
        identityProvider: string;
        windowOpenerFeatures?: string;
    };
}
