var t=n=>n==null,o=n=>!t(n),e=class extends Error{},s=(n,r)=>{if(t(n))throw new e(r)};var a=n=>o(n)?[n]:[],u=n=>n?.[0],T=async n=>{let r=new Blob([JSON.stringify(n)],{type:"application/json; charset=utf-8"});return new Uint8Array(await r.arrayBuffer())},p=async n=>{let r=new Blob([n instanceof Uint8Array?n:new Uint8Array(n)],{type:"application/json; charset=utf-8"});return JSON.parse(await r.text())};export{e as NullishError,s as assertNonNullish,p as fromArray,u as fromNullable,t as isNullish,o as nonNullish,T as toArray,a as toNullable};
//# sourceMappingURL=index.js.map
