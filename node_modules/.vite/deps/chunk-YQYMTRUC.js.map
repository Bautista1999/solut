{
  "version": 3,
  "sources": ["../../node_modules/js-sha256/src/sha256.js", "../../@junobuild/core/dist/browser/node-modules-polyfills:buffer", "../../@junobuild/core/dist/browser/node-modules-polyfills-commonjs:buffer", "../../node_modules/ieee754/index.js", "../../node_modules/bignumber.js/bignumber.js", "../../node_modules/borc/src/decoder.asm.js", "../../node_modules/borc/src/constants.js", "../../node_modules/borc/src/utils.js", "../../node_modules/borc/src/simple.js", "../../node_modules/borc/src/tagged.js", "../../node_modules/iso-url/src/url-browser.js", "../../node_modules/iso-url/src/relative.js", "../../node_modules/iso-url/index.js", "../../node_modules/borc/src/decoder.js", "../../node_modules/borc/src/diagnose.js", "../../node_modules/borc/src/encoder.js", "../../node_modules/borc/src/index.js", "../../node_modules/simple-cbor/src/value.ts", "../../node_modules/simple-cbor/src/serializer.ts", "../../node_modules/simple-cbor/src/index.ts", "../../node_modules/base64-arraybuffer/lib/base64-arraybuffer.js", "../../node_modules/@dfinity/candid/src/idl.ts", "../../node_modules/@dfinity/principal/src/utils/base32.ts", "../../node_modules/@dfinity/principal/src/utils/getCrc.ts", "../../node_modules/@dfinity/principal/src/utils/sha224.ts", "../../node_modules/@dfinity/principal/src/index.ts", "../../node_modules/@dfinity/candid/src/utils/buffer.ts", "../../node_modules/@dfinity/candid/src/utils/hash.ts", "../../node_modules/@dfinity/candid/src/utils/leb128.ts", "../../node_modules/@dfinity/candid/src/utils/bigint-math.ts", "../../node_modules/@dfinity/agent/src/errors.ts", "../../node_modules/@dfinity/agent/src/cbor.ts", "../../node_modules/@dfinity/agent/src/utils/buffer.ts", "../../node_modules/@dfinity/agent/src/request_id.ts", "../../node_modules/@dfinity/agent/src/vendor/bls/bls.ts", "../../node_modules/@dfinity/agent/src/vendor/bls/wasm.ts", "../../node_modules/@dfinity/agent/src/utils/bls.ts", "../../node_modules/@dfinity/agent/src/certificate.ts", "../../node_modules/@dfinity/agent/src/canisterStatus/index.ts"],
  "sourcesContent": ["/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.9.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n  ];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\n      HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\n      HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\n      HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\n      HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +\n      HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +\n      HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +\n      HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\n      HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +\n      HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +\n      HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +\n      HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +\n        HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +\n        HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +\n        HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var arr = [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\n      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\n      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224) {\n      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === 'string') {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >> 12));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >> 18));\n          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n", "var lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n}\n\nfunction toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr;\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n\n  var L = 0;\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = (tmp >> 16) & 0xFF;\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[(tmp << 4) & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\n    output += lookup[tmp >> 10];\n    output += lookup[(tmp >> 4) & 0x3F];\n    output += lookup[(tmp << 2) & 0x3F];\n    output += '=';\n  }\n\n  parts.push(output);\n\n  return parts.join('')\n}\n\nfunction read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n}\n\nvar toString = {}.toString;\n\nvar isArray = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : true;\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nvar _kMaxLength = kMaxLength();\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n    that.length = length;\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr\n};\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n};\n\nfunction allocUnsafe (that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n};\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0;\n  }\n  return Buffer.alloc(+length)\n}\nBuffer.isBuffer = isBuffer;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n};\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer\n};\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true;\n\nfunction swap (b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this\n};\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this\n};\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this\n};\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0;\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n};\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n};\n\nBuffer.prototype.inspect = function inspect () {\n  var str = '';\n  var max = INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>'\n};\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset;  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1);\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n};\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n};\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed;\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n};\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return fromByteArray(buf)\n  } else {\n    return fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    );\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset]\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8)\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1]\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n};\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, true, 23, 4)\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, false, 23, 4)\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, true, 52, 8)\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, false, 52, 8)\n};\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 1] = (value >>> 8);\n    this[offset] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 3] = (value >>> 24);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n};\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    );\n  }\n\n  return len\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i];\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n\nexport { Buffer, INSPECT_MAX_BYTES, SlowBuffer, isBuffer, _kMaxLength as kMaxLength };\n", "\nconst polyfill = require('buffer')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", ";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.1.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n      alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return \u00B10 if x is \u00B10 or y is \u00B1Infinity, or return \u00B1Infinity as y is \u00B10.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on \u00B1Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is \u00B1Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and \u00B1Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, \u00B1Infinity, \u00B10 or \u00B11, or n is \u00B1Infinity, NaN or \u00B10.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to \u00B1Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to \u00B1Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to \u00B10: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = \u00B1Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return \u00B10, else return \u00B1Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) {\r\n        t = xc;\r\n        xc = yc;\r\n        yc = t;\r\n        y.s = -y.s;\r\n      }\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, \u00B1Infinity or \u00B10?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return \u00B1Infinity if either is \u00B1Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return \u00B10 if either is \u00B10.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) {\r\n        zc = xc;\r\n        xc = yc;\r\n        yc = zc;\r\n        i = xcL;\r\n        xcL = ycL;\r\n        ycL = i;\r\n      }\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return \u00B1Infinity if either \u00B1Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) {\r\n        t = yc;\r\n        yc = xc;\r\n        xc = t;\r\n        b = a;\r\n      }\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is \u00B1Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) {\r\n          i = g1;\r\n          g1 = g2;\r\n          g2 = i;\r\n          len -= i;\r\n        }\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n", "/* eslint-disable */\n\nmodule.exports = function decodeAsm (stdlib, foreign, buffer) {\n  'use asm'\n\n  // -- Imports\n\n  var heap = new stdlib.Uint8Array(buffer)\n  // var log = foreign.log\n  var pushInt = foreign.pushInt\n  var pushInt32 = foreign.pushInt32\n  var pushInt32Neg = foreign.pushInt32Neg\n  var pushInt64 = foreign.pushInt64\n  var pushInt64Neg = foreign.pushInt64Neg\n  var pushFloat = foreign.pushFloat\n  var pushFloatSingle = foreign.pushFloatSingle\n  var pushFloatDouble = foreign.pushFloatDouble\n  var pushTrue = foreign.pushTrue\n  var pushFalse = foreign.pushFalse\n  var pushUndefined = foreign.pushUndefined\n  var pushNull = foreign.pushNull\n  var pushInfinity = foreign.pushInfinity\n  var pushInfinityNeg = foreign.pushInfinityNeg\n  var pushNaN = foreign.pushNaN\n  var pushNaNNeg = foreign.pushNaNNeg\n\n  var pushArrayStart = foreign.pushArrayStart\n  var pushArrayStartFixed = foreign.pushArrayStartFixed\n  var pushArrayStartFixed32 = foreign.pushArrayStartFixed32\n  var pushArrayStartFixed64 = foreign.pushArrayStartFixed64\n  var pushObjectStart = foreign.pushObjectStart\n  var pushObjectStartFixed = foreign.pushObjectStartFixed\n  var pushObjectStartFixed32 = foreign.pushObjectStartFixed32\n  var pushObjectStartFixed64 = foreign.pushObjectStartFixed64\n\n  var pushByteString = foreign.pushByteString\n  var pushByteStringStart = foreign.pushByteStringStart\n  var pushUtf8String = foreign.pushUtf8String\n  var pushUtf8StringStart = foreign.pushUtf8StringStart\n\n  var pushSimpleUnassigned = foreign.pushSimpleUnassigned\n\n  var pushTagStart = foreign.pushTagStart\n  var pushTagStart4 = foreign.pushTagStart4\n  var pushTagStart8 = foreign.pushTagStart8\n  var pushTagUnassigned = foreign.pushTagUnassigned\n\n  var pushBreak = foreign.pushBreak\n\n  var pow = stdlib.Math.pow\n\n  // -- Constants\n\n\n  // -- Mutable Variables\n\n  var offset = 0\n  var inputLength = 0\n  var code = 0\n\n  // Decode a cbor string represented as Uint8Array\n  // which is allocated on the heap from 0 to inputLength\n  //\n  // input - Int\n  //\n  // Returns Code - Int,\n  // Success = 0\n  // Error > 0\n  function parse (input) {\n    input = input | 0\n\n    offset = 0\n    inputLength = input\n\n    while ((offset | 0) < (inputLength | 0)) {\n      code = jumpTable[heap[offset] & 255](heap[offset] | 0) | 0\n\n      if ((code | 0) > 0) {\n        break\n      }\n    }\n\n    return code | 0\n  }\n\n  // -- Helper Function\n\n  function checkOffset (n) {\n    n = n | 0\n\n    if ((((offset | 0) + (n | 0)) | 0) < (inputLength | 0)) {\n      return 0\n    }\n\n    return 1\n  }\n\n  function readUInt16 (n) {\n    n = n | 0\n\n    return (\n      (heap[n | 0] << 8) | heap[(n + 1) | 0]\n    ) | 0\n  }\n\n  function readUInt32 (n) {\n    n = n | 0\n\n    return (\n      (heap[n | 0] << 24) | (heap[(n + 1) | 0] << 16) | (heap[(n + 2) | 0] << 8) | heap[(n + 3) | 0]\n    ) | 0\n  }\n\n  // -- Initial Byte Handlers\n\n  function INT_P (octet) {\n    octet = octet | 0\n\n    pushInt(octet | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function UINT_P_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushInt(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function UINT_P_16 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushInt(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function UINT_P_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushInt32(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function UINT_P_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushInt64(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function INT_N (octet) {\n    octet = octet | 0\n\n    pushInt((-1 - ((octet - 32) | 0)) | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function UINT_N_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushInt(\n      (-1 - (heap[(offset + 1) | 0] | 0)) | 0\n    )\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function UINT_N_16 (octet) {\n    octet = octet | 0\n\n    var val = 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    val = readUInt16((offset + 1) | 0) | 0\n    pushInt((-1 - (val | 0)) | 0)\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function UINT_N_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushInt32Neg(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function UINT_N_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushInt64Neg(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function BYTE_STRING (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var step = 0\n\n    step = (octet - 64) | 0\n    if (checkOffset(step | 0) | 0) {\n      return 1\n    }\n\n    start = (offset + 1) | 0\n    end = (((offset + 1) | 0) + (step | 0)) | 0\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_8 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    length = heap[(offset + 1) | 0] | 0\n    start = (offset + 2) | 0\n    end = (((offset + 2) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 1) | 0) | 0) {\n      return 1\n    }\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_16 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    length = readUInt16((offset + 1) | 0) | 0\n    start = (offset + 3) | 0\n    end = (((offset + 3) | 0) + (length | 0)) | 0\n\n\n    if (checkOffset((length + 2) | 0) | 0) {\n      return 1\n    }\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_32 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    length = readUInt32((offset + 1) | 0) | 0\n    start = (offset + 5) | 0\n    end = (((offset + 5) | 0) + (length | 0)) | 0\n\n\n    if (checkOffset((length + 4) | 0) | 0) {\n      return 1\n    }\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_64 (octet) {\n    // NOT IMPLEMENTED\n    octet = octet | 0\n\n    return 1\n  }\n\n  function BYTE_STRING_BREAK (octet) {\n    octet = octet | 0\n\n    pushByteStringStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function UTF8_STRING (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var step = 0\n\n    step = (octet - 96) | 0\n\n    if (checkOffset(step | 0) | 0) {\n      return 1\n    }\n\n    start = (offset + 1) | 0\n    end = (((offset + 1) | 0) + (step | 0)) | 0\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_8 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    length = heap[(offset + 1) | 0] | 0\n    start = (offset + 2) | 0\n    end = (((offset + 2) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 1) | 0) | 0) {\n      return 1\n    }\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_16 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    length = readUInt16((offset + 1) | 0) | 0\n    start = (offset + 3) | 0\n    end = (((offset + 3) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 2) | 0) | 0) {\n      return 1\n    }\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_32 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    length = readUInt32((offset + 1) | 0) | 0\n    start = (offset + 5) | 0\n    end = (((offset + 5) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 4) | 0) | 0) {\n      return 1\n    }\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_64 (octet) {\n    // NOT IMPLEMENTED\n    octet = octet | 0\n\n    return 1\n  }\n\n  function UTF8_STRING_BREAK (octet) {\n    octet = octet | 0\n\n    pushUtf8StringStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function ARRAY (octet) {\n    octet = octet | 0\n\n    pushArrayStartFixed((octet - 128) | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function ARRAY_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function ARRAY_16 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function ARRAY_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed32(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function ARRAY_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed64(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function ARRAY_BREAK (octet) {\n    octet = octet | 0\n\n    pushArrayStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function MAP (octet) {\n    octet = octet | 0\n\n    var step = 0\n\n    step = (octet - 160) | 0\n\n    if (checkOffset(step | 0) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed(step | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function MAP_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function MAP_16 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function MAP_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed32(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function MAP_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed64(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function MAP_BREAK (octet) {\n    octet = octet | 0\n\n    pushObjectStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function TAG_KNOWN (octet) {\n    octet = octet | 0\n\n    pushTagStart((octet - 192| 0) | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BIGNUM_POS (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BIGNUM_NEG (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_FRAC (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BIGNUM_FLOAT (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_UNASSIGNED (octet) {\n    octet = octet | 0\n\n    pushTagStart((octet - 192| 0) | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BASE64_URL (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BASE64 (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BASE16 (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_1 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushTagStart(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_2 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushTagStart(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_4 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushTagStart4(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushTagStart8(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9 | 0)\n\n    return 0\n  }\n\n  function SIMPLE_UNASSIGNED (octet) {\n    octet = octet | 0\n\n    pushSimpleUnassigned(((octet | 0) - 224) | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_FALSE (octet) {\n    octet = octet | 0\n\n    pushFalse()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_TRUE (octet) {\n    octet = octet | 0\n\n    pushTrue()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_NULL (octet) {\n    octet = octet | 0\n\n    pushNull()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_UNDEFINED (octet) {\n    octet = octet | 0\n\n    pushUndefined()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_BYTE (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushSimpleUnassigned(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2)  | 0\n\n    return 0\n  }\n\n  function SIMPLE_FLOAT_HALF (octet) {\n    octet = octet | 0\n\n    var f = 0\n    var g = 0\n    var sign = 1.0\n    var exp = 0.0\n    var mant = 0.0\n    var r = 0.0\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    f = heap[(offset + 1) | 0] | 0\n    g = heap[(offset + 2) | 0] | 0\n\n    if ((f | 0) & 0x80) {\n      sign = -1.0\n    }\n\n    exp = +(((f | 0) & 0x7C) >> 2)\n    mant = +((((f | 0) & 0x03) << 8) | g)\n\n    if (+exp == 0.0) {\n      pushFloat(+(\n        (+sign) * +5.9604644775390625e-8 * (+mant)\n      ))\n    } else if (+exp == 31.0) {\n      if (+sign == 1.0) {\n        if (+mant > 0.0) {\n          pushNaN()\n        } else {\n          pushInfinity()\n        }\n      } else {\n        if (+mant > 0.0) {\n          pushNaNNeg()\n        } else {\n          pushInfinityNeg()\n        }\n      }\n    } else {\n      pushFloat(+(\n        +sign * pow(+2, +(+exp - 25.0)) * +(1024.0 + mant)\n      ))\n    }\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function SIMPLE_FLOAT_SINGLE (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushFloatSingle(\n      heap[(offset + 1) | 0] | 0,\n      heap[(offset + 2) | 0] | 0,\n      heap[(offset + 3) | 0] | 0,\n      heap[(offset + 4) | 0] | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function SIMPLE_FLOAT_DOUBLE (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushFloatDouble(\n      heap[(offset + 1) | 0] | 0,\n      heap[(offset + 2) | 0] | 0,\n      heap[(offset + 3) | 0] | 0,\n      heap[(offset + 4) | 0] | 0,\n      heap[(offset + 5) | 0] | 0,\n      heap[(offset + 6) | 0] | 0,\n      heap[(offset + 7) | 0] | 0,\n      heap[(offset + 8) | 0] | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function ERROR (octet) {\n    octet = octet | 0\n\n    return 1\n  }\n\n  function BREAK (octet) {\n    octet = octet | 0\n\n    pushBreak()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  // -- Jump Table\n\n  var jumpTable = [\n    // Integer 0x00..0x17 (0..23)\n    INT_P, // 0x00\n    INT_P, // 0x01\n    INT_P, // 0x02\n    INT_P, // 0x03\n    INT_P, // 0x04\n    INT_P, // 0x05\n    INT_P, // 0x06\n    INT_P, // 0x07\n    INT_P, // 0x08\n    INT_P, // 0x09\n    INT_P, // 0x0A\n    INT_P, // 0x0B\n    INT_P, // 0x0C\n    INT_P, // 0x0D\n    INT_P, // 0x0E\n    INT_P, // 0x0F\n    INT_P, // 0x10\n    INT_P, // 0x11\n    INT_P, // 0x12\n    INT_P, // 0x13\n    INT_P, // 0x14\n    INT_P, // 0x15\n    INT_P, // 0x16\n    INT_P, // 0x17\n    // Unsigned integer (one-byte uint8_t follows)\n    UINT_P_8, // 0x18\n    // Unsigned integer (two-byte uint16_t follows)\n    UINT_P_16, // 0x19\n    // Unsigned integer (four-byte uint32_t follows)\n    UINT_P_32, // 0x1a\n    // Unsigned integer (eight-byte uint64_t follows)\n    UINT_P_64, // 0x1b\n    ERROR, // 0x1c\n    ERROR, // 0x1d\n    ERROR, // 0x1e\n    ERROR, // 0x1f\n    // Negative integer -1-0x00..-1-0x17 (-1..-24)\n    INT_N, // 0x20\n    INT_N, // 0x21\n    INT_N, // 0x22\n    INT_N, // 0x23\n    INT_N, // 0x24\n    INT_N, // 0x25\n    INT_N, // 0x26\n    INT_N, // 0x27\n    INT_N, // 0x28\n    INT_N, // 0x29\n    INT_N, // 0x2A\n    INT_N, // 0x2B\n    INT_N, // 0x2C\n    INT_N, // 0x2D\n    INT_N, // 0x2E\n    INT_N, // 0x2F\n    INT_N, // 0x30\n    INT_N, // 0x31\n    INT_N, // 0x32\n    INT_N, // 0x33\n    INT_N, // 0x34\n    INT_N, // 0x35\n    INT_N, // 0x36\n    INT_N, // 0x37\n    // Negative integer -1-n (one-byte uint8_t for n follows)\n    UINT_N_8, // 0x38\n    // Negative integer -1-n (two-byte uint16_t for n follows)\n    UINT_N_16, // 0x39\n    // Negative integer -1-n (four-byte uint32_t for nfollows)\n    UINT_N_32, // 0x3a\n    // Negative integer -1-n (eight-byte uint64_t for n follows)\n    UINT_N_64, // 0x3b\n    ERROR, // 0x3c\n    ERROR, // 0x3d\n    ERROR, // 0x3e\n    ERROR, // 0x3f\n    // byte string (0x00..0x17 bytes follow)\n    BYTE_STRING, // 0x40\n    BYTE_STRING, // 0x41\n    BYTE_STRING, // 0x42\n    BYTE_STRING, // 0x43\n    BYTE_STRING, // 0x44\n    BYTE_STRING, // 0x45\n    BYTE_STRING, // 0x46\n    BYTE_STRING, // 0x47\n    BYTE_STRING, // 0x48\n    BYTE_STRING, // 0x49\n    BYTE_STRING, // 0x4A\n    BYTE_STRING, // 0x4B\n    BYTE_STRING, // 0x4C\n    BYTE_STRING, // 0x4D\n    BYTE_STRING, // 0x4E\n    BYTE_STRING, // 0x4F\n    BYTE_STRING, // 0x50\n    BYTE_STRING, // 0x51\n    BYTE_STRING, // 0x52\n    BYTE_STRING, // 0x53\n    BYTE_STRING, // 0x54\n    BYTE_STRING, // 0x55\n    BYTE_STRING, // 0x56\n    BYTE_STRING, // 0x57\n    // byte string (one-byte uint8_t for n, and then n bytes follow)\n    BYTE_STRING_8, // 0x58\n    // byte string (two-byte uint16_t for n, and then n bytes follow)\n    BYTE_STRING_16, // 0x59\n    // byte string (four-byte uint32_t for n, and then n bytes follow)\n    BYTE_STRING_32, // 0x5a\n    // byte string (eight-byte uint64_t for n, and then n bytes follow)\n    BYTE_STRING_64, // 0x5b\n    ERROR, // 0x5c\n    ERROR, // 0x5d\n    ERROR, // 0x5e\n    // byte string, byte strings follow, terminated by \"break\"\n    BYTE_STRING_BREAK, // 0x5f\n    // UTF-8 string (0x00..0x17 bytes follow)\n    UTF8_STRING, // 0x60\n    UTF8_STRING, // 0x61\n    UTF8_STRING, // 0x62\n    UTF8_STRING, // 0x63\n    UTF8_STRING, // 0x64\n    UTF8_STRING, // 0x65\n    UTF8_STRING, // 0x66\n    UTF8_STRING, // 0x67\n    UTF8_STRING, // 0x68\n    UTF8_STRING, // 0x69\n    UTF8_STRING, // 0x6A\n    UTF8_STRING, // 0x6B\n    UTF8_STRING, // 0x6C\n    UTF8_STRING, // 0x6D\n    UTF8_STRING, // 0x6E\n    UTF8_STRING, // 0x6F\n    UTF8_STRING, // 0x70\n    UTF8_STRING, // 0x71\n    UTF8_STRING, // 0x72\n    UTF8_STRING, // 0x73\n    UTF8_STRING, // 0x74\n    UTF8_STRING, // 0x75\n    UTF8_STRING, // 0x76\n    UTF8_STRING, // 0x77\n    // UTF-8 string (one-byte uint8_t for n, and then n bytes follow)\n    UTF8_STRING_8, // 0x78\n    // UTF-8 string (two-byte uint16_t for n, and then n bytes follow)\n    UTF8_STRING_16, // 0x79\n    // UTF-8 string (four-byte uint32_t for n, and then n bytes follow)\n    UTF8_STRING_32, // 0x7a\n    // UTF-8 string (eight-byte uint64_t for n, and then n bytes follow)\n    UTF8_STRING_64, // 0x7b\n    // UTF-8 string, UTF-8 strings follow, terminated by \"break\"\n    ERROR, // 0x7c\n    ERROR, // 0x7d\n    ERROR, // 0x7e\n    UTF8_STRING_BREAK, // 0x7f\n    // array (0x00..0x17 data items follow)\n    ARRAY, // 0x80\n    ARRAY, // 0x81\n    ARRAY, // 0x82\n    ARRAY, // 0x83\n    ARRAY, // 0x84\n    ARRAY, // 0x85\n    ARRAY, // 0x86\n    ARRAY, // 0x87\n    ARRAY, // 0x88\n    ARRAY, // 0x89\n    ARRAY, // 0x8A\n    ARRAY, // 0x8B\n    ARRAY, // 0x8C\n    ARRAY, // 0x8D\n    ARRAY, // 0x8E\n    ARRAY, // 0x8F\n    ARRAY, // 0x90\n    ARRAY, // 0x91\n    ARRAY, // 0x92\n    ARRAY, // 0x93\n    ARRAY, // 0x94\n    ARRAY, // 0x95\n    ARRAY, // 0x96\n    ARRAY, // 0x97\n    // array (one-byte uint8_t fo, and then n data items follow)\n    ARRAY_8, // 0x98\n    // array (two-byte uint16_t for n, and then n data items follow)\n    ARRAY_16, // 0x99\n    // array (four-byte uint32_t for n, and then n data items follow)\n    ARRAY_32, // 0x9a\n    // array (eight-byte uint64_t for n, and then n data items follow)\n    ARRAY_64, // 0x9b\n    // array, data items follow, terminated by \"break\"\n    ERROR, // 0x9c\n    ERROR, // 0x9d\n    ERROR, // 0x9e\n    ARRAY_BREAK, // 0x9f\n    // map (0x00..0x17 pairs of data items follow)\n    MAP, // 0xa0\n    MAP, // 0xa1\n    MAP, // 0xa2\n    MAP, // 0xa3\n    MAP, // 0xa4\n    MAP, // 0xa5\n    MAP, // 0xa6\n    MAP, // 0xa7\n    MAP, // 0xa8\n    MAP, // 0xa9\n    MAP, // 0xaA\n    MAP, // 0xaB\n    MAP, // 0xaC\n    MAP, // 0xaD\n    MAP, // 0xaE\n    MAP, // 0xaF\n    MAP, // 0xb0\n    MAP, // 0xb1\n    MAP, // 0xb2\n    MAP, // 0xb3\n    MAP, // 0xb4\n    MAP, // 0xb5\n    MAP, // 0xb6\n    MAP, // 0xb7\n    // map (one-byte uint8_t for n, and then n pairs of data items follow)\n    MAP_8, // 0xb8\n    // map (two-byte uint16_t for n, and then n pairs of data items follow)\n    MAP_16, // 0xb9\n    // map (four-byte uint32_t for n, and then n pairs of data items follow)\n    MAP_32, // 0xba\n    // map (eight-byte uint64_t for n, and then n pairs of data items follow)\n    MAP_64, // 0xbb\n    ERROR, // 0xbc\n    ERROR, // 0xbd\n    ERROR, // 0xbe\n    // map, pairs of data items follow, terminated by \"break\"\n    MAP_BREAK, // 0xbf\n    // Text-based date/time (data item follows; see Section 2.4.1)\n    TAG_KNOWN, // 0xc0\n    // Epoch-based date/time (data item follows; see Section 2.4.1)\n    TAG_KNOWN, // 0xc1\n    // Positive bignum (data item \"byte string\" follows)\n    TAG_KNOWN, // 0xc2\n    // Negative bignum (data item \"byte string\" follows)\n    TAG_KNOWN, // 0xc3\n    // Decimal Fraction (data item \"array\" follows; see Section 2.4.3)\n    TAG_KNOWN, // 0xc4\n    // Bigfloat (data item \"array\" follows; see Section 2.4.3)\n    TAG_KNOWN, // 0xc5\n    // (tagged item)\n    TAG_UNASSIGNED, // 0xc6\n    TAG_UNASSIGNED, // 0xc7\n    TAG_UNASSIGNED, // 0xc8\n    TAG_UNASSIGNED, // 0xc9\n    TAG_UNASSIGNED, // 0xca\n    TAG_UNASSIGNED, // 0xcb\n    TAG_UNASSIGNED, // 0xcc\n    TAG_UNASSIGNED, // 0xcd\n    TAG_UNASSIGNED, // 0xce\n    TAG_UNASSIGNED, // 0xcf\n    TAG_UNASSIGNED, // 0xd0\n    TAG_UNASSIGNED, // 0xd1\n    TAG_UNASSIGNED, // 0xd2\n    TAG_UNASSIGNED, // 0xd3\n    TAG_UNASSIGNED, // 0xd4\n    // Expected Conversion (data item follows; see Section 2.4.4.2)\n    TAG_UNASSIGNED, // 0xd5\n    TAG_UNASSIGNED, // 0xd6\n    TAG_UNASSIGNED, // 0xd7\n    // (more tagged items, 1/2/4/8 bytes and then a data item follow)\n    TAG_MORE_1, // 0xd8\n    TAG_MORE_2, // 0xd9\n    TAG_MORE_4, // 0xda\n    TAG_MORE_8, // 0xdb\n    ERROR, // 0xdc\n    ERROR, // 0xdd\n    ERROR, // 0xde\n    ERROR, // 0xdf\n    // (simple value)\n    SIMPLE_UNASSIGNED, // 0xe0\n    SIMPLE_UNASSIGNED, // 0xe1\n    SIMPLE_UNASSIGNED, // 0xe2\n    SIMPLE_UNASSIGNED, // 0xe3\n    SIMPLE_UNASSIGNED, // 0xe4\n    SIMPLE_UNASSIGNED, // 0xe5\n    SIMPLE_UNASSIGNED, // 0xe6\n    SIMPLE_UNASSIGNED, // 0xe7\n    SIMPLE_UNASSIGNED, // 0xe8\n    SIMPLE_UNASSIGNED, // 0xe9\n    SIMPLE_UNASSIGNED, // 0xea\n    SIMPLE_UNASSIGNED, // 0xeb\n    SIMPLE_UNASSIGNED, // 0xec\n    SIMPLE_UNASSIGNED, // 0xed\n    SIMPLE_UNASSIGNED, // 0xee\n    SIMPLE_UNASSIGNED, // 0xef\n    SIMPLE_UNASSIGNED, // 0xf0\n    SIMPLE_UNASSIGNED, // 0xf1\n    SIMPLE_UNASSIGNED, // 0xf2\n    SIMPLE_UNASSIGNED, // 0xf3\n    // False\n    SIMPLE_FALSE, // 0xf4\n    // True\n    SIMPLE_TRUE, // 0xf5\n    // Null\n    SIMPLE_NULL, // 0xf6\n    // Undefined\n    SIMPLE_UNDEFINED, // 0xf7\n    // (simple value, one byte follows)\n    SIMPLE_BYTE, // 0xf8\n    // Half-Precision Float (two-byte IEEE 754)\n    SIMPLE_FLOAT_HALF, // 0xf9\n    // Single-Precision Float (four-byte IEEE 754)\n    SIMPLE_FLOAT_SINGLE, // 0xfa\n    // Double-Precision Float (eight-byte IEEE 754)\n    SIMPLE_FLOAT_DOUBLE, // 0xfb\n    ERROR, // 0xfc\n    ERROR, // 0xfd\n    ERROR, // 0xfe\n    // \"break\" stop code\n    BREAK // 0xff\n  ]\n\n  // --\n\n  return {\n    parse: parse\n  }\n}\n", "'use strict'\n\nconst Bignumber = require('bignumber.js').BigNumber\n\nexports.MT = {\n  POS_INT: 0,\n  NEG_INT: 1,\n  BYTE_STRING: 2,\n  UTF8_STRING: 3,\n  ARRAY: 4,\n  MAP: 5,\n  TAG: 6,\n  SIMPLE_FLOAT: 7\n}\n\nexports.TAG = {\n  DATE_STRING: 0,\n  DATE_EPOCH: 1,\n  POS_BIGINT: 2,\n  NEG_BIGINT: 3,\n  DECIMAL_FRAC: 4,\n  BIGFLOAT: 5,\n  BASE64URL_EXPECTED: 21,\n  BASE64_EXPECTED: 22,\n  BASE16_EXPECTED: 23,\n  CBOR: 24,\n  URI: 32,\n  BASE64URL: 33,\n  BASE64: 34,\n  REGEXP: 35,\n  MIME: 36\n}\n\nexports.NUMBYTES = {\n  ZERO: 0,\n  ONE: 24,\n  TWO: 25,\n  FOUR: 26,\n  EIGHT: 27,\n  INDEFINITE: 31\n}\n\nexports.SIMPLE = {\n  FALSE: 20,\n  TRUE: 21,\n  NULL: 22,\n  UNDEFINED: 23\n}\n\nexports.SYMS = {\n  NULL: Symbol('null'),\n  UNDEFINED: Symbol('undef'),\n  PARENT: Symbol('parent'),\n  BREAK: Symbol('break'),\n  STREAM: Symbol('stream')\n}\n\nexports.SHIFT32 = Math.pow(2, 32)\nexports.SHIFT16 = Math.pow(2, 16)\n\nexports.MAX_SAFE_HIGH = 0x1fffff\nexports.NEG_ONE = new Bignumber(-1)\nexports.TEN = new Bignumber(10)\nexports.TWO = new Bignumber(2)\n\nexports.PARENT = {\n  ARRAY: 0,\n  OBJECT: 1,\n  MAP: 2,\n  TAG: 3,\n  BYTE_STRING: 4,\n  UTF8_STRING: 5\n}\n", "'use strict'\n\nconst { Buffer } = require('buffer')\nconst Bignumber = require('bignumber.js').BigNumber\n\nconst constants = require('./constants')\nconst SHIFT32 = constants.SHIFT32\nconst SHIFT16 = constants.SHIFT16\nconst MAX_SAFE_HIGH = 0x1fffff\n\nexports.parseHalf = function parseHalf (buf) {\n  var exp, mant, sign\n  sign = buf[0] & 0x80 ? -1 : 1\n  exp = (buf[0] & 0x7C) >> 2\n  mant = ((buf[0] & 0x03) << 8) | buf[1]\n  if (!exp) {\n    return sign * 5.9604644775390625e-8 * mant\n  } else if (exp === 0x1f) {\n    return sign * (mant ? 0 / 0 : 2e308)\n  } else {\n    return sign * Math.pow(2, exp - 25) * (1024 + mant)\n  }\n}\n\nfunction toHex (n) {\n  if (n < 16) {\n    return '0' + n.toString(16)\n  }\n\n  return n.toString(16)\n}\n\nexports.arrayBufferToBignumber = function (buf) {\n  const len = buf.byteLength\n  let res = ''\n  for (let i = 0; i < len; i++) {\n    res += toHex(buf[i])\n  }\n\n  return new Bignumber(res, 16)\n}\n\n// convert an Object into a Map\nexports.buildMap = (obj) => {\n  const res = new Map()\n  const keys = Object.keys(obj)\n  const length = keys.length\n  for (let i = 0; i < length; i++) {\n    res.set(keys[i], obj[keys[i]])\n  }\n  return res\n}\n\nexports.buildInt32 = (f, g) => {\n  return f * SHIFT16 + g\n}\n\nexports.buildInt64 = (f1, f2, g1, g2) => {\n  const f = exports.buildInt32(f1, f2)\n  const g = exports.buildInt32(g1, g2)\n\n  if (f > MAX_SAFE_HIGH) {\n    return new Bignumber(f).times(SHIFT32).plus(g)\n  } else {\n    return (f * SHIFT32) + g\n  }\n}\n\nexports.writeHalf = function writeHalf (buf, half) {\n  // assume 0, -0, NaN, Infinity, and -Infinity have already been caught\n\n  // HACK: everyone settle in.  This isn't going to be pretty.\n  // Translate cn-cbor's C code (from Carsten Borman):\n\n  // uint32_t be32;\n  // uint16_t be16, u16;\n  // union {\n  //   float f;\n  //   uint32_t u;\n  // } u32;\n  // u32.f = float_val;\n\n  const u32 = Buffer.allocUnsafe(4)\n  u32.writeFloatBE(half, 0)\n  const u = u32.readUInt32BE(0)\n\n  // if ((u32.u & 0x1FFF) == 0) { /* worth trying half */\n\n  // hildjj: If the lower 13 bits are 0, we won't lose anything in the conversion\n  if ((u & 0x1FFF) !== 0) {\n    return false\n  }\n\n  //   int s16 = (u32.u >> 16) & 0x8000;\n  //   int exp = (u32.u >> 23) & 0xff;\n  //   int mant = u32.u & 0x7fffff;\n\n  var s16 = (u >> 16) & 0x8000 // top bit is sign\n  const exp = (u >> 23) & 0xff // then 5 bits of exponent\n  const mant = u & 0x7fffff\n\n  //   if (exp == 0 && mant == 0)\n  //     ;              /* 0.0, -0.0 */\n\n  // hildjj: zeros already handled.  Assert if you don't believe me.\n\n  //   else if (exp >= 113 && exp <= 142) /* normalized */\n  //     s16 += ((exp - 112) << 10) + (mant >> 13);\n  if ((exp >= 113) && (exp <= 142)) {\n    s16 += ((exp - 112) << 10) + (mant >> 13)\n\n  //   else if (exp >= 103 && exp < 113) { /* denorm, exp16 = 0 */\n  //     if (mant & ((1 << (126 - exp)) - 1))\n  //       goto float32;         /* loss of precision */\n  //     s16 += ((mant + 0x800000) >> (126 - exp));\n  } else if ((exp >= 103) && (exp < 113)) {\n    if (mant & ((1 << (126 - exp)) - 1)) {\n      return false\n    }\n    s16 += ((mant + 0x800000) >> (126 - exp))\n\n    //   } else if (exp == 255 && mant == 0) { /* Inf */\n    //     s16 += 0x7c00;\n\n    // hildjj: Infinity already handled\n\n  //   } else\n  //     goto float32;           /* loss of range */\n  } else {\n    return false\n  }\n\n  //   ensure_writable(3);\n  //   u16 = s16;\n  //   be16 = hton16p((const uint8_t*)&u16);\n  buf.writeUInt16BE(s16, 0)\n  return true\n}\n\nexports.keySorter = function (a, b) {\n  var lenA = a[0].byteLength\n  var lenB = b[0].byteLength\n\n  if (lenA > lenB) {\n    return 1\n  }\n\n  if (lenB > lenA) {\n    return -1\n  }\n\n  return a[0].compare(b[0])\n}\n\n// Adapted from http://www.2ality.com/2012/03/signedzero.html\nexports.isNegativeZero = (x) => {\n  return x === 0 && (1 / x < 0)\n}\n\nexports.nextPowerOf2 = (n) => {\n  let count = 0\n  // First n in the below condition is for\n  // the case where n is 0\n  if (n && !(n & (n - 1))) {\n    return n\n  }\n\n  while (n !== 0) {\n    n >>= 1\n    count += 1\n  }\n\n  return 1 << count\n}\n", "'use strict'\n\nconst constants = require('./constants')\nconst MT = constants.MT\nconst SIMPLE = constants.SIMPLE\nconst SYMS = constants.SYMS\n\n/**\n * A CBOR Simple Value that does not map onto a known constant.\n */\nclass Simple {\n  /**\n   * Creates an instance of Simple.\n   *\n   * @param {integer} value - the simple value's integer value\n   */\n  constructor (value) {\n    if (typeof value !== 'number') {\n      throw new Error('Invalid Simple type: ' + (typeof value))\n    }\n    if ((value < 0) || (value > 255) || ((value | 0) !== value)) {\n      throw new Error('value must be a small positive integer: ' + value)\n    }\n    this.value = value\n  }\n\n  /**\n   * Debug string for simple value\n   *\n   * @returns {string} simple(value)\n   */\n  toString () {\n    return 'simple(' + this.value + ')'\n  }\n\n  /**\n   * Debug string for simple value\n   *\n   * @returns {string} simple(value)\n   */\n  inspect () {\n    return 'simple(' + this.value + ')'\n  }\n\n  /**\n   * Push the simple value onto the CBOR stream\n   *\n   * @param {cbor.Encoder} gen The generator to push onto\n   * @returns {number}\n   */\n  encodeCBOR (gen) {\n    return gen._pushInt(this.value, MT.SIMPLE_FLOAT)\n  }\n\n  /**\n   * Is the given object a Simple?\n   *\n   * @param {any} obj - object to test\n   * @returns {bool} - is it Simple?\n   */\n  static isSimple (obj) {\n    return obj instanceof Simple\n  }\n\n  /**\n   * Decode from the CBOR additional information into a JavaScript value.\n   * If the CBOR item has no parent, return a \"safe\" symbol instead of\n   * `null` or `undefined`, so that the value can be passed through a\n   * stream in object mode.\n   *\n   * @param {Number} val - the CBOR additional info to convert\n   * @param {bool} hasParent - Does the CBOR item have a parent?\n   * @returns {(null|undefined|Boolean|Symbol)} - the decoded value\n   */\n  static decode (val, hasParent) {\n    if (hasParent == null) {\n      hasParent = true\n    }\n    switch (val) {\n      case SIMPLE.FALSE:\n        return false\n      case SIMPLE.TRUE:\n        return true\n      case SIMPLE.NULL:\n        if (hasParent) {\n          return null\n        } else {\n          return SYMS.NULL\n        }\n      case SIMPLE.UNDEFINED:\n        if (hasParent) {\n          return undefined\n        } else {\n          return SYMS.UNDEFINED\n        }\n      case -1:\n        if (!hasParent) {\n          throw new Error('Invalid BREAK')\n        }\n        return SYMS.BREAK\n      default:\n        return new Simple(val)\n    }\n  }\n}\n\nmodule.exports = Simple\n", "'use strict'\n\n/**\n * A CBOR tagged item, where the tag does not have semantics specified at the\n * moment, or those semantics threw an error during parsing. Typically this will\n * be an extension point you're not yet expecting.\n */\nclass Tagged {\n  /**\n   * Creates an instance of Tagged.\n   *\n   * @param {Number} tag - the number of the tag\n   * @param {any} value - the value inside the tag\n   * @param {Error} err - the error that was thrown parsing the tag, or null\n   */\n  constructor (tag, value, err) {\n    this.tag = tag\n    this.value = value\n    this.err = err\n    if (typeof this.tag !== 'number') {\n      throw new Error('Invalid tag type (' + (typeof this.tag) + ')')\n    }\n    if ((this.tag < 0) || ((this.tag | 0) !== this.tag)) {\n      throw new Error('Tag must be a positive integer: ' + this.tag)\n    }\n  }\n\n  /**\n   * Convert to a String\n   *\n   * @returns {String} string of the form '1(2)'\n   */\n  toString () {\n    return `${this.tag}(${JSON.stringify(this.value)})`\n  }\n\n  /**\n   * Push the simple value onto the CBOR stream\n   *\n   * @param {cbor.Encoder} gen The generator to push onto\n   * @returns {number}\n   */\n  encodeCBOR (gen) {\n    gen._pushTag(this.tag)\n    return gen.pushAny(this.value)\n  }\n\n  /**\n   * If we have a converter for this type, do the conversion.  Some converters\n   * are built-in.  Additional ones can be passed in.  If you want to remove\n   * a built-in converter, pass a converter in whose value is 'null' instead\n   * of a function.\n   *\n   * @param {Object} converters - keys in the object are a tag number, the value\n   *   is a function that takes the decoded CBOR and returns a JavaScript value\n   *   of the appropriate type.  Throw an exception in the function on errors.\n   * @returns {any} - the converted item\n   */\n  convert (converters) {\n    var er, f\n    f = converters != null ? converters[this.tag] : undefined\n    if (typeof f !== 'function') {\n      f = Tagged['_tag' + this.tag]\n      if (typeof f !== 'function') {\n        return this\n      }\n    }\n    try {\n      return f.call(Tagged, this.value)\n    } catch (error) {\n      er = error\n      this.err = er\n      return this\n    }\n  }\n}\n\nmodule.exports = Tagged\n", "'use strict';\n\nconst defaultBase = self.location ?\n    self.location.protocol + '//' + self.location.host :\n    '';\nconst URL = self.URL;\n\nclass URLWithLegacySupport {\n    constructor(url = '', base = defaultBase) {\n        this.super = new URL(url, base);\n        this.path = this.pathname + this.search;\n        this.auth =\n            this.username && this.password ?\n                this.username + ':' + this.password :\n                null;\n\n        this.query =\n            this.search && this.search.startsWith('?') ?\n                this.search.slice(1) :\n                null;\n    }\n\n    get hash() {\n        return this.super.hash;\n    }\n    get host() {\n        return this.super.host;\n    }\n    get hostname() {\n        return this.super.hostname;\n    }\n    get href() {\n        return this.super.href;\n    }\n    get origin() {\n        return this.super.origin;\n    }\n    get password() {\n        return this.super.password;\n    }\n    get pathname() {\n        return this.super.pathname;\n    }\n    get port() {\n        return this.super.port;\n    }\n    get protocol() {\n        return this.super.protocol;\n    }\n    get search() {\n        return this.super.search;\n    }\n    get searchParams() {\n        return this.super.searchParams;\n    }\n    get username() {\n        return this.super.username;\n    }\n\n    set hash(hash) {\n        this.super.hash = hash;\n    }\n    set host(host) {\n        this.super.host = host;\n    }\n    set hostname(hostname) {\n        this.super.hostname = hostname;\n    }\n    set href(href) {\n        this.super.href = href;\n    }\n    set origin(origin) {\n        this.super.origin = origin;\n    }\n    set password(password) {\n        this.super.password = password;\n    }\n    set pathname(pathname) {\n        this.super.pathname = pathname;\n    }\n    set port(port) {\n        this.super.port = port;\n    }\n    set protocol(protocol) {\n        this.super.protocol = protocol;\n    }\n    set search(search) {\n        this.super.search = search;\n    }\n    set searchParams(searchParams) {\n        this.super.searchParams = searchParams;\n    }\n    set username(username) {\n        this.super.username = username;\n    }\n\n    createObjectURL(o) {\n        return this.super.createObjectURL(o);\n    }\n    revokeObjectURL(o) {\n        this.super.revokeObjectURL(o);\n    }\n    toJSON() {\n        return this.super.toJSON();\n    }\n    toString() {\n        return this.super.toString();\n    }\n    format() {\n        return this.toString();\n    }\n}\n\nfunction format(obj) {\n    if (typeof obj === 'string') {\n        const url = new URL(obj);\n\n        return url.toString();\n    }\n\n    if (!(obj instanceof URL)) {\n        const userPass =\n            obj.username && obj.password ?\n                `${obj.username}:${obj.password}@` :\n                '';\n        const auth = obj.auth ? obj.auth + '@' : '';\n        const port = obj.port ? ':' + obj.port : '';\n        const protocol = obj.protocol ? obj.protocol + '//' : '';\n        const host = obj.host || '';\n        const hostname = obj.hostname || '';\n        const search = obj.search || (obj.query ? '?' + obj.query : '');\n        const hash = obj.hash || '';\n        const pathname = obj.pathname || '';\n        const path = obj.path || pathname + search;\n\n        return `${protocol}${userPass || auth}${host ||\n            hostname + port}${path}${hash}`;\n    }\n}\n\nmodule.exports = {\n    URLWithLegacySupport,\n    URLSearchParams: self.URLSearchParams,\n    defaultBase,\n    format\n};\n", "'use strict';\n\nconst { URLWithLegacySupport, format } = require('./url');\n\nmodule.exports = (url, location = {}, protocolMap = {}, defaultProtocol) => {\n    let protocol = location.protocol ?\n        location.protocol.replace(':', '') :\n        'http';\n\n    // Check protocol map\n    protocol = (protocolMap[protocol] || defaultProtocol || protocol) + ':';\n    let urlParsed;\n\n    try {\n        urlParsed = new URLWithLegacySupport(url);\n    } catch (err) {\n        urlParsed = {};\n    }\n\n    const base = Object.assign({}, location, {\n        protocol: protocol || urlParsed.protocol,\n        host: location.host || urlParsed.host\n    });\n\n    return new URLWithLegacySupport(url, format(base)).toString();\n};\n", "'use strict';\n\nconst {\n    URLWithLegacySupport,\n    format,\n    URLSearchParams,\n    defaultBase\n} = require('./src/url');\nconst relative = require('./src/relative');\n\nmodule.exports = {\n    URL: URLWithLegacySupport,\n    URLSearchParams,\n    format,\n    relative,\n    defaultBase\n};\n", "'use strict'\n\nconst { Buffer } = require('buffer')\nconst ieee754 = require('ieee754')\nconst Bignumber = require('bignumber.js').BigNumber\n\nconst parser = require('./decoder.asm')\nconst utils = require('./utils')\nconst c = require('./constants')\nconst Simple = require('./simple')\nconst Tagged = require('./tagged')\nconst { URL } = require('iso-url')\n\n/**\n * Transform binary cbor data into JavaScript objects.\n */\nclass Decoder {\n  /**\n   * @param {Object} [opts={}]\n   * @param {number} [opts.size=65536] - Size of the allocated heap.\n   */\n  constructor (opts) {\n    opts = opts || {}\n\n    if (!opts.size || opts.size < 0x10000) {\n      opts.size = 0x10000\n    } else {\n      // Ensure the size is a power of 2\n      opts.size = utils.nextPowerOf2(opts.size)\n    }\n\n    // Heap use to share the input with the parser\n    this._heap = new ArrayBuffer(opts.size)\n    this._heap8 = new Uint8Array(this._heap)\n    this._buffer = Buffer.from(this._heap)\n\n    this._reset()\n\n    // Known tags\n    this._knownTags = Object.assign({\n      0: (val) => new Date(val),\n      1: (val) => new Date(val * 1000),\n      2: (val) => utils.arrayBufferToBignumber(val),\n      3: (val) => c.NEG_ONE.minus(utils.arrayBufferToBignumber(val)),\n      4: (v) => {\n        // const v = new Uint8Array(val)\n        return c.TEN.pow(v[0]).times(v[1])\n      },\n      5: (v) => {\n        // const v = new Uint8Array(val)\n        return c.TWO.pow(v[0]).times(v[1])\n      },\n      32: (val) => new URL(val),\n      35: (val) => new RegExp(val)\n    }, opts.tags)\n\n    // Initialize asm based parser\n    this.parser = parser(global, {\n      // eslint-disable-next-line no-console\n      log: console.log.bind(console),\n      pushInt: this.pushInt.bind(this),\n      pushInt32: this.pushInt32.bind(this),\n      pushInt32Neg: this.pushInt32Neg.bind(this),\n      pushInt64: this.pushInt64.bind(this),\n      pushInt64Neg: this.pushInt64Neg.bind(this),\n      pushFloat: this.pushFloat.bind(this),\n      pushFloatSingle: this.pushFloatSingle.bind(this),\n      pushFloatDouble: this.pushFloatDouble.bind(this),\n      pushTrue: this.pushTrue.bind(this),\n      pushFalse: this.pushFalse.bind(this),\n      pushUndefined: this.pushUndefined.bind(this),\n      pushNull: this.pushNull.bind(this),\n      pushInfinity: this.pushInfinity.bind(this),\n      pushInfinityNeg: this.pushInfinityNeg.bind(this),\n      pushNaN: this.pushNaN.bind(this),\n      pushNaNNeg: this.pushNaNNeg.bind(this),\n      pushArrayStart: this.pushArrayStart.bind(this),\n      pushArrayStartFixed: this.pushArrayStartFixed.bind(this),\n      pushArrayStartFixed32: this.pushArrayStartFixed32.bind(this),\n      pushArrayStartFixed64: this.pushArrayStartFixed64.bind(this),\n      pushObjectStart: this.pushObjectStart.bind(this),\n      pushObjectStartFixed: this.pushObjectStartFixed.bind(this),\n      pushObjectStartFixed32: this.pushObjectStartFixed32.bind(this),\n      pushObjectStartFixed64: this.pushObjectStartFixed64.bind(this),\n      pushByteString: this.pushByteString.bind(this),\n      pushByteStringStart: this.pushByteStringStart.bind(this),\n      pushUtf8String: this.pushUtf8String.bind(this),\n      pushUtf8StringStart: this.pushUtf8StringStart.bind(this),\n      pushSimpleUnassigned: this.pushSimpleUnassigned.bind(this),\n      pushTagUnassigned: this.pushTagUnassigned.bind(this),\n      pushTagStart: this.pushTagStart.bind(this),\n      pushTagStart4: this.pushTagStart4.bind(this),\n      pushTagStart8: this.pushTagStart8.bind(this),\n      pushBreak: this.pushBreak.bind(this)\n    }, this._heap)\n  }\n\n  get _depth () {\n    return this._parents.length\n  }\n\n  get _currentParent () {\n    return this._parents[this._depth - 1]\n  }\n\n  get _ref () {\n    return this._currentParent.ref\n  }\n\n  // Finish the current parent\n  _closeParent () {\n    var p = this._parents.pop()\n\n    if (p.length > 0) {\n      throw new Error(`Missing ${p.length} elements`)\n    }\n\n    switch (p.type) {\n      case c.PARENT.TAG:\n        this._push(\n          this.createTag(p.ref[0], p.ref[1])\n        )\n        break\n      case c.PARENT.BYTE_STRING:\n        this._push(this.createByteString(p.ref, p.length))\n        break\n      case c.PARENT.UTF8_STRING:\n        this._push(this.createUtf8String(p.ref, p.length))\n        break\n      case c.PARENT.MAP:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map')\n        }\n        this._push(this.createMap(p.ref, p.length))\n        break\n      case c.PARENT.OBJECT:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map')\n        }\n        this._push(this.createObject(p.ref, p.length))\n        break\n      case c.PARENT.ARRAY:\n        this._push(this.createArray(p.ref, p.length))\n        break\n      default:\n        break\n    }\n\n    if (this._currentParent && this._currentParent.type === c.PARENT.TAG) {\n      this._dec()\n    }\n  }\n\n  // Reduce the expected length of the current parent by one\n  _dec () {\n    const p = this._currentParent\n    // The current parent does not know the epxected child length\n\n    if (p.length < 0) {\n      return\n    }\n\n    p.length--\n\n    // All children were seen, we can close the current parent\n    if (p.length === 0) {\n      this._closeParent()\n    }\n  }\n\n  // Push any value to the current parent\n  _push (val, hasChildren) {\n    const p = this._currentParent\n    p.values++\n\n    switch (p.type) {\n      case c.PARENT.ARRAY:\n      case c.PARENT.BYTE_STRING:\n      case c.PARENT.UTF8_STRING:\n        if (p.length > -1) {\n          this._ref[this._ref.length - p.length] = val\n        } else {\n          this._ref.push(val)\n        }\n        this._dec()\n        break\n      case c.PARENT.OBJECT:\n        if (p.tmpKey != null) {\n          this._ref[p.tmpKey] = val\n          p.tmpKey = null\n          this._dec()\n        } else {\n          p.tmpKey = val\n\n          if (typeof p.tmpKey !== 'string') {\n            // too bad, convert to a Map\n            p.type = c.PARENT.MAP\n            p.ref = utils.buildMap(p.ref)\n          }\n        }\n        break\n      case c.PARENT.MAP:\n        if (p.tmpKey != null) {\n          this._ref.set(p.tmpKey, val)\n          p.tmpKey = null\n          this._dec()\n        } else {\n          p.tmpKey = val\n        }\n        break\n      case c.PARENT.TAG:\n        this._ref.push(val)\n        if (!hasChildren) {\n          this._dec()\n        }\n        break\n      default:\n        throw new Error('Unknown parent type')\n    }\n  }\n\n  // Create a new parent in the parents list\n  _createParent (obj, type, len) {\n    this._parents[this._depth] = {\n      type: type,\n      length: len,\n      ref: obj,\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  // Reset all state back to the beginning, also used for initiatlization\n  _reset () {\n    this._res = []\n    this._parents = [{\n      type: c.PARENT.ARRAY,\n      length: -1,\n      ref: this._res,\n      values: 0,\n      tmpKey: null\n    }]\n  }\n\n  // -- Interface to customize deoding behaviour\n  createTag (tagNumber, value) {\n    const typ = this._knownTags[tagNumber]\n\n    if (!typ) {\n      return new Tagged(tagNumber, value)\n    }\n\n    return typ(value)\n  }\n\n  createMap (obj, len) {\n    return obj\n  }\n\n  createObject (obj, len) {\n    return obj\n  }\n\n  createArray (arr, len) {\n    return arr\n  }\n\n  createByteString (raw, len) {\n    return Buffer.concat(raw)\n  }\n\n  createByteStringFromHeap (start, end) {\n    if (start === end) {\n      return Buffer.alloc(0)\n    }\n\n    return Buffer.from(this._heap.slice(start, end))\n  }\n\n  createInt (val) {\n    return val\n  }\n\n  createInt32 (f, g) {\n    return utils.buildInt32(f, g)\n  }\n\n  createInt64 (f1, f2, g1, g2) {\n    return utils.buildInt64(f1, f2, g1, g2)\n  }\n\n  createFloat (val) {\n    return val\n  }\n\n  createFloatSingle (a, b, c, d) {\n    return ieee754.read([a, b, c, d], 0, false, 23, 4)\n  }\n\n  createFloatDouble (a, b, c, d, e, f, g, h) {\n    return ieee754.read([a, b, c, d, e, f, g, h], 0, false, 52, 8)\n  }\n\n  createInt32Neg (f, g) {\n    return -1 - utils.buildInt32(f, g)\n  }\n\n  createInt64Neg (f1, f2, g1, g2) {\n    const f = utils.buildInt32(f1, f2)\n    const g = utils.buildInt32(g1, g2)\n\n    if (f > c.MAX_SAFE_HIGH) {\n      return c.NEG_ONE.minus(new Bignumber(f).times(c.SHIFT32).plus(g))\n    }\n\n    return -1 - ((f * c.SHIFT32) + g)\n  }\n\n  createTrue () {\n    return true\n  }\n\n  createFalse () {\n    return false\n  }\n\n  createNull () {\n    return null\n  }\n\n  createUndefined () {\n    return undefined\n  }\n\n  createInfinity () {\n    return Infinity\n  }\n\n  createInfinityNeg () {\n    return -Infinity\n  }\n\n  createNaN () {\n    return NaN\n  }\n\n  createNaNNeg () {\n    return -NaN\n  }\n\n  createUtf8String (raw, len) {\n    return raw.join('')\n  }\n\n  createUtf8StringFromHeap (start, end) {\n    if (start === end) {\n      return ''\n    }\n\n    return this._buffer.toString('utf8', start, end)\n  }\n\n  createSimpleUnassigned (val) {\n    return new Simple(val)\n  }\n\n  // -- Interface for decoder.asm.js\n\n  pushInt (val) {\n    this._push(this.createInt(val))\n  }\n\n  pushInt32 (f, g) {\n    this._push(this.createInt32(f, g))\n  }\n\n  pushInt64 (f1, f2, g1, g2) {\n    this._push(this.createInt64(f1, f2, g1, g2))\n  }\n\n  pushFloat (val) {\n    this._push(this.createFloat(val))\n  }\n\n  pushFloatSingle (a, b, c, d) {\n    this._push(this.createFloatSingle(a, b, c, d))\n  }\n\n  pushFloatDouble (a, b, c, d, e, f, g, h) {\n    this._push(this.createFloatDouble(a, b, c, d, e, f, g, h))\n  }\n\n  pushInt32Neg (f, g) {\n    this._push(this.createInt32Neg(f, g))\n  }\n\n  pushInt64Neg (f1, f2, g1, g2) {\n    this._push(this.createInt64Neg(f1, f2, g1, g2))\n  }\n\n  pushTrue () {\n    this._push(this.createTrue())\n  }\n\n  pushFalse () {\n    this._push(this.createFalse())\n  }\n\n  pushNull () {\n    this._push(this.createNull())\n  }\n\n  pushUndefined () {\n    this._push(this.createUndefined())\n  }\n\n  pushInfinity () {\n    this._push(this.createInfinity())\n  }\n\n  pushInfinityNeg () {\n    this._push(this.createInfinityNeg())\n  }\n\n  pushNaN () {\n    this._push(this.createNaN())\n  }\n\n  pushNaNNeg () {\n    this._push(this.createNaNNeg())\n  }\n\n  pushArrayStart () {\n    this._createParent([], c.PARENT.ARRAY, -1)\n  }\n\n  pushArrayStartFixed (len) {\n    this._createArrayStartFixed(len)\n  }\n\n  pushArrayStartFixed32 (len1, len2) {\n    const len = utils.buildInt32(len1, len2)\n    this._createArrayStartFixed(len)\n  }\n\n  pushArrayStartFixed64 (len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4)\n    this._createArrayStartFixed(len)\n  }\n\n  pushObjectStart () {\n    this._createObjectStartFixed(-1)\n  }\n\n  pushObjectStartFixed (len) {\n    this._createObjectStartFixed(len)\n  }\n\n  pushObjectStartFixed32 (len1, len2) {\n    const len = utils.buildInt32(len1, len2)\n    this._createObjectStartFixed(len)\n  }\n\n  pushObjectStartFixed64 (len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4)\n    this._createObjectStartFixed(len)\n  }\n\n  pushByteStringStart () {\n    this._parents[this._depth] = {\n      type: c.PARENT.BYTE_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  pushByteString (start, end) {\n    this._push(this.createByteStringFromHeap(start, end))\n  }\n\n  pushUtf8StringStart () {\n    this._parents[this._depth] = {\n      type: c.PARENT.UTF8_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  pushUtf8String (start, end) {\n    this._push(this.createUtf8StringFromHeap(start, end))\n  }\n\n  pushSimpleUnassigned (val) {\n    this._push(this.createSimpleUnassigned(val))\n  }\n\n  pushTagStart (tag) {\n    this._parents[this._depth] = {\n      type: c.PARENT.TAG,\n      length: 1,\n      ref: [tag]\n    }\n  }\n\n  pushTagStart4 (f, g) {\n    this.pushTagStart(utils.buildInt32(f, g))\n  }\n\n  pushTagStart8 (f1, f2, g1, g2) {\n    this.pushTagStart(utils.buildInt64(f1, f2, g1, g2))\n  }\n\n  pushTagUnassigned (tagNumber) {\n    this._push(this.createTag(tagNumber))\n  }\n\n  pushBreak () {\n    if (this._currentParent.length > -1) {\n      throw new Error('Unexpected break')\n    }\n\n    this._closeParent()\n  }\n\n  _createObjectStartFixed (len) {\n    if (len === 0) {\n      this._push(this.createObject({}))\n      return\n    }\n\n    this._createParent({}, c.PARENT.OBJECT, len)\n  }\n\n  _createArrayStartFixed (len) {\n    if (len === 0) {\n      this._push(this.createArray([]))\n      return\n    }\n\n    this._createParent(new Array(len), c.PARENT.ARRAY, len)\n  }\n\n  _decode (input) {\n    if (input.byteLength === 0) {\n      throw new Error('Input too short')\n    }\n\n    this._reset()\n    this._heap8.set(input)\n    const code = this.parser.parse(input.byteLength)\n\n    if (this._depth > 1) {\n      while (this._currentParent.length === 0) {\n        this._closeParent()\n      }\n      if (this._depth > 1) {\n        throw new Error('Undeterminated nesting')\n      }\n    }\n\n    if (code > 0) {\n      throw new Error('Failed to parse')\n    }\n\n    if (this._res.length === 0) {\n      throw new Error('No valid result')\n    }\n  }\n\n  // -- Public Interface\n\n  decodeFirst (input) {\n    this._decode(input)\n\n    return this._res[0]\n  }\n\n  decodeAll (input) {\n    this._decode(input)\n\n    return this._res\n  }\n\n  /**\n   * Decode the first cbor object.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {*}\n   */\n  static decode (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Decoder({ size: input.length })\n    return dec.decodeFirst(input)\n  }\n\n  /**\n   * Decode all cbor objects.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {Array<*>}\n   */\n  static decodeAll (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Decoder({ size: input.length })\n    return dec.decodeAll(input)\n  }\n}\n\nDecoder.decodeFirst = Decoder.decode\n\nmodule.exports = Decoder\n", "'use strict'\n\nconst { Buffer } = require('buffer')\nconst Decoder = require('./decoder')\nconst utils = require('./utils')\n\n/**\n * Output the diagnostic format from a stream of CBOR bytes.\n *\n */\nclass Diagnose extends Decoder {\n  createTag (tagNumber, value) {\n    return `${tagNumber}(${value})`\n  }\n\n  createInt (val) {\n    return super.createInt(val).toString()\n  }\n\n  createInt32 (f, g) {\n    return super.createInt32(f, g).toString()\n  }\n\n  createInt64 (f1, f2, g1, g2) {\n    return super.createInt64(f1, f2, g1, g2).toString()\n  }\n\n  createInt32Neg (f, g) {\n    return super.createInt32Neg(f, g).toString()\n  }\n\n  createInt64Neg (f1, f2, g1, g2) {\n    return super.createInt64Neg(f1, f2, g1, g2).toString()\n  }\n\n  createTrue () {\n    return 'true'\n  }\n\n  createFalse () {\n    return 'false'\n  }\n\n  createFloat (val) {\n    const fl = super.createFloat(val)\n    if (utils.isNegativeZero(val)) {\n      return '-0_1'\n    }\n\n    return `${fl}_1`\n  }\n\n  createFloatSingle (a, b, c, d) {\n    const fl = super.createFloatSingle(a, b, c, d)\n    return `${fl}_2`\n  }\n\n  createFloatDouble (a, b, c, d, e, f, g, h) {\n    const fl = super.createFloatDouble(a, b, c, d, e, f, g, h)\n    return `${fl}_3`\n  }\n\n  createByteString (raw, len) {\n    const val = raw.join(', ')\n\n    if (len === -1) {\n      return `(_ ${val})`\n    }\n    return `h'${val}`\n  }\n\n  createByteStringFromHeap (start, end) {\n    const val = (Buffer.from(\n      super.createByteStringFromHeap(start, end)\n    )).toString('hex')\n\n    return `h'${val}'`\n  }\n\n  createInfinity () {\n    return 'Infinity_1'\n  }\n\n  createInfinityNeg () {\n    return '-Infinity_1'\n  }\n\n  createNaN () {\n    return 'NaN_1'\n  }\n\n  createNaNNeg () {\n    return '-NaN_1'\n  }\n\n  createNull () {\n    return 'null'\n  }\n\n  createUndefined () {\n    return 'undefined'\n  }\n\n  createSimpleUnassigned (val) {\n    return `simple(${val})`\n  }\n\n  createArray (arr, len) {\n    const val = super.createArray(arr, len)\n\n    if (len === -1) {\n      // indefinite\n      return `[_ ${val.join(', ')}]`\n    }\n\n    return `[${val.join(', ')}]`\n  }\n\n  createMap (map, len) {\n    const val = super.createMap(map)\n    const list = Array.from(val.keys())\n      .reduce(collectObject(val), '')\n\n    if (len === -1) {\n      return `{_ ${list}}`\n    }\n\n    return `{${list}}`\n  }\n\n  createObject (obj, len) {\n    const val = super.createObject(obj)\n    const map = Object.keys(val)\n      .reduce(collectObject(val), '')\n\n    if (len === -1) {\n      return `{_ ${map}}`\n    }\n\n    return `{${map}}`\n  }\n\n  createUtf8String (raw, len) {\n    const val = raw.join(', ')\n\n    if (len === -1) {\n      return `(_ ${val})`\n    }\n\n    return `\"${val}\"`\n  }\n\n  createUtf8StringFromHeap (start, end) {\n    const val = (Buffer.from(\n      super.createUtf8StringFromHeap(start, end)\n    )).toString('utf8')\n\n    return `\"${val}\"`\n  }\n\n  static diagnose (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Diagnose()\n    return dec.decodeFirst(input)\n  }\n}\n\nmodule.exports = Diagnose\n\nfunction collectObject (val) {\n  return (acc, key) => {\n    if (acc) {\n      return `${acc}, ${key}: ${val[key]}`\n    }\n    return `${key}: ${val[key]}`\n  }\n}\n", "'use strict'\n\nconst { Buffer } = require('buffer')\nconst { URL } = require('iso-url')\nconst Bignumber = require('bignumber.js').BigNumber\n\nconst utils = require('./utils')\nconst constants = require('./constants')\nconst MT = constants.MT\nconst NUMBYTES = constants.NUMBYTES\nconst SHIFT32 = constants.SHIFT32\nconst SYMS = constants.SYMS\nconst TAG = constants.TAG\nconst HALF = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.TWO\nconst FLOAT = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.FOUR\nconst DOUBLE = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.EIGHT\nconst TRUE = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.TRUE\nconst FALSE = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.FALSE\nconst UNDEFINED = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.UNDEFINED\nconst NULL = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.NULL\n\nconst MAXINT_BN = new Bignumber('0x20000000000000')\nconst BUF_NAN = Buffer.from('f97e00', 'hex')\nconst BUF_INF_NEG = Buffer.from('f9fc00', 'hex')\nconst BUF_INF_POS = Buffer.from('f97c00', 'hex')\n\nfunction toType (obj) {\n  // [object Type]\n  // --------8---1\n  return ({}).toString.call(obj).slice(8, -1)\n}\n\n/**\n * Transform JavaScript values into CBOR bytes\n *\n */\nclass Encoder {\n  /**\n   * @param {Object} [options={}]\n   * @param {function(Buffer)} options.stream\n   */\n  constructor (options) {\n    options = options || {}\n\n    this.streaming = typeof options.stream === 'function'\n    this.onData = options.stream\n\n    this.semanticTypes = [\n      [URL, this._pushUrl],\n      [Bignumber, this._pushBigNumber]\n    ]\n\n    const addTypes = options.genTypes || []\n    const len = addTypes.length\n    for (let i = 0; i < len; i++) {\n      this.addSemanticType(\n        addTypes[i][0],\n        addTypes[i][1]\n      )\n    }\n\n    this._reset()\n  }\n\n  addSemanticType (type, fun) {\n    const len = this.semanticTypes.length\n    for (let i = 0; i < len; i++) {\n      const typ = this.semanticTypes[i][0]\n      if (typ === type) {\n        const old = this.semanticTypes[i][1]\n        this.semanticTypes[i][1] = fun\n        return old\n      }\n    }\n    this.semanticTypes.push([type, fun])\n    return null\n  }\n\n  push (val) {\n    if (!val) {\n      return true\n    }\n\n    this.result[this.offset] = val\n    this.resultMethod[this.offset] = 0\n    this.resultLength[this.offset] = val.length\n    this.offset++\n\n    if (this.streaming) {\n      this.onData(this.finalize())\n    }\n\n    return true\n  }\n\n  pushWrite (val, method, len) {\n    this.result[this.offset] = val\n    this.resultMethod[this.offset] = method\n    this.resultLength[this.offset] = len\n    this.offset++\n\n    if (this.streaming) {\n      this.onData(this.finalize())\n    }\n\n    return true\n  }\n\n  _pushUInt8 (val) {\n    return this.pushWrite(val, 1, 1)\n  }\n\n  _pushUInt16BE (val) {\n    return this.pushWrite(val, 2, 2)\n  }\n\n  _pushUInt32BE (val) {\n    return this.pushWrite(val, 3, 4)\n  }\n\n  _pushDoubleBE (val) {\n    return this.pushWrite(val, 4, 8)\n  }\n\n  _pushNaN () {\n    return this.push(BUF_NAN)\n  }\n\n  _pushInfinity (obj) {\n    const half = (obj < 0) ? BUF_INF_NEG : BUF_INF_POS\n    return this.push(half)\n  }\n\n  _pushFloat (obj) {\n    const b2 = Buffer.allocUnsafe(2)\n\n    if (utils.writeHalf(b2, obj)) {\n      if (utils.parseHalf(b2) === obj) {\n        return this._pushUInt8(HALF) && this.push(b2)\n      }\n    }\n\n    const b4 = Buffer.allocUnsafe(4)\n    b4.writeFloatBE(obj, 0)\n    if (b4.readFloatBE(0) === obj) {\n      return this._pushUInt8(FLOAT) && this.push(b4)\n    }\n\n    return this._pushUInt8(DOUBLE) && this._pushDoubleBE(obj)\n  }\n\n  _pushInt (obj, mt, orig) {\n    const m = mt << 5\n    if (obj < 24) {\n      return this._pushUInt8(m | obj)\n    }\n\n    if (obj <= 0xff) {\n      return this._pushUInt8(m | NUMBYTES.ONE) && this._pushUInt8(obj)\n    }\n\n    if (obj <= 0xffff) {\n      return this._pushUInt8(m | NUMBYTES.TWO) && this._pushUInt16BE(obj)\n    }\n\n    if (obj <= 0xffffffff) {\n      return this._pushUInt8(m | NUMBYTES.FOUR) && this._pushUInt32BE(obj)\n    }\n\n    if (obj <= Number.MAX_SAFE_INTEGER) {\n      return this._pushUInt8(m | NUMBYTES.EIGHT) &&\n        this._pushUInt32BE(Math.floor(obj / SHIFT32)) &&\n        this._pushUInt32BE(obj % SHIFT32)\n    }\n\n    if (mt === MT.NEG_INT) {\n      return this._pushFloat(orig)\n    }\n\n    return this._pushFloat(obj)\n  }\n\n  _pushIntNum (obj) {\n    if (obj < 0) {\n      return this._pushInt(-obj - 1, MT.NEG_INT, obj)\n    } else {\n      return this._pushInt(obj, MT.POS_INT)\n    }\n  }\n\n  _pushNumber (obj) {\n    switch (false) {\n      case (obj === obj): // eslint-disable-line\n        return this._pushNaN(obj)\n      case isFinite(obj):\n        return this._pushInfinity(obj)\n      case ((obj % 1) !== 0):\n        return this._pushIntNum(obj)\n      default:\n        return this._pushFloat(obj)\n    }\n  }\n\n  _pushString (obj) {\n    const len = Buffer.byteLength(obj, 'utf8')\n    return this._pushInt(len, MT.UTF8_STRING) && this.pushWrite(obj, 5, len)\n  }\n\n  _pushBoolean (obj) {\n    return this._pushUInt8(obj ? TRUE : FALSE)\n  }\n\n  _pushUndefined (obj) {\n    return this._pushUInt8(UNDEFINED)\n  }\n\n  _pushArray (gen, obj) {\n    const len = obj.length\n    if (!gen._pushInt(len, MT.ARRAY)) {\n      return false\n    }\n    for (let j = 0; j < len; j++) {\n      if (!gen.pushAny(obj[j])) {\n        return false\n      }\n    }\n    return true\n  }\n\n  _pushTag (tag) {\n    return this._pushInt(tag, MT.TAG)\n  }\n\n  _pushDate (gen, obj) {\n    // Round date, to get seconds since 1970-01-01 00:00:00 as defined in\n    // Sec. 2.4.1 and get a possibly more compact encoding. Note that it is\n    // still allowed to encode fractions of seconds which can be achieved by\n    // changing overwriting the encode function for Date objects.\n    return gen._pushTag(TAG.DATE_EPOCH) && gen.pushAny(Math.round(obj / 1000))\n  }\n\n  _pushBuffer (gen, obj) {\n    return gen._pushInt(obj.length, MT.BYTE_STRING) && gen.push(obj)\n  }\n\n  _pushNoFilter (gen, obj) {\n    return gen._pushBuffer(gen, obj.slice())\n  }\n\n  _pushRegexp (gen, obj) {\n    return gen._pushTag(TAG.REGEXP) && gen.pushAny(obj.source)\n  }\n\n  _pushSet (gen, obj) {\n    if (!gen._pushInt(obj.size, MT.ARRAY)) {\n      return false\n    }\n    for (const x of obj) {\n      if (!gen.pushAny(x)) {\n        return false\n      }\n    }\n    return true\n  }\n\n  _pushUrl (gen, obj) {\n    return gen._pushTag(TAG.URI) && gen.pushAny(obj.format())\n  }\n\n  _pushBigint (obj) {\n    let tag = TAG.POS_BIGINT\n    if (obj.isNegative()) {\n      obj = obj.negated().minus(1)\n      tag = TAG.NEG_BIGINT\n    }\n    let str = obj.toString(16)\n    if (str.length % 2) {\n      str = '0' + str\n    }\n    const buf = Buffer.from(str, 'hex')\n    return this._pushTag(tag) && this._pushBuffer(this, buf)\n  }\n\n  _pushBigNumber (gen, obj) {\n    if (obj.isNaN()) {\n      return gen._pushNaN()\n    }\n    if (!obj.isFinite()) {\n      return gen._pushInfinity(obj.isNegative() ? -Infinity : Infinity)\n    }\n    if (obj.isInteger()) {\n      return gen._pushBigint(obj)\n    }\n    if (!(gen._pushTag(TAG.DECIMAL_FRAC) &&\n      gen._pushInt(2, MT.ARRAY))) {\n      return false\n    }\n\n    const dec = obj.decimalPlaces()\n    const slide = obj.multipliedBy(new Bignumber(10).pow(dec))\n    if (!gen._pushIntNum(-dec)) {\n      return false\n    }\n    if (slide.abs().isLessThan(MAXINT_BN)) {\n      return gen._pushIntNum(slide.toNumber())\n    } else {\n      return gen._pushBigint(slide)\n    }\n  }\n\n  _pushMap (gen, obj) {\n    if (!gen._pushInt(obj.size, MT.MAP)) {\n      return false\n    }\n\n    return this._pushRawMap(\n      obj.size,\n      Array.from(obj)\n    )\n  }\n\n  _pushObject (obj) {\n    if (!obj) {\n      return this._pushUInt8(NULL)\n    }\n\n    var len = this.semanticTypes.length\n    for (var i = 0; i < len; i++) {\n      if (obj instanceof this.semanticTypes[i][0]) {\n        return this.semanticTypes[i][1].call(obj, this, obj)\n      }\n    }\n\n    var f = obj.encodeCBOR\n    if (typeof f === 'function') {\n      return f.call(obj, this)\n    }\n\n    var keys = Object.keys(obj)\n    var keyLength = keys.length\n    if (!this._pushInt(keyLength, MT.MAP)) {\n      return false\n    }\n\n    return this._pushRawMap(\n      keyLength,\n      keys.map((k) => [k, obj[k]])\n    )\n  }\n\n  _pushRawMap (len, map) {\n    // Sort keys for canoncialization\n    // 1. encode key\n    // 2. shorter key comes before longer key\n    // 3. same length keys are sorted with lower\n    //    byte value before higher\n\n    map = map.map(function (a) {\n      a[0] = Encoder.encode(a[0])\n      return a\n    }).sort(utils.keySorter)\n\n    for (var j = 0; j < len; j++) {\n      if (!this.push(map[j][0])) {\n        return false\n      }\n\n      if (!this.pushAny(map[j][1])) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  /**\n   * Alias for `.pushAny`\n   *\n   * @param {*} obj\n   * @returns {boolean} true on success\n   */\n  write (obj) {\n    return this.pushAny(obj)\n  }\n\n  /**\n   * Push any supported type onto the encoded stream\n   *\n   * @param {any} obj\n   * @returns {boolean} true on success\n   */\n  pushAny (obj) {\n    var typ = toType(obj)\n\n    switch (typ) {\n      case 'Number':\n        return this._pushNumber(obj)\n      case 'String':\n        return this._pushString(obj)\n      case 'Boolean':\n        return this._pushBoolean(obj)\n      case 'Object':\n        return this._pushObject(obj)\n      case 'Array':\n        return this._pushArray(this, obj)\n      case 'Uint8Array':\n        return this._pushBuffer(this, Buffer.isBuffer(obj) ? obj : Buffer.from(obj))\n      case 'Null':\n        return this._pushUInt8(NULL)\n      case 'Undefined':\n        return this._pushUndefined(obj)\n      case 'Map':\n        return this._pushMap(this, obj)\n      case 'Set':\n        return this._pushSet(this, obj)\n      case 'URL':\n        return this._pushUrl(this, obj)\n      case 'BigNumber':\n        return this._pushBigNumber(this, obj)\n      case 'Date':\n        return this._pushDate(this, obj)\n      case 'RegExp':\n        return this._pushRegexp(this, obj)\n      case 'Symbol':\n        switch (obj) {\n          case SYMS.NULL:\n            return this._pushObject(null)\n          case SYMS.UNDEFINED:\n            return this._pushUndefined(undefined)\n          // TODO: Add pluggable support for other symbols\n          default:\n            throw new Error('Unknown symbol: ' + obj.toString())\n        }\n      default:\n        throw new Error('Unknown type: ' + typeof obj + ', ' + (obj ? obj.toString() : ''))\n    }\n  }\n\n  finalize () {\n    if (this.offset === 0) {\n      return null\n    }\n\n    var result = this.result\n    var resultLength = this.resultLength\n    var resultMethod = this.resultMethod\n    var offset = this.offset\n\n    // Determine the size of the buffer\n    var size = 0\n    var i = 0\n\n    for (; i < offset; i++) {\n      size += resultLength[i]\n    }\n\n    var res = Buffer.allocUnsafe(size)\n    var index = 0\n    var length = 0\n\n    // Write the content into the result buffer\n    for (i = 0; i < offset; i++) {\n      length = resultLength[i]\n\n      switch (resultMethod[i]) {\n        case 0:\n          result[i].copy(res, index)\n          break\n        case 1:\n          res.writeUInt8(result[i], index, true)\n          break\n        case 2:\n          res.writeUInt16BE(result[i], index, true)\n          break\n        case 3:\n          res.writeUInt32BE(result[i], index, true)\n          break\n        case 4:\n          res.writeDoubleBE(result[i], index, true)\n          break\n        case 5:\n          res.write(result[i], index, length, 'utf8')\n          break\n        default:\n          throw new Error('unkown method')\n      }\n\n      index += length\n    }\n\n    var tmp = res\n\n    this._reset()\n\n    return tmp\n  }\n\n  _reset () {\n    this.result = []\n    this.resultMethod = []\n    this.resultLength = []\n    this.offset = 0\n  }\n\n  /**\n   * Encode the given value\n   * @param {*} o\n   * @returns {Buffer}\n   */\n  static encode (o) {\n    const enc = new Encoder()\n    const ret = enc.pushAny(o)\n    if (!ret) {\n      throw new Error('Failed to encode input')\n    }\n\n    return enc.finalize()\n  }\n}\n\nmodule.exports = Encoder\n", "'use strict'\n\n// exports.Commented = require('./commented')\nexports.Diagnose = require('./diagnose')\nexports.Decoder = require('./decoder')\nexports.Encoder = require('./encoder')\nexports.Simple = require('./simple')\nexports.Tagged = require('./tagged')\n\n// exports.comment = exports.Commented.comment\nexports.decodeAll = exports.Decoder.decodeAll\nexports.decodeFirst = exports.Decoder.decodeFirst\nexports.diagnose = exports.Diagnose.diagnose\nexports.encode = exports.Encoder.encode\nexports.decode = exports.Decoder.decode\n\nexports.leveldb = {\n  decode: exports.Decoder.decodeAll,\n  encode: exports.Encoder.encode,\n  buffer: true,\n  name: 'cbor'\n}\n", null, null, null, "/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n", "// tslint:disable:max-classes-per-file\nimport { Principal as PrincipalId } from '@dfinity/principal';\nimport { JsonValue } from './types';\nimport { concat, PipeArrayBuffer as Pipe } from './utils/buffer';\nimport { idlLabelToId } from './utils/hash';\nimport {\n  lebDecode,\n  lebEncode,\n  readIntLE,\n  readUIntLE,\n  safeRead,\n  safeReadUint8,\n  slebDecode,\n  slebEncode,\n  writeIntLE,\n  writeUIntLE,\n} from './utils/leb128';\nimport { iexp2 } from './utils/bigint-math';\n\n// tslint:disable:max-line-length\n/**\n * This module provides a combinator library to create serializers/deserializers\n * between JavaScript values and IDL used by canisters on the Internet Computer,\n * as documented at https://github.com/dfinity/candid/blob/119703ba342d2fef6ab4972d2541b9fe36ae8e36/spec/Candid.md\n */\n// tslint:enable:max-line-length\n\nconst enum IDLTypeIds {\n  Null = -1,\n  Bool = -2,\n  Nat = -3,\n  Int = -4,\n  Float32 = -13,\n  Float64 = -14,\n  Text = -15,\n  Reserved = -16,\n  Empty = -17,\n  Opt = -18,\n  Vector = -19,\n  Record = -20,\n  Variant = -21,\n  Func = -22,\n  Service = -23,\n  Principal = -24,\n}\n\nconst magicNumber = 'DIDL';\nconst toReadableString_max = 400; // will not display arguments after 400chars. Makes sure 2mb blobs don't get inside the error\n\nfunction zipWith<TX, TY, TR>(xs: TX[], ys: TY[], f: (a: TX, b: TY) => TR): TR[] {\n  return xs.map((x, i) => f(x, ys[i]));\n}\n\n/**\n * An IDL Type Table, which precedes the data in the stream.\n */\nclass TypeTable {\n  // List of types. Needs to be an array as the index needs to be stable.\n  private _typs: ArrayBuffer[] = [];\n  private _idx = new Map<string, number>();\n\n  public has(obj: ConstructType) {\n    return this._idx.has(obj.name);\n  }\n\n  public add<T>(type: ConstructType<T>, buf: ArrayBuffer) {\n    const idx = this._typs.length;\n    this._idx.set(type.name, idx);\n    this._typs.push(buf);\n  }\n\n  public merge<T>(obj: ConstructType<T>, knot: string) {\n    const idx = this._idx.get(obj.name);\n    const knotIdx = this._idx.get(knot);\n    if (idx === undefined) {\n      throw new Error('Missing type index for ' + obj);\n    }\n    if (knotIdx === undefined) {\n      throw new Error('Missing type index for ' + knot);\n    }\n    this._typs[idx] = this._typs[knotIdx];\n\n    // Delete the type.\n    this._typs.splice(knotIdx, 1);\n    this._idx.delete(knot);\n  }\n\n  public encode() {\n    const len = lebEncode(this._typs.length);\n    const buf = concat(...this._typs);\n    return concat(len, buf);\n  }\n\n  public indexOf(typeName: string) {\n    if (!this._idx.has(typeName)) {\n      throw new Error('Missing type index for ' + typeName);\n    }\n    return slebEncode(this._idx.get(typeName) || 0);\n  }\n}\n\nexport abstract class Visitor<D, R> {\n  public visitType<T>(t: Type<T>, data: D): R {\n    throw new Error('Not implemented');\n  }\n  public visitPrimitive<T>(t: PrimitiveType<T>, data: D): R {\n    return this.visitType(t, data);\n  }\n  public visitEmpty(t: EmptyClass, data: D): R {\n    return this.visitPrimitive(t, data);\n  }\n  public visitBool(t: BoolClass, data: D): R {\n    return this.visitPrimitive(t, data);\n  }\n  public visitNull(t: NullClass, data: D): R {\n    return this.visitPrimitive(t, data);\n  }\n  public visitReserved(t: ReservedClass, data: D): R {\n    return this.visitPrimitive(t, data);\n  }\n  public visitText(t: TextClass, data: D): R {\n    return this.visitPrimitive(t, data);\n  }\n  public visitNumber<T>(t: PrimitiveType<T>, data: D): R {\n    return this.visitPrimitive(t, data);\n  }\n  public visitInt(t: IntClass, data: D): R {\n    return this.visitNumber(t, data);\n  }\n  public visitNat(t: NatClass, data: D): R {\n    return this.visitNumber(t, data);\n  }\n  public visitFloat(t: FloatClass, data: D): R {\n    return this.visitPrimitive(t, data);\n  }\n  public visitFixedInt(t: FixedIntClass, data: D): R {\n    return this.visitNumber(t, data);\n  }\n  public visitFixedNat(t: FixedNatClass, data: D): R {\n    return this.visitNumber(t, data);\n  }\n  public visitPrincipal(t: PrincipalClass, data: D): R {\n    return this.visitPrimitive(t, data);\n  }\n\n  public visitConstruct<T>(t: ConstructType<T>, data: D): R {\n    return this.visitType(t, data);\n  }\n  public visitVec<T>(t: VecClass<T>, ty: Type<T>, data: D): R {\n    return this.visitConstruct(t, data);\n  }\n  public visitOpt<T>(t: OptClass<T>, ty: Type<T>, data: D): R {\n    return this.visitConstruct(t, data);\n  }\n  public visitRecord(t: RecordClass, fields: Array<[string, Type]>, data: D): R {\n    return this.visitConstruct(t, data);\n  }\n  public visitTuple<T extends any[]>(t: TupleClass<T>, components: Type[], data: D): R {\n    const fields: Array<[string, Type]> = components.map((ty, i) => [`_${i}_`, ty]);\n    return this.visitRecord(t, fields, data);\n  }\n  public visitVariant(t: VariantClass, fields: Array<[string, Type]>, data: D): R {\n    return this.visitConstruct(t, data);\n  }\n  public visitRec<T>(t: RecClass<T>, ty: ConstructType<T>, data: D): R {\n    return this.visitConstruct(ty, data);\n  }\n  public visitFunc(t: FuncClass, data: D): R {\n    return this.visitConstruct(t, data);\n  }\n  public visitService(t: ServiceClass, data: D): R {\n    return this.visitConstruct(t, data);\n  }\n}\n\n/**\n * Represents an IDL type.\n */\nexport abstract class Type<T = any> {\n  public abstract readonly name: string;\n  public abstract accept<D, R>(v: Visitor<D, R>, d: D): R;\n\n  /* Display type name */\n  public display(): string {\n    return this.name;\n  }\n\n  public valueToString(x: T): string {\n    return toReadableString(x);\n  }\n\n  /* Implement `T` in the IDL spec, only needed for non-primitive types */\n  public buildTypeTable(typeTable: TypeTable): void {\n    if (!typeTable.has(this)) {\n      this._buildTypeTableImpl(typeTable);\n    }\n  }\n\n  /**\n   * Assert that JavaScript's `x` is the proper type represented by this\n   * Type.\n   */\n  public abstract covariant(x: any): x is T;\n\n  /**\n   * Encode the value. This needs to be public because it is used by\n   * encodeValue() from different types.\n   * @internal\n   */\n  public abstract encodeValue(x: T): ArrayBuffer;\n\n  /**\n   * Implement `I` in the IDL spec.\n   * Encode this type for the type table.\n   */\n  public abstract encodeType(typeTable: TypeTable): ArrayBuffer;\n\n  public abstract checkType(t: Type): Type;\n  public abstract decodeValue(x: Pipe, t: Type): T;\n\n  protected abstract _buildTypeTableImpl(typeTable: TypeTable): void;\n}\n\nexport abstract class PrimitiveType<T = any> extends Type<T> {\n  public checkType(t: Type): Type {\n    if (this.name !== t.name) {\n      throw new Error(`type mismatch: type on the wire ${t.name}, expect type ${this.name}`);\n    }\n    return t;\n  }\n  public _buildTypeTableImpl(typeTable: TypeTable): void {\n    // No type table encoding for Primitive types.\n    return;\n  }\n}\n\nexport abstract class ConstructType<T = any> extends Type<T> {\n  public checkType(t: Type): ConstructType<T> {\n    if (t instanceof RecClass) {\n      const ty = t.getType();\n      if (typeof ty === 'undefined') {\n        throw new Error('type mismatch with uninitialized type');\n      }\n      return ty;\n    }\n    throw new Error(`type mismatch: type on the wire ${t.name}, expect type ${this.name}`);\n  }\n  public encodeType(typeTable: TypeTable) {\n    return typeTable.indexOf(this.name);\n  }\n}\n\n/**\n * Represents an IDL Empty, a type which has no inhabitants.\n * Since no values exist for this type, it cannot be serialised or deserialised.\n * Result types like `Result<Text, Empty>` should always succeed.\n */\nexport class EmptyClass extends PrimitiveType<never> {\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitEmpty(this, d);\n  }\n\n  public covariant(x: any): x is never {\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(): never {\n    throw new Error('Empty cannot appear as a function argument');\n  }\n\n  public valueToString(): never {\n    throw new Error('Empty cannot appear as a value');\n  }\n\n  public encodeType() {\n    return slebEncode(IDLTypeIds.Empty);\n  }\n\n  public decodeValue(): never {\n    throw new Error('Empty cannot appear as an output');\n  }\n\n  get name() {\n    return 'empty';\n  }\n}\n\n/**\n * Represents an IDL Unknown, a placeholder type for deserialization only.\n * When decoding a value as Unknown, all fields will be retained but the names are only available in\n * hashed form.\n * A deserialized unknown will offer it's actual type by calling the `type()` function.\n * Unknown cannot be serialized and attempting to do so will throw an error.\n */\nexport class UnknownClass extends Type {\n  public checkType(t: Type): Type {\n    throw new Error('Method not implemented for unknown.');\n  }\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    throw v.visitType(this, d);\n  }\n\n  public covariant(x: any): x is any {\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(): never {\n    throw new Error('Unknown cannot appear as a function argument');\n  }\n\n  public valueToString(): never {\n    throw new Error('Unknown cannot appear as a value');\n  }\n\n  public encodeType(): never {\n    throw new Error('Unknown cannot be serialized');\n  }\n\n  public decodeValue(b: Pipe, t: Type): any {\n    let decodedValue = t.decodeValue(b, t);\n\n    if (Object(decodedValue) !== decodedValue) {\n      // decodedValue is primitive. Box it, otherwise we cannot add the type() function.\n      // The type() function is important for primitives because otherwise we cannot tell apart the\n      // different number types.\n      decodedValue = Object(decodedValue);\n    }\n\n    let typeFunc;\n    if (t instanceof RecClass) {\n      typeFunc = () => t.getType();\n    } else {\n      typeFunc = () => t;\n    }\n    // Do not use 'decodedValue.type = typeFunc' because this would lead to an enumerable property\n    // 'type' which means it would be serialized if the value would be candid encoded again.\n    // This in turn leads to problems if the decoded value is a variant because these values are\n    // only allowed to have a single property.\n    Object.defineProperty(decodedValue, 'type', {\n      value: typeFunc,\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    });\n    return decodedValue;\n  }\n\n  protected _buildTypeTableImpl(): void {\n    throw new Error('Unknown cannot be serialized');\n  }\n\n  get name() {\n    return 'Unknown';\n  }\n}\n\n/**\n * Represents an IDL Bool\n */\nexport class BoolClass extends PrimitiveType<boolean> {\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitBool(this, d);\n  }\n\n  public covariant(x: any): x is boolean {\n    if (typeof x === 'boolean') return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: boolean): ArrayBuffer {\n    return new Uint8Array([x ? 1 : 0]);\n  }\n\n  public encodeType() {\n    return slebEncode(IDLTypeIds.Bool);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    this.checkType(t);\n    switch (safeReadUint8(b)) {\n      case 0:\n        return false;\n      case 1:\n        return true;\n      default:\n        throw new Error('Boolean value out of range');\n    }\n  }\n\n  get name() {\n    return 'bool';\n  }\n}\n\n/**\n * Represents an IDL Null\n */\nexport class NullClass extends PrimitiveType<null> {\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitNull(this, d);\n  }\n\n  public covariant(x: any): x is null {\n    if (x === null) return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue() {\n    return new ArrayBuffer(0);\n  }\n\n  public encodeType() {\n    return slebEncode(IDLTypeIds.Null);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    this.checkType(t);\n    return null;\n  }\n\n  get name() {\n    return 'null';\n  }\n}\n\n/**\n * Represents an IDL Reserved\n */\nexport class ReservedClass extends PrimitiveType<any> {\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitReserved(this, d);\n  }\n\n  public covariant(x: any): x is any {\n    return true;\n  }\n\n  public encodeValue() {\n    return new ArrayBuffer(0);\n  }\n\n  public encodeType() {\n    return slebEncode(IDLTypeIds.Reserved);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    if (t.name !== this.name) {\n      t.decodeValue(b, t);\n    }\n    return null;\n  }\n\n  get name() {\n    return 'reserved';\n  }\n}\n\n/**\n * Represents an IDL Text\n */\nexport class TextClass extends PrimitiveType<string> {\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitText(this, d);\n  }\n\n  public covariant(x: any): x is string {\n    if (typeof x === 'string') return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: string) {\n    const buf = new TextEncoder().encode(x);\n    const len = lebEncode(buf.byteLength);\n    return concat(len, buf);\n  }\n\n  public encodeType() {\n    return slebEncode(IDLTypeIds.Text);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    this.checkType(t);\n    const len = lebDecode(b);\n    const buf = safeRead(b, Number(len));\n    const decoder = new TextDecoder('utf8', { fatal: true });\n    return decoder.decode(buf);\n  }\n\n  get name() {\n    return 'text';\n  }\n\n  public valueToString(x: string) {\n    return '\"' + x + '\"';\n  }\n}\n\n/**\n * Represents an IDL Int\n */\nexport class IntClass extends PrimitiveType<bigint> {\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitInt(this, d);\n  }\n\n  public covariant(x: any): x is bigint {\n    // We allow encoding of JavaScript plain numbers.\n    // But we will always decode to bigint.\n    if (typeof x === 'bigint' || Number.isInteger(x)) return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: bigint | number) {\n    return slebEncode(x);\n  }\n\n  public encodeType() {\n    return slebEncode(IDLTypeIds.Int);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    this.checkType(t);\n    return slebDecode(b);\n  }\n\n  get name() {\n    return 'int';\n  }\n\n  public valueToString(x: bigint) {\n    return x.toString();\n  }\n}\n\n/**\n * Represents an IDL Nat\n */\nexport class NatClass extends PrimitiveType<bigint> {\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitNat(this, d);\n  }\n\n  public covariant(x: any): x is bigint {\n    // We allow encoding of JavaScript plain numbers.\n    // But we will always decode to bigint.\n    if ((typeof x === 'bigint' && x >= BigInt(0)) || (Number.isInteger(x) && x >= 0)) return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: bigint | number) {\n    return lebEncode(x);\n  }\n\n  public encodeType() {\n    return slebEncode(IDLTypeIds.Nat);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    this.checkType(t);\n    return lebDecode(b);\n  }\n\n  get name() {\n    return 'nat';\n  }\n\n  public valueToString(x: bigint) {\n    return x.toString();\n  }\n}\n\n/**\n * Represents an IDL Float\n */\nexport class FloatClass extends PrimitiveType<number> {\n  constructor(private _bits: number) {\n    super();\n    if (_bits !== 32 && _bits !== 64) {\n      throw new Error('not a valid float type');\n    }\n  }\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitFloat(this, d);\n  }\n\n  public covariant(x: any): x is number {\n    if (typeof x === 'number' || x instanceof Number) return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: number) {\n    const buf = new ArrayBuffer(this._bits / 8);\n    const view = new DataView(buf);\n    if (this._bits === 32) {\n      view.setFloat32(0, x, true);\n    } else {\n      view.setFloat64(0, x, true);\n    }\n    return buf;\n  }\n\n  public encodeType() {\n    const opcode = this._bits === 32 ? IDLTypeIds.Float32 : IDLTypeIds.Float64;\n    return slebEncode(opcode);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    this.checkType(t);\n    const bytes = safeRead(b, this._bits / 8);\n    const view = new DataView(bytes);\n    if (this._bits === 32) {\n      return view.getFloat32(0, true);\n    } else {\n      return view.getFloat64(0, true);\n    }\n  }\n\n  get name() {\n    return 'float' + this._bits;\n  }\n\n  public valueToString(x: number) {\n    return x.toString();\n  }\n}\n\n/**\n * Represents an IDL fixed-width Int(n)\n */\nexport class FixedIntClass extends PrimitiveType<bigint | number> {\n  constructor(public readonly _bits: number) {\n    super();\n  }\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitFixedInt(this, d);\n  }\n\n  public covariant(x: any): x is bigint {\n    const min = iexp2(this._bits - 1) * BigInt(-1);\n    const max = iexp2(this._bits - 1) - BigInt(1);\n    let ok = false;\n    if (typeof x === 'bigint') {\n      ok = x >= min && x <= max;\n    } else if (Number.isInteger(x)) {\n      const v = BigInt(x);\n      ok = v >= min && v <= max;\n    } else {\n      ok = false;\n    }\n\n    if (ok) return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: bigint | number) {\n    return writeIntLE(x, this._bits / 8);\n  }\n\n  public encodeType() {\n    const offset = Math.log2(this._bits) - 3;\n    return slebEncode(-9 - offset);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    this.checkType(t);\n    const num = readIntLE(b, this._bits / 8);\n    if (this._bits <= 32) {\n      return Number(num);\n    } else {\n      return num;\n    }\n  }\n\n  get name() {\n    return `int${this._bits}`;\n  }\n\n  public valueToString(x: bigint | number) {\n    return x.toString();\n  }\n}\n\n/**\n * Represents an IDL fixed-width Nat(n)\n */\nexport class FixedNatClass extends PrimitiveType<bigint | number> {\n  constructor(public readonly _bits: number) {\n    super();\n  }\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitFixedNat(this, d);\n  }\n\n  public covariant(x: any): x is bigint {\n    const max = iexp2(this._bits);\n    let ok = false;\n    if (typeof x === 'bigint' && x >= BigInt(0)) {\n      ok = x < max;\n    } else if (Number.isInteger(x) && x >= 0) {\n      const v = BigInt(x);\n      ok = v < max;\n    } else {\n      ok = false;\n    }\n    if (ok) return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: bigint | number) {\n    return writeUIntLE(x, this._bits / 8);\n  }\n\n  public encodeType() {\n    const offset = Math.log2(this._bits) - 3;\n    return slebEncode(-5 - offset);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    this.checkType(t);\n    const num = readUIntLE(b, this._bits / 8);\n    if (this._bits <= 32) {\n      return Number(num);\n    } else {\n      return num;\n    }\n  }\n\n  get name() {\n    return `nat${this._bits}`;\n  }\n\n  public valueToString(x: bigint | number) {\n    return x.toString();\n  }\n}\n\n/**\n * Represents an IDL Array\n *\n * Arrays of fixed-sized nat/int type (e.g. nat8), are encoded from and decoded to TypedArrays (e.g. Uint8Array).\n * Arrays of float or other non-primitive types are encoded/decoded as untyped array in Javascript.\n *\n * @param {Type} t\n */\nexport class VecClass<T> extends ConstructType<T[]> {\n  // If true, this vector is really a blob and we can just use memcpy.\n  //\n  // NOTE:\n  // With support of encoding/dencoding of TypedArrays, this optimization is\n  // only used when plain array of bytes are passed as encoding input in order\n  // to be backward compatible.\n  private _blobOptimization = false;\n\n  constructor(protected _type: Type<T>) {\n    super();\n    if (_type instanceof FixedNatClass && _type._bits === 8) {\n      this._blobOptimization = true;\n    }\n  }\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitVec(this, this._type, d);\n  }\n\n  public covariant(x: any): x is T[] {\n    // Special case for ArrayBuffer\n    const bits =\n      this._type instanceof FixedNatClass\n        ? this._type._bits\n        : this._type instanceof FixedIntClass\n        ? this._type._bits\n        : 0;\n\n    if (\n      (ArrayBuffer.isView(x) && bits == (x as any).BYTES_PER_ELEMENT * 8) ||\n      (Array.isArray(x) &&\n        x.every((v, idx) => {\n          try {\n            return this._type.covariant(v);\n          } catch (e: any) {\n            throw new Error(`Invalid ${this.display()} argument: \\n\\nindex ${idx} -> ${e.message}`);\n          }\n        }))\n    )\n      return true;\n\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: T[]) {\n    const len = lebEncode(x.length);\n    if (this._blobOptimization) {\n      return concat(len, new Uint8Array(x as unknown as number[]));\n    }\n    if (ArrayBuffer.isView(x)) {\n      return concat(len, new Uint8Array(x.buffer));\n    }\n    const buf = new Pipe(new ArrayBuffer(len.byteLength + x.length), 0);\n    buf.write(len);\n    for (const d of x) {\n      const encoded = this._type.encodeValue(d);\n      buf.write(new Uint8Array(encoded));\n    }\n    return buf.buffer;\n  }\n\n  public _buildTypeTableImpl(typeTable: TypeTable) {\n    this._type.buildTypeTable(typeTable);\n\n    const opCode = slebEncode(IDLTypeIds.Vector);\n    const buffer = this._type.encodeType(typeTable);\n    typeTable.add(this, concat(opCode, buffer));\n  }\n\n  public decodeValue(b: Pipe, t: Type): T[] {\n    const vec = this.checkType(t);\n    if (!(vec instanceof VecClass)) {\n      throw new Error('Not a vector type');\n    }\n    const len = Number(lebDecode(b));\n\n    if (this._type instanceof FixedNatClass) {\n      if (this._type._bits == 8) {\n        return new Uint8Array(b.read(len)) as unknown as T[];\n      }\n      if (this._type._bits == 16) {\n        return new Uint16Array(b.read(len * 2)) as unknown as T[];\n      }\n      if (this._type._bits == 32) {\n        return new Uint32Array(b.read(len * 4)) as unknown as T[];\n      }\n      if (this._type._bits == 64) {\n        return new BigUint64Array(b.read(len * 8)) as unknown as T[];\n      }\n    }\n\n    if (this._type instanceof FixedIntClass) {\n      if (this._type._bits == 8) {\n        return new Int8Array(b.read(len)) as unknown as T[];\n      }\n      if (this._type._bits == 16) {\n        return new Int16Array(b.read(len * 2)) as unknown as T[];\n      }\n      if (this._type._bits == 32) {\n        return new Int32Array(b.read(len * 4)) as unknown as T[];\n      }\n      if (this._type._bits == 64) {\n        return new BigInt64Array(b.read(len * 8)) as unknown as T[];\n      }\n    }\n\n    const rets: T[] = [];\n    for (let i = 0; i < len; i++) {\n      rets.push(this._type.decodeValue(b, vec._type));\n    }\n    return rets;\n  }\n\n  get name() {\n    return `vec ${this._type.name}`;\n  }\n\n  public display() {\n    return `vec ${this._type.display()}`;\n  }\n\n  public valueToString(x: T[]) {\n    const elements = x.map(e => this._type.valueToString(e));\n    return 'vec {' + elements.join('; ') + '}';\n  }\n}\n\n/**\n * Represents an IDL Option\n * @param {Type} t\n */\nexport class OptClass<T> extends ConstructType<[T] | []> {\n  constructor(protected _type: Type<T>) {\n    super();\n  }\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitOpt(this, this._type, d);\n  }\n\n  public covariant(x: any): x is [T] | [] {\n    try {\n      if (Array.isArray(x) && (x.length === 0 || (x.length === 1 && this._type.covariant(x[0]))))\n        return true;\n    } catch (e: any) {\n      throw new Error(\n        `Invalid ${this.display()} argument: ${toReadableString(x)} \\n\\n-> ${e.message}`,\n      );\n    }\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: [T] | []) {\n    if (x.length === 0) {\n      return new Uint8Array([0]);\n    } else {\n      return concat(new Uint8Array([1]), this._type.encodeValue(x[0]));\n    }\n  }\n\n  public _buildTypeTableImpl(typeTable: TypeTable) {\n    this._type.buildTypeTable(typeTable);\n\n    const opCode = slebEncode(IDLTypeIds.Opt);\n    const buffer = this._type.encodeType(typeTable);\n    typeTable.add(this, concat(opCode, buffer));\n  }\n\n  public decodeValue(b: Pipe, t: Type): [T] | [] {\n    const opt = this.checkType(t);\n    if (!(opt instanceof OptClass)) {\n      throw new Error('Not an option type');\n    }\n    switch (safeReadUint8(b)) {\n      case 0:\n        return [];\n      case 1:\n        return [this._type.decodeValue(b, opt._type)];\n      default:\n        throw new Error('Not an option value');\n    }\n  }\n\n  get name() {\n    return `opt ${this._type.name}`;\n  }\n\n  public display() {\n    return `opt ${this._type.display()}`;\n  }\n\n  public valueToString(x: [T] | []) {\n    if (x.length === 0) {\n      return 'null';\n    } else {\n      return `opt ${this._type.valueToString(x[0])}`;\n    }\n  }\n}\n\n/**\n * Represents an IDL Record\n * @param {Object} [fields] - mapping of function name to Type\n */\nexport class RecordClass extends ConstructType<Record<string, any>> {\n  protected readonly _fields: Array<[string, Type]>;\n\n  constructor(fields: Record<string, Type> = {}) {\n    super();\n    this._fields = Object.entries(fields).sort((a, b) => idlLabelToId(a[0]) - idlLabelToId(b[0]));\n  }\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitRecord(this, this._fields, d);\n  }\n\n  public tryAsTuple(): Type[] | null {\n    const res: Type[] = [];\n    for (let i = 0; i < this._fields.length; i++) {\n      const [key, type] = this._fields[i];\n      if (key !== `_${i}_`) {\n        return null;\n      }\n      res.push(type);\n    }\n    return res;\n  }\n\n  public covariant(x: any): x is Record<string, any> {\n    if (\n      typeof x === 'object' &&\n      this._fields.every(([k, t]) => {\n        // eslint-disable-next-line\n        if (!x.hasOwnProperty(k)) {\n          throw new Error(`Record is missing key \"${k}\".`);\n        }\n        try {\n          return t.covariant(x[k]);\n        } catch (e: any) {\n          throw new Error(`Invalid ${this.display()} argument: \\n\\nfield ${k} -> ${e.message}`);\n        }\n      })\n    )\n      return true;\n\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: Record<string, any>) {\n    const values = this._fields.map(([key]) => x[key]);\n    const bufs = zipWith(this._fields, values, ([, c], d) => c.encodeValue(d));\n    return concat(...bufs);\n  }\n\n  public _buildTypeTableImpl(T: TypeTable) {\n    this._fields.forEach(([_, value]) => value.buildTypeTable(T));\n    const opCode = slebEncode(IDLTypeIds.Record);\n    const len = lebEncode(this._fields.length);\n    const fields = this._fields.map(([key, value]) =>\n      concat(lebEncode(idlLabelToId(key)), value.encodeType(T)),\n    );\n\n    T.add(this, concat(opCode, len, concat(...fields)));\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    const record = this.checkType(t);\n    if (!(record instanceof RecordClass)) {\n      throw new Error('Not a record type');\n    }\n    const x: Record<string, any> = {};\n\n    let expectedRecordIdx = 0;\n    let actualRecordIdx = 0;\n    while (actualRecordIdx < record._fields.length) {\n      const [hash, type] = record._fields[actualRecordIdx];\n\n      if (expectedRecordIdx >= this._fields.length) {\n        // skip unexpected left over fields present on the wire\n        type.decodeValue(b, type);\n        actualRecordIdx++;\n        continue;\n      }\n\n      const [expectKey, expectType] = this._fields[expectedRecordIdx];\n      const expectedId = idlLabelToId(this._fields[expectedRecordIdx][0]);\n      const actualId = idlLabelToId(hash);\n      if (expectedId === actualId) {\n        // the current field on the wire matches the expected field\n        x[expectKey] = expectType.decodeValue(b, type);\n        expectedRecordIdx++;\n        actualRecordIdx++;\n      } else if (actualId > expectedId) {\n        // The expected field does not exist on the wire\n        if (expectType instanceof OptClass || expectType instanceof ReservedClass) {\n          x[expectKey] = [];\n          expectedRecordIdx++;\n        } else {\n          throw new Error('Cannot find required field ' + expectKey);\n        }\n      } else {\n        // The field on the wire does not exist in the output type, so we can skip it\n        type.decodeValue(b, type);\n        actualRecordIdx++;\n      }\n    }\n\n    // initialize left over expected optional fields\n    for (const [expectKey, expectType] of this._fields.slice(expectedRecordIdx)) {\n      if (expectType instanceof OptClass || expectType instanceof ReservedClass) {\n        // TODO this assumes null value in opt is represented as []\n        x[expectKey] = [];\n      } else {\n        throw new Error('Cannot find required field ' + expectKey);\n      }\n    }\n    return x;\n  }\n\n  get name() {\n    const fields = this._fields.map(([key, value]) => key + ':' + value.name);\n    return `record {${fields.join('; ')}}`;\n  }\n\n  public display() {\n    const fields = this._fields.map(([key, value]) => key + ':' + value.display());\n    return `record {${fields.join('; ')}}`;\n  }\n\n  public valueToString(x: Record<string, any>) {\n    const values = this._fields.map(([key]) => x[key]);\n    const fields = zipWith(this._fields, values, ([k, c], d) => k + '=' + c.valueToString(d));\n    return `record {${fields.join('; ')}}`;\n  }\n}\n\n/**\n * Represents Tuple, a syntactic sugar for Record.\n * @param {Type} components\n */\nexport class TupleClass<T extends any[]> extends RecordClass {\n  protected readonly _components: Type[];\n\n  constructor(_components: Type[]) {\n    const x: Record<string, any> = {};\n    _components.forEach((e, i) => (x['_' + i + '_'] = e));\n    super(x);\n    this._components = _components;\n  }\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitTuple(this, this._components, d);\n  }\n\n  public covariant(x: any): x is T {\n    // `>=` because tuples can be covariant when encoded.\n\n    if (\n      Array.isArray(x) &&\n      x.length >= this._fields.length &&\n      this._components.every((t, i) => {\n        try {\n          return t.covariant(x[i]);\n        } catch (e: any) {\n          throw new Error(`Invalid ${this.display()} argument: \\n\\nindex ${i} -> ${e.message}`);\n        }\n      })\n    )\n      return true;\n\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: any[]) {\n    const bufs = zipWith(this._components, x, (c, d) => c.encodeValue(d));\n    return concat(...bufs);\n  }\n\n  public decodeValue(b: Pipe, t: Type): T {\n    const tuple = this.checkType(t);\n    if (!(tuple instanceof TupleClass)) {\n      throw new Error('not a tuple type');\n    }\n    if (tuple._components.length < this._components.length) {\n      throw new Error('tuple mismatch');\n    }\n    const res = [];\n    for (const [i, wireType] of tuple._components.entries()) {\n      if (i >= this._components.length) {\n        // skip value\n        wireType.decodeValue(b, wireType);\n      } else {\n        res.push(this._components[i].decodeValue(b, wireType));\n      }\n    }\n    return res as T;\n  }\n\n  public display() {\n    const fields = this._components.map(value => value.display());\n    return `record {${fields.join('; ')}}`;\n  }\n\n  public valueToString(values: any[]) {\n    const fields = zipWith(this._components, values, (c, d) => c.valueToString(d));\n    return `record {${fields.join('; ')}}`;\n  }\n}\n\n/**\n * Represents an IDL Variant\n * @param {Object} [fields] - mapping of function name to Type\n */\nexport class VariantClass extends ConstructType<Record<string, any>> {\n  private readonly _fields: Array<[string, Type]>;\n\n  constructor(fields: Record<string, Type> = {}) {\n    super();\n    this._fields = Object.entries(fields).sort((a, b) => idlLabelToId(a[0]) - idlLabelToId(b[0]));\n  }\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitVariant(this, this._fields, d);\n  }\n\n  public covariant(x: any): x is Record<string, any> {\n    if (\n      typeof x === 'object' &&\n      Object.entries(x).length === 1 &&\n      this._fields.every(([k, v]) => {\n        try {\n          // eslint-disable-next-line\n          return !x.hasOwnProperty(k) || v.covariant(x[k]);\n        } catch (e: any) {\n          throw new Error(`Invalid ${this.display()} argument: \\n\\nvariant ${k} -> ${e.message}`);\n        }\n      })\n    )\n      return true;\n\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: Record<string, any>) {\n    for (let i = 0; i < this._fields.length; i++) {\n      const [name, type] = this._fields[i];\n      // eslint-disable-next-line\n      if (x.hasOwnProperty(name)) {\n        const idx = lebEncode(i);\n        const buf = type.encodeValue(x[name]);\n\n        return concat(idx, buf);\n      }\n    }\n    throw Error('Variant has no data: ' + x);\n  }\n\n  public _buildTypeTableImpl(typeTable: TypeTable) {\n    this._fields.forEach(([, type]) => {\n      type.buildTypeTable(typeTable);\n    });\n    const opCode = slebEncode(IDLTypeIds.Variant);\n    const len = lebEncode(this._fields.length);\n    const fields = this._fields.map(([key, value]) =>\n      concat(lebEncode(idlLabelToId(key)), value.encodeType(typeTable)),\n    );\n    typeTable.add(this, concat(opCode, len, ...fields));\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    const variant = this.checkType(t);\n    if (!(variant instanceof VariantClass)) {\n      throw new Error('Not a variant type');\n    }\n    const idx = Number(lebDecode(b));\n    if (idx >= variant._fields.length) {\n      throw Error('Invalid variant index: ' + idx);\n    }\n    const [wireHash, wireType] = variant._fields[idx];\n    for (const [key, expectType] of this._fields) {\n      if (idlLabelToId(wireHash) === idlLabelToId(key)) {\n        const value = expectType.decodeValue(b, wireType);\n        return { [key]: value };\n      }\n    }\n    throw new Error('Cannot find field hash ' + wireHash);\n  }\n\n  get name() {\n    const fields = this._fields.map(([key, type]) => key + ':' + type.name);\n    return `variant {${fields.join('; ')}}`;\n  }\n\n  public display() {\n    const fields = this._fields.map(\n      ([key, type]) => key + (type.name === 'null' ? '' : `:${type.display()}`),\n    );\n    return `variant {${fields.join('; ')}}`;\n  }\n\n  public valueToString(x: Record<string, any>) {\n    for (const [name, type] of this._fields) {\n      // eslint-disable-next-line\n      if (x.hasOwnProperty(name)) {\n        const value = type.valueToString(x[name]);\n        if (value === 'null') {\n          return `variant {${name}}`;\n        } else {\n          return `variant {${name}=${value}}`;\n        }\n      }\n    }\n    throw new Error('Variant has no data: ' + x);\n  }\n}\n\n/**\n * Represents a reference to an IDL type, used for defining recursive data\n * types.\n */\nexport class RecClass<T = any> extends ConstructType<T> {\n  private static _counter = 0;\n  private _id = RecClass._counter++;\n  private _type: ConstructType<T> | undefined = undefined;\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    if (!this._type) {\n      throw Error('Recursive type uninitialized.');\n    }\n    return v.visitRec(this, this._type, d);\n  }\n\n  public fill(t: ConstructType<T>) {\n    this._type = t;\n  }\n\n  public getType() {\n    return this._type;\n  }\n\n  public covariant(x: any): x is T {\n    if (this._type ? this._type.covariant(x) : false) return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: T) {\n    if (!this._type) {\n      throw Error('Recursive type uninitialized.');\n    }\n    return this._type.encodeValue(x);\n  }\n\n  public _buildTypeTableImpl(typeTable: TypeTable) {\n    if (!this._type) {\n      throw Error('Recursive type uninitialized.');\n    }\n    typeTable.add(this, new Uint8Array([]));\n    this._type.buildTypeTable(typeTable);\n    typeTable.merge(this, this._type.name);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    if (!this._type) {\n      throw Error('Recursive type uninitialized.');\n    }\n    return this._type.decodeValue(b, t);\n  }\n\n  get name() {\n    return `rec_${this._id}`;\n  }\n\n  public display() {\n    if (!this._type) {\n      throw Error('Recursive type uninitialized.');\n    }\n    return `μ${this.name}.${this._type.name}`;\n  }\n\n  public valueToString(x: T) {\n    if (!this._type) {\n      throw Error('Recursive type uninitialized.');\n    }\n    return this._type.valueToString(x);\n  }\n}\n\nfunction decodePrincipalId(b: Pipe): PrincipalId {\n  const x = safeReadUint8(b);\n  if (x !== 1) {\n    throw new Error('Cannot decode principal');\n  }\n\n  const len = Number(lebDecode(b));\n  return PrincipalId.fromUint8Array(new Uint8Array(safeRead(b, len)));\n}\n\n/**\n * Represents an IDL principal reference\n */\nexport class PrincipalClass extends PrimitiveType<PrincipalId> {\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitPrincipal(this, d);\n  }\n\n  public covariant(x: any): x is PrincipalId {\n    if (x && x._isPrincipal) return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: PrincipalId): ArrayBuffer {\n    const buf = x.toUint8Array();\n    const len = lebEncode(buf.byteLength);\n    return concat(new Uint8Array([1]), len, buf);\n  }\n\n  public encodeType() {\n    return slebEncode(IDLTypeIds.Principal);\n  }\n\n  public decodeValue(b: Pipe, t: Type): PrincipalId {\n    this.checkType(t);\n    return decodePrincipalId(b);\n  }\n\n  get name() {\n    return 'principal';\n  }\n  public valueToString(x: PrincipalId) {\n    return `${this.name} \"${x.toText()}\"`;\n  }\n}\n\n/**\n * Represents an IDL function reference.\n * @param argTypes Argument types.\n * @param retTypes Return types.\n * @param annotations Function annotations.\n */\nexport class FuncClass extends ConstructType<[PrincipalId, string]> {\n  public static argsToString(types: Type[], v: any[]) {\n    if (types.length !== v.length) {\n      throw new Error('arity mismatch');\n    }\n    return '(' + types.map((t, i) => t.valueToString(v[i])).join(', ') + ')';\n  }\n\n  constructor(public argTypes: Type[], public retTypes: Type[], public annotations: string[] = []) {\n    super();\n  }\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitFunc(this, d);\n  }\n  public covariant(x: any): x is [PrincipalId, string] {\n    if (Array.isArray(x) && x.length === 2 && x[0] && x[0]._isPrincipal && typeof x[1] === 'string')\n      return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue([principal, methodName]: [PrincipalId, string]) {\n    const buf = principal.toUint8Array();\n    const len = lebEncode(buf.byteLength);\n    const canister = concat(new Uint8Array([1]), len, buf);\n\n    const method = new TextEncoder().encode(methodName);\n    const methodLen = lebEncode(method.byteLength);\n    return concat(new Uint8Array([1]), canister, methodLen, method);\n  }\n\n  public _buildTypeTableImpl(T: TypeTable) {\n    this.argTypes.forEach(arg => arg.buildTypeTable(T));\n    this.retTypes.forEach(arg => arg.buildTypeTable(T));\n\n    const opCode = slebEncode(IDLTypeIds.Func);\n    const argLen = lebEncode(this.argTypes.length);\n    const args = concat(...this.argTypes.map(arg => arg.encodeType(T)));\n    const retLen = lebEncode(this.retTypes.length);\n    const rets = concat(...this.retTypes.map(arg => arg.encodeType(T)));\n    const annLen = lebEncode(this.annotations.length);\n    const anns = concat(...this.annotations.map(a => this.encodeAnnotation(a)));\n\n    T.add(this, concat(opCode, argLen, args, retLen, rets, annLen, anns));\n  }\n\n  public decodeValue(b: Pipe): [PrincipalId, string] {\n    const x = safeReadUint8(b);\n    if (x !== 1) {\n      throw new Error('Cannot decode function reference');\n    }\n    const canister = decodePrincipalId(b);\n\n    const mLen = Number(lebDecode(b));\n    const buf = safeRead(b, mLen);\n    const decoder = new TextDecoder('utf8', { fatal: true });\n    const method = decoder.decode(buf);\n\n    return [canister, method];\n  }\n\n  get name() {\n    const args = this.argTypes.map(arg => arg.name).join(', ');\n    const rets = this.retTypes.map(arg => arg.name).join(', ');\n    const annon = ' ' + this.annotations.join(' ');\n    return `(${args}) -> (${rets})${annon}`;\n  }\n\n  public valueToString([principal, str]: [PrincipalId, string]) {\n    return `func \"${principal.toText()}\".${str}`;\n  }\n\n  public display(): string {\n    const args = this.argTypes.map(arg => arg.display()).join(', ');\n    const rets = this.retTypes.map(arg => arg.display()).join(', ');\n    const annon = ' ' + this.annotations.join(' ');\n    return `(${args}) → (${rets})${annon}`;\n  }\n\n  private encodeAnnotation(ann: string): ArrayBuffer {\n    if (ann === 'query') {\n      return new Uint8Array([1]);\n    } else if (ann === 'oneway') {\n      return new Uint8Array([2]);\n    } else {\n      throw new Error('Illegal function annotation');\n    }\n  }\n}\n\nexport class ServiceClass extends ConstructType<PrincipalId> {\n  public readonly _fields: Array<[string, FuncClass]>;\n  constructor(fields: Record<string, FuncClass>) {\n    super();\n    this._fields = Object.entries(fields).sort((a, b) => idlLabelToId(a[0]) - idlLabelToId(b[0]));\n  }\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitService(this, d);\n  }\n  public covariant(x: any): x is PrincipalId {\n    if (x && x._isPrincipal) return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: PrincipalId) {\n    const buf = x.toUint8Array();\n    const len = lebEncode(buf.length);\n    return concat(new Uint8Array([1]), len, buf);\n  }\n\n  public _buildTypeTableImpl(T: TypeTable) {\n    this._fields.forEach(([_, func]) => func.buildTypeTable(T));\n    const opCode = slebEncode(IDLTypeIds.Service);\n    const len = lebEncode(this._fields.length);\n    const meths = this._fields.map(([label, func]) => {\n      const labelBuf = new TextEncoder().encode(label);\n      const labelLen = lebEncode(labelBuf.length);\n      return concat(labelLen, labelBuf, func.encodeType(T));\n    });\n\n    T.add(this, concat(opCode, len, ...meths));\n  }\n\n  public decodeValue(b: Pipe): PrincipalId {\n    return decodePrincipalId(b);\n  }\n  get name() {\n    const fields = this._fields.map(([key, value]) => key + ':' + value.name);\n    return `service {${fields.join('; ')}}`;\n  }\n\n  public valueToString(x: PrincipalId) {\n    return `service \"${x.toText()}\"`;\n  }\n}\n\n/**\n *\n * @param x\n * @returns {string}\n */\nfunction toReadableString(x: unknown): string {\n  const str = JSON.stringify(x, (_key, value) =>\n    typeof value === 'bigint' ? `BigInt(${value})` : value,\n  );\n\n  return str && str.length > toReadableString_max\n    ? str.substring(0, toReadableString_max - 3) + '...'\n    : str;\n}\n\n/**\n * Encode a array of values\n * @param argTypes\n * @param args\n * @returns {Buffer} serialised value\n */\nexport function encode(argTypes: Array<Type<any>>, args: any[]): ArrayBuffer {\n  if (args.length < argTypes.length) {\n    throw Error('Wrong number of message arguments');\n  }\n\n  const typeTable = new TypeTable();\n  argTypes.forEach(t => t.buildTypeTable(typeTable));\n\n  const magic = new TextEncoder().encode(magicNumber);\n  const table = typeTable.encode();\n  const len = lebEncode(args.length);\n  const typs = concat(...argTypes.map(t => t.encodeType(typeTable)));\n  const vals = concat(\n    ...zipWith(argTypes, args, (t, x) => {\n      try {\n        t.covariant(x);\n      } catch (e: any) {\n        const err = new Error(e.message + '\\n\\n');\n        throw err;\n      }\n\n      return t.encodeValue(x);\n    }),\n  );\n\n  return concat(magic, table, len, typs, vals);\n}\n\n/**\n * Decode a binary value\n * @param retTypes - Types expected in the buffer.\n * @param bytes - hex-encoded string, or buffer.\n * @returns Value deserialised to JS type\n */\nexport function decode(retTypes: Type[], bytes: ArrayBuffer): JsonValue[] {\n  const b = new Pipe(bytes);\n\n  if (bytes.byteLength < magicNumber.length) {\n    throw new Error('Message length smaller than magic number');\n  }\n  const magicBuffer = safeRead(b, magicNumber.length);\n  const magic = new TextDecoder().decode(magicBuffer);\n  if (magic !== magicNumber) {\n    throw new Error('Wrong magic number: ' + JSON.stringify(magic));\n  }\n\n  function readTypeTable(pipe: Pipe): [Array<[IDLTypeIds, any]>, number[]] {\n    const typeTable: Array<[IDLTypeIds, any]> = [];\n    const len = Number(lebDecode(pipe));\n\n    for (let i = 0; i < len; i++) {\n      const ty = Number(slebDecode(pipe));\n      switch (ty) {\n        case IDLTypeIds.Opt:\n        case IDLTypeIds.Vector: {\n          const t = Number(slebDecode(pipe));\n          typeTable.push([ty, t]);\n          break;\n        }\n        case IDLTypeIds.Record:\n        case IDLTypeIds.Variant: {\n          const fields = [];\n          let objectLength = Number(lebDecode(pipe));\n          let prevHash;\n          while (objectLength--) {\n            const hash = Number(lebDecode(pipe));\n            if (hash >= Math.pow(2, 32)) {\n              throw new Error('field id out of 32-bit range');\n            }\n            if (typeof prevHash === 'number' && prevHash >= hash) {\n              throw new Error('field id collision or not sorted');\n            }\n            prevHash = hash;\n            const t = Number(slebDecode(pipe));\n            fields.push([hash, t]);\n          }\n          typeTable.push([ty, fields]);\n          break;\n        }\n        case IDLTypeIds.Func: {\n          const args = [];\n          let argLength = Number(lebDecode(pipe));\n          while (argLength--) {\n            args.push(Number(slebDecode(pipe)));\n          }\n          const returnValues = [];\n          let returnValuesLength = Number(lebDecode(pipe));\n          while (returnValuesLength--) {\n            returnValues.push(Number(slebDecode(pipe)));\n          }\n          const annotations = [];\n          let annotationLength = Number(lebDecode(pipe));\n          while (annotationLength--) {\n            const annotation = Number(lebDecode(pipe));\n            switch (annotation) {\n              case 1: {\n                annotations.push('query');\n                break;\n              }\n              case 2: {\n                annotations.push('oneway');\n                break;\n              }\n              default:\n                throw new Error('unknown annotation');\n            }\n          }\n          typeTable.push([ty, [args, returnValues, annotations]]);\n          break;\n        }\n        case IDLTypeIds.Service: {\n          let servLength = Number(lebDecode(pipe));\n          const methods = [];\n          while (servLength--) {\n            const nameLength = Number(lebDecode(pipe));\n            const funcName = new TextDecoder().decode(safeRead(pipe, nameLength));\n            const funcType = slebDecode(pipe);\n            methods.push([funcName, funcType]);\n          }\n          typeTable.push([ty, methods]);\n          break;\n        }\n        default:\n          throw new Error('Illegal op_code: ' + ty);\n      }\n    }\n\n    const rawList: number[] = [];\n    const length = Number(lebDecode(pipe));\n    for (let i = 0; i < length; i++) {\n      rawList.push(Number(slebDecode(pipe)));\n    }\n    return [typeTable, rawList];\n  }\n  const [rawTable, rawTypes] = readTypeTable(b);\n  if (rawTypes.length < retTypes.length) {\n    throw new Error('Wrong number of return values');\n  }\n\n  const table: RecClass[] = rawTable.map(_ => Rec());\n  function getType(t: number): Type {\n    if (t < -24) {\n      throw new Error('future value not supported');\n    }\n    if (t < 0) {\n      switch (t) {\n        case -1:\n          return Null;\n        case -2:\n          return Bool;\n        case -3:\n          return Nat;\n        case -4:\n          return Int;\n        case -5:\n          return Nat8;\n        case -6:\n          return Nat16;\n        case -7:\n          return Nat32;\n        case -8:\n          return Nat64;\n        case -9:\n          return Int8;\n        case -10:\n          return Int16;\n        case -11:\n          return Int32;\n        case -12:\n          return Int64;\n        case -13:\n          return Float32;\n        case -14:\n          return Float64;\n        case -15:\n          return Text;\n        case -16:\n          return Reserved;\n        case -17:\n          return Empty;\n        case -24:\n          return Principal;\n        default:\n          throw new Error('Illegal op_code: ' + t);\n      }\n    }\n    if (t >= rawTable.length) {\n      throw new Error('type index out of range');\n    }\n    return table[t];\n  }\n  function buildType(entry: [IDLTypeIds, any]): Type {\n    switch (entry[0]) {\n      case IDLTypeIds.Vector: {\n        const ty = getType(entry[1]);\n        return Vec(ty);\n      }\n      case IDLTypeIds.Opt: {\n        const ty = getType(entry[1]);\n        return Opt(ty);\n      }\n      case IDLTypeIds.Record: {\n        const fields: Record<string, Type> = {};\n        for (const [hash, ty] of entry[1]) {\n          const name = `_${hash}_`;\n          fields[name] = getType(ty);\n        }\n        const record = Record(fields);\n        const tuple = record.tryAsTuple();\n        if (Array.isArray(tuple)) {\n          return Tuple(...tuple);\n        } else {\n          return record;\n        }\n      }\n      case IDLTypeIds.Variant: {\n        const fields: Record<string, Type> = {};\n        for (const [hash, ty] of entry[1]) {\n          const name = `_${hash}_`;\n          fields[name] = getType(ty);\n        }\n        return Variant(fields);\n      }\n      case IDLTypeIds.Func: {\n        const [args, returnValues, annotations] = entry[1];\n        return Func(\n          args.map((t: number) => getType(t)),\n          returnValues.map((t: number) => getType(t)),\n          annotations,\n        );\n      }\n      case IDLTypeIds.Service: {\n        const rec: Record<string, FuncClass> = {};\n        const methods = entry[1] as [[string, number]];\n        for (const [name, typeRef] of methods) {\n          let type: Type | undefined = getType(typeRef);\n\n          if (type instanceof RecClass) {\n            // unpack reference type\n            type = type.getType();\n          }\n          if (!(type instanceof FuncClass)) {\n            throw new Error('Illegal service definition: services can only contain functions');\n          }\n          rec[name] = type;\n        }\n        return Service(rec);\n      }\n      default:\n        throw new Error('Illegal op_code: ' + entry[0]);\n    }\n  }\n\n  rawTable.forEach((entry, i) => {\n    const t = buildType(entry);\n    table[i].fill(t);\n  });\n\n  const types = rawTypes.map(t => getType(t));\n  const output = retTypes.map((t, i) => {\n    return t.decodeValue(b, types[i]);\n  });\n\n  // skip unused values\n  for (let ind = retTypes.length; ind < types.length; ind++) {\n    types[ind].decodeValue(b, types[ind]);\n  }\n\n  if (b.byteLength > 0) {\n    throw new Error('decode: Left-over bytes');\n  }\n\n  return output;\n}\n\n/**\n * An Interface Factory, normally provided by a Candid code generation.\n */\nexport type InterfaceFactory = (idl: {\n  IDL: {\n    Empty: EmptyClass;\n    Reserved: ReservedClass;\n    Unknown: UnknownClass;\n    Bool: BoolClass;\n    Null: NullClass;\n    Text: TextClass;\n    Int: IntClass;\n    Nat: NatClass;\n\n    Float32: FloatClass;\n    Float64: FloatClass;\n\n    Int8: FixedIntClass;\n    Int16: FixedIntClass;\n    Int32: FixedIntClass;\n    Int64: FixedIntClass;\n\n    Nat8: FixedNatClass;\n    Nat16: FixedNatClass;\n    Nat32: FixedNatClass;\n    Nat64: FixedNatClass;\n\n    Principal: PrincipalClass;\n\n    Tuple: typeof Tuple;\n    Vec: typeof Vec;\n    Opt: typeof Opt;\n    Record: typeof Record;\n    Variant: typeof Variant;\n    Rec: typeof Rec;\n    Func: typeof Func;\n\n    Service(t: Record<string, FuncClass>): ServiceClass;\n  };\n}) => ServiceClass;\n\n// Export Types instances.\nexport const Empty = new EmptyClass();\nexport const Reserved = new ReservedClass();\n/**\n * Client-only type for deserializing unknown data. Not supported by Candid, and its use is discouraged.\n */\nexport const Unknown = new UnknownClass();\nexport const Bool = new BoolClass();\nexport const Null = new NullClass();\nexport const Text = new TextClass();\nexport const Int = new IntClass();\nexport const Nat = new NatClass();\n\nexport const Float32 = new FloatClass(32);\nexport const Float64 = new FloatClass(64);\n\nexport const Int8 = new FixedIntClass(8);\nexport const Int16 = new FixedIntClass(16);\nexport const Int32 = new FixedIntClass(32);\nexport const Int64 = new FixedIntClass(64);\n\nexport const Nat8 = new FixedNatClass(8);\nexport const Nat16 = new FixedNatClass(16);\nexport const Nat32 = new FixedNatClass(32);\nexport const Nat64 = new FixedNatClass(64);\n\nexport const Principal = new PrincipalClass();\n\n/**\n *\n * @param types array of any types\n * @returns TupleClass from those types\n */\nexport function Tuple<T extends any[]>(...types: T): TupleClass<T> {\n  return new TupleClass(types);\n}\n/**\n *\n * @param t IDL Type\n * @returns VecClass from that type\n */\nexport function Vec<T>(t: Type<T>): VecClass<T> {\n  return new VecClass(t);\n}\n/**\n *\n * @param t IDL Type\n * @returns OptClass of Type\n */\nexport function Opt<T>(t: Type<T>): OptClass<T> {\n  return new OptClass(t);\n}\n/**\n *\n * @param t Record of string and IDL Type\n * @returns RecordClass of string and Type\n */\nexport function Record(t: Record<string, Type>): RecordClass {\n  return new RecordClass(t);\n}\n\n/**\n *\n * @param fields Record of string and IDL Type\n * @returns VariantClass\n */\nexport function Variant(fields: Record<string, Type>): VariantClass {\n  return new VariantClass(fields);\n}\n/**\n *\n * @returns new RecClass\n */\nexport function Rec(): RecClass {\n  return new RecClass();\n}\n\n/**\n *\n * @param args array of IDL Types\n * @param ret array of IDL Types\n * @param annotations array of strings, [] by default\n * @returns new FuncClass\n */\nexport function Func(args: Type[], ret: Type[], annotations: string[] = []): FuncClass {\n  return new FuncClass(args, ret, annotations);\n}\n\n/**\n *\n * @param t Record of string and FuncClass\n * @returns ServiceClass\n */\nexport function Service(t: Record<string, FuncClass>): ServiceClass {\n  return new ServiceClass(t);\n}\n", "// tslint:disable:no-bitwise\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz234567';\n\n// Build a lookup table for decoding.\nconst lookupTable: Record<string, number> = Object.create(null);\nfor (let i = 0; i < alphabet.length; i++) {\n  lookupTable[alphabet[i]] = i;\n}\n\n// Add aliases for rfc4648.\nlookupTable['0'] = lookupTable.o;\nlookupTable['1'] = lookupTable.i;\n\n/**\n * @param input The input array to encode.\n * @returns A Base32 string encoding the input.\n */\nexport function encode(input: Uint8Array): string {\n  // How many bits will we skip from the first byte.\n  let skip = 0;\n  // 5 high bits, carry from one byte to the next.\n  let bits = 0;\n\n  // The output string in base32.\n  let output = '';\n\n  function encodeByte(byte: number) {\n    if (skip < 0) {\n      // we have a carry from the previous byte\n      bits |= byte >> -skip;\n    } else {\n      // no carry\n      bits = (byte << skip) & 248;\n    }\n\n    if (skip > 3) {\n      // Not enough data to produce a character, get us another one\n      skip -= 8;\n      return 1;\n    }\n\n    if (skip < 4) {\n      // produce a character\n      output += alphabet[bits >> 3];\n      skip += 5;\n    }\n\n    return 0;\n  }\n\n  for (let i = 0; i < input.length; ) {\n    i += encodeByte(input[i]);\n  }\n\n  return output + (skip < 0 ? alphabet[bits >> 3] : '');\n}\n\n/**\n * @param input The base32 encoded string to decode.\n */\nexport function decode(input: string): Uint8Array {\n  // how many bits we have from the previous character.\n  let skip = 0;\n  // current byte we're producing.\n  let byte = 0;\n\n  const output = new Uint8Array(((input.length * 4) / 3) | 0);\n  let o = 0;\n\n  function decodeChar(char: string) {\n    // Consume a character from the stream, store\n    // the output in this.output. As before, better\n    // to use update().\n    let val = lookupTable[char.toLowerCase()];\n    if (val === undefined) {\n      throw new Error(`Invalid character: ${JSON.stringify(char)}`);\n    }\n\n    // move to the high bits\n    val <<= 3;\n    byte |= val >>> skip;\n    skip += 5;\n\n    if (skip >= 8) {\n      // We have enough bytes to produce an output\n      output[o++] = byte;\n      skip -= 8;\n\n      if (skip > 0) {\n        byte = (val << (5 - skip)) & 255;\n      } else {\n        byte = 0;\n      }\n    }\n  }\n\n  for (const c of input) {\n    decodeChar(c);\n  }\n\n  return output.slice(0, o);\n}\n", "// tslint:disable:no-bitwise\n\n// This file is translated to JavaScript from\n// https://lxp32.github.io/docs/a-simple-example-crc32-calculation/\nconst lookUpTable: Uint32Array = new Uint32Array([\n  0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n  0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n  0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n  0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n  0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n  0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n  0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n  0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n  0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n  0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n  0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n  0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n  0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n  0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n  0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n  0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n  0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n  0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n  0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n  0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n  0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n  0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n  0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n  0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n  0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n  0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n  0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n  0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n  0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n  0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n  0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n  0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,\n]);\n\n/**\n * Calculate the CRC32 of an ArrayBufferLike.\n * @param buf The BufferLike to calculate the CRC32 of.\n */\nexport function getCrc32(buf: ArrayBufferLike): number {\n  const b = new Uint8Array(buf);\n  let crc = -1;\n\n  // tslint:disable-next-line:prefer-for-of\n  for (let i = 0; i < b.length; i++) {\n    const byte = b[i];\n    const t = (byte ^ crc) & 0xff;\n    crc = lookUpTable[t] ^ (crc >>> 8);\n  }\n\n  return (crc ^ -1) >>> 0;\n}\n", "import { sha224 as jsSha224 } from 'js-sha256';\n\n/**\n * Returns the SHA224 hash of the buffer.\n * @param data Arraybuffer to encode\n */\nexport function sha224(data: ArrayBuffer): Uint8Array {\n  const shaObj = jsSha224.create();\n  shaObj.update(data);\n  return new Uint8Array(shaObj.array());\n}\n", "import { decode, encode } from './utils/base32';\nimport { getCrc32 } from './utils/getCrc';\nimport { sha224 } from './utils/sha224';\n\nconst SELF_AUTHENTICATING_SUFFIX = 2;\nconst ANONYMOUS_SUFFIX = 4;\n\nconst MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR = 'aaaaa-aa';\n\nconst fromHexString = (hexString: string) =>\n  new Uint8Array((hexString.match(/.{1,2}/g) ?? []).map(byte => parseInt(byte, 16)));\n\nconst toHexString = (bytes: Uint8Array) =>\n  bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n\nexport class Principal {\n  public static anonymous(): Principal {\n    return new this(new Uint8Array([ANONYMOUS_SUFFIX]));\n  }\n\n  /**\n   * Utility method, returning the principal representing the management canister, decoded from the hex string `'aaaaa-aa'`\n   * @returns {Principal} principal of the management canister\n   */\n  public static managementCanister(): Principal {\n    return this.fromHex(MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR);\n  }\n\n  public static selfAuthenticating(publicKey: Uint8Array): Principal {\n    const sha = sha224(publicKey);\n    return new this(new Uint8Array([...sha, SELF_AUTHENTICATING_SUFFIX]));\n  }\n\n  public static from(other: unknown): Principal {\n    if (typeof other === 'string') {\n      return Principal.fromText(other);\n    } else if (\n      typeof other === 'object' &&\n      other !== null &&\n      (other as Principal)._isPrincipal === true\n    ) {\n      return new Principal((other as Principal)._arr);\n    }\n\n    throw new Error(`Impossible to convert ${JSON.stringify(other)} to Principal.`);\n  }\n\n  public static fromHex(hex: string): Principal {\n    return new this(fromHexString(hex));\n  }\n\n  public static fromText(text: string): Principal {\n    const canisterIdNoDash = text.toLowerCase().replace(/-/g, '');\n\n    let arr = decode(canisterIdNoDash);\n    arr = arr.slice(4, arr.length);\n\n    const principal = new this(arr);\n    if (principal.toText() !== text) {\n      throw new Error(\n        `Principal \"${principal.toText()}\" does not have a valid checksum (original value \"${text}\" may not be a valid Principal ID).`,\n      );\n    }\n\n    return principal;\n  }\n\n  public static fromUint8Array(arr: Uint8Array): Principal {\n    return new this(arr);\n  }\n\n  public readonly _isPrincipal = true;\n\n  protected constructor(private _arr: Uint8Array) {}\n\n  public isAnonymous(): boolean {\n    return this._arr.byteLength === 1 && this._arr[0] === ANONYMOUS_SUFFIX;\n  }\n\n  public toUint8Array(): Uint8Array {\n    return this._arr;\n  }\n\n  public toHex(): string {\n    return toHexString(this._arr).toUpperCase();\n  }\n\n  public toText(): string {\n    const checksumArrayBuf = new ArrayBuffer(4);\n    const view = new DataView(checksumArrayBuf);\n    view.setUint32(0, getCrc32(this._arr));\n    const checksum = new Uint8Array(checksumArrayBuf);\n\n    const bytes = Uint8Array.from(this._arr);\n    const array = new Uint8Array([...checksum, ...bytes]);\n\n    const result = encode(array);\n    const matches = result.match(/.{1,5}/g);\n    if (!matches) {\n      // This should only happen if there's no character, which is unreachable.\n      throw new Error();\n    }\n    return matches.join('-');\n  }\n\n  public toString(): string {\n    return this.toText();\n  }\n\n  /**\n   * Utility method taking a Principal to compare against. Used for determining canister ranges in certificate verification\n   * @param {Principal} other - a {@link Principal} to compare\n   * @returns {'lt' | 'eq' | 'gt'} `'lt' | 'eq' | 'gt'` a string, representing less than, equal to, or greater than\n   */\n  public compareTo(other: Principal): 'lt' | 'eq' | 'gt' {\n    for (let i = 0; i < Math.min(this._arr.length, other._arr.length); i++) {\n      if (this._arr[i] < other._arr[i]) return 'lt';\n      else if (this._arr[i] > other._arr[i]) return 'gt';\n    }\n    // Here, at least one principal is a prefix of the other principal (they could be the same)\n    if (this._arr.length < other._arr.length) return 'lt';\n    if (this._arr.length > other._arr.length) return 'gt';\n    return 'eq';\n  }\n\n  /**\n   * Utility method checking whether a provided Principal is less than or equal to the current one using the {@link Principal.compareTo} method\n   * @param other a {@link Principal} to compare\n   * @returns {boolean} boolean\n   */\n  public ltEq(other: Principal): boolean {\n    const cmp = this.compareTo(other);\n    return cmp == 'lt' || cmp == 'eq';\n  }\n\n  /**\n   * Utility method checking whether a provided Principal is greater than or equal to the current one using the {@link Principal.compareTo} method\n   * @param other a {@link Principal} to compare\n   * @returns {boolean} boolean\n   */\n  public gtEq(other: Principal): boolean {\n    const cmp = this.compareTo(other);\n    return cmp == 'gt' || cmp == 'eq';\n  }\n}\n", "/**\n * Concatenate multiple array buffers.\n * @param buffers The buffers to concatenate.\n */\nexport function concat(...buffers: ArrayBuffer[]): ArrayBuffer {\n  const result = new Uint8Array(buffers.reduce((acc, curr) => acc + curr.byteLength, 0));\n  let index = 0;\n  for (const b of buffers) {\n    result.set(new Uint8Array(b), index);\n    index += b.byteLength;\n  }\n  return result;\n}\n\n/**\n * Returns an hexadecimal representation of an array buffer.\n * @param bytes The array buffer.\n */\nexport function toHexString(bytes: ArrayBuffer): string {\n  return new Uint8Array(bytes).reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n}\n\n/**\n * Return an array buffer from its hexadecimal representation.\n * @param hexString The hexadecimal string.\n */\nexport function fromHexString(hexString: string): ArrayBuffer {\n  return new Uint8Array((hexString.match(/.{1,2}/g) ?? []).map(byte => parseInt(byte, 16)));\n}\n\n/**\n * A class that abstracts a pipe-like ArrayBuffer.\n */\nexport class PipeArrayBuffer {\n  /**\n   * The reading view. It's a sliding window as we read and write, pointing to the buffer.\n   * @private\n   */\n  private _view: Uint8Array;\n\n  /**\n   * The actual buffer containing the bytes.\n   * @private\n   */\n  private _buffer: ArrayBuffer;\n\n  /**\n   * Creates a new instance of a pipe\n   * @param buffer an optional buffer to start with\n   * @param length an optional amount of bytes to use for the length.\n   */\n  constructor(buffer?: ArrayBuffer, length = buffer?.byteLength || 0) {\n    this._buffer = buffer || new ArrayBuffer(0);\n    this._view = new Uint8Array(this._buffer, 0, length);\n  }\n\n  get buffer(): ArrayBuffer {\n    // Return a copy of the buffer.\n    return this._view.slice();\n  }\n\n  get byteLength(): number {\n    return this._view.byteLength;\n  }\n\n  /**\n   * Read `num` number of bytes from the front of the pipe.\n   * @param num The number of bytes to read.\n   */\n  public read(num: number): ArrayBuffer {\n    const result = this._view.subarray(0, num);\n    this._view = this._view.subarray(num);\n    return result.slice().buffer;\n  }\n\n  public readUint8(): number | undefined {\n    const result = this._view[0];\n    this._view = this._view.subarray(1);\n    return result;\n  }\n\n  /**\n   * Write a buffer to the end of the pipe.\n   * @param buf The bytes to write.\n   */\n  public write(buf: ArrayBuffer): void {\n    const b = new Uint8Array(buf);\n    const offset = this._view.byteLength;\n    if (this._view.byteOffset + this._view.byteLength + b.byteLength >= this._buffer.byteLength) {\n      // Alloc grow the view to include the new bytes.\n      this.alloc(b.byteLength);\n    } else {\n      // Update the view to include the new bytes.\n      this._view = new Uint8Array(\n        this._buffer,\n        this._view.byteOffset,\n        this._view.byteLength + b.byteLength,\n      );\n    }\n\n    this._view.set(b, offset);\n  }\n\n  /**\n   * Whether or not there is more data to read from the buffer\n   */\n  public get end(): boolean {\n    return this._view.byteLength === 0;\n  }\n\n  /**\n   * Allocate a fixed amount of memory in the buffer. This does not affect the view.\n   * @param amount A number of bytes to add to the buffer.\n   */\n  public alloc(amount: number) {\n    // Add a little bit of exponential growth.\n    // tslint:disable-next-line:no-bitwise\n    const b = new ArrayBuffer(((this._buffer.byteLength + amount) * 1.2) | 0);\n    const v = new Uint8Array(b, 0, this._view.byteLength + amount);\n    v.set(this._view);\n    this._buffer = b;\n    this._view = v;\n  }\n}\n", "/**\n * Hashes a string to a number. Algorithm can be found here:\n * https://caml.inria.fr/pub/papers/garrigue-polymorphic_variants-ml98.pdf\n * @param s\n */\nfunction idlHash(s: string): number {\n  const utf8encoder = new TextEncoder();\n  const array = utf8encoder.encode(s);\n\n  let h = 0;\n  for (const c of array) {\n    h = (h * 223 + c) % 2 ** 32;\n  }\n  return h;\n}\n\n/**\n *\n * @param label string\n * @returns number representing hashed label\n */\nexport function idlLabelToId(label: string): number {\n  if (/^_\\d+_$/.test(label) || /^_0x[0-9a-fA-F]+_$/.test(label)) {\n    const num = +label.slice(1, -1);\n    if (Number.isSafeInteger(num) && num >= 0 && num < 2 ** 32) {\n      return num;\n    }\n  }\n  return idlHash(label);\n}\n", "/* eslint-disable no-constant-condition */\n// tslint:disable:no-bitwise\n// Note: this file uses buffer-pipe, which on Node only, uses the Node Buffer\n//       implementation, which isn't compatible with the NPM buffer package\n//       which we use everywhere else. This means that we have to transform\n//       one into the other, hence why every function that returns a Buffer\n//       actually return `new Buffer(pipe.buffer)`.\n// TODO: The best solution would be to have our own buffer type around\n//       Uint8Array which is standard.\nimport { PipeArrayBuffer as Pipe } from './buffer';\n\nfunction eob(): never {\n  throw new Error('unexpected end of buffer');\n}\n\n/**\n *\n * @param pipe Pipe from buffer-pipe\n * @param num number\n * @returns Buffer\n */\nexport function safeRead(pipe: Pipe, num: number): ArrayBuffer {\n  if (pipe.byteLength < num) {\n    eob();\n  }\n  return pipe.read(num);\n}\n\n/**\n * @param pipe\n */\nexport function safeReadUint8(pipe: Pipe): number {\n  const byte = pipe.readUint8();\n  if (byte === undefined) {\n    eob();\n  }\n  return byte;\n}\n\n/**\n * Encode a positive number (or bigint) into a Buffer. The number will be floored to the\n * nearest integer.\n * @param value The number to encode.\n */\nexport function lebEncode(value: bigint | number): ArrayBuffer {\n  if (typeof value === 'number') {\n    value = BigInt(value);\n  }\n\n  if (value < BigInt(0)) {\n    throw new Error('Cannot leb encode negative values.');\n  }\n\n  const byteLength = (value === BigInt(0) ? 0 : Math.ceil(Math.log2(Number(value)))) + 1;\n  const pipe = new Pipe(new ArrayBuffer(byteLength), 0);\n  while (true) {\n    const i = Number(value & BigInt(0x7f));\n    value /= BigInt(0x80);\n    if (value === BigInt(0)) {\n      pipe.write(new Uint8Array([i]));\n      break;\n    } else {\n      pipe.write(new Uint8Array([i | 0x80]));\n    }\n  }\n\n  return pipe.buffer;\n}\n\n/**\n * Decode a leb encoded buffer into a bigint. The number will always be positive (does not\n * support signed leb encoding).\n * @param pipe A Buffer containing the leb encoded bits.\n */\nexport function lebDecode(pipe: Pipe): bigint {\n  let weight = BigInt(1);\n  let value = BigInt(0);\n  let byte;\n\n  do {\n    byte = safeReadUint8(pipe);\n    value += BigInt(byte & 0x7f).valueOf() * weight;\n    weight *= BigInt(128);\n  } while (byte >= 0x80);\n\n  return value;\n}\n\n/**\n * Encode a number (or bigint) into a Buffer, with support for negative numbers. The number\n * will be floored to the nearest integer.\n * @param value The number to encode.\n */\nexport function slebEncode(value: bigint | number): ArrayBuffer {\n  if (typeof value === 'number') {\n    value = BigInt(value);\n  }\n\n  const isNeg = value < BigInt(0);\n  if (isNeg) {\n    value = -value - BigInt(1);\n  }\n  const byteLength = (value === BigInt(0) ? 0 : Math.ceil(Math.log2(Number(value)))) + 1;\n  const pipe = new Pipe(new ArrayBuffer(byteLength), 0);\n  while (true) {\n    const i = getLowerBytes(value);\n    value /= BigInt(0x80);\n\n    // prettier-ignore\n    if (   ( isNeg && value === BigInt(0) && (i & 0x40) !== 0)\n          || (!isNeg && value === BigInt(0) && (i & 0x40) === 0)) {\n        pipe.write(new Uint8Array([i]));\n        break;\n      } else {\n        pipe.write(new Uint8Array([i | 0x80]));\n      }\n  }\n\n  function getLowerBytes(num: bigint): number {\n    const bytes = num % BigInt(0x80);\n    if (isNeg) {\n      // We swap the bits here again, and remove 1 to do two's complement.\n      return Number(BigInt(0x80) - bytes - BigInt(1));\n    } else {\n      return Number(bytes);\n    }\n  }\n  return pipe.buffer;\n}\n\n/**\n * Decode a leb encoded buffer into a bigint. The number is decoded with support for negative\n * signed-leb encoding.\n * @param pipe A Buffer containing the signed leb encoded bits.\n */\nexport function slebDecode(pipe: Pipe): bigint {\n  // Get the size of the buffer, then cut a buffer of that size.\n  const pipeView = new Uint8Array(pipe.buffer);\n  let len = 0;\n  for (; len < pipeView.byteLength; len++) {\n    if (pipeView[len] < 0x80) {\n      // If it's a positive number, we reuse lebDecode.\n      if ((pipeView[len] & 0x40) === 0) {\n        return lebDecode(pipe);\n      }\n      break;\n    }\n  }\n\n  const bytes = new Uint8Array(safeRead(pipe, len + 1));\n  let value = BigInt(0);\n  for (let i = bytes.byteLength - 1; i >= 0; i--) {\n    value = value * BigInt(0x80) + BigInt(0x80 - (bytes[i] & 0x7f) - 1);\n  }\n  return -value - BigInt(1);\n}\n\n/**\n *\n * @param value bigint or number\n * @param byteLength number\n * @returns Buffer\n */\nexport function writeUIntLE(value: bigint | number, byteLength: number): ArrayBuffer {\n  if (BigInt(value) < BigInt(0)) {\n    throw new Error('Cannot write negative values.');\n  }\n  return writeIntLE(value, byteLength);\n}\n\n/**\n *\n * @param value\n * @param byteLength\n */\nexport function writeIntLE(value: bigint | number, byteLength: number): ArrayBuffer {\n  value = BigInt(value);\n\n  const pipe = new Pipe(new ArrayBuffer(Math.min(1, byteLength)), 0);\n  let i = 0;\n  let mul = BigInt(256);\n  let sub = BigInt(0);\n  let byte = Number(value % mul);\n  pipe.write(new Uint8Array([byte]));\n  while (++i < byteLength) {\n    if (value < 0 && sub === BigInt(0) && byte !== 0) {\n      sub = BigInt(1);\n    }\n    byte = Number((value / mul - sub) % BigInt(256));\n    pipe.write(new Uint8Array([byte]));\n    mul *= BigInt(256);\n  }\n\n  return pipe.buffer;\n}\n\n/**\n *\n * @param pipe Pipe from buffer-pipe\n * @param byteLength number\n * @returns bigint\n */\nexport function readUIntLE(pipe: Pipe, byteLength: number): bigint {\n  let val = BigInt(safeReadUint8(pipe));\n  let mul = BigInt(1);\n  let i = 0;\n  while (++i < byteLength) {\n    mul *= BigInt(256);\n    const byte = BigInt(safeReadUint8(pipe));\n    val = val + mul * byte;\n  }\n  return val;\n}\n\n/**\n *\n * @param pipe Pipe from buffer-pipe\n * @param byteLength number\n * @returns bigint\n */\nexport function readIntLE(pipe: Pipe, byteLength: number): bigint {\n  let val = readUIntLE(pipe, byteLength);\n  const mul = BigInt(2) ** (BigInt(8) * BigInt(byteLength - 1) + BigInt(7));\n  if (val >= mul) {\n    val -= mul * BigInt(2);\n  }\n  return val;\n}\n", "/**\n * Equivalent to `Math.log2(n)` with support for `BigInt` values\n *\n * @param n bigint or integer\n * @returns integer\n */\nexport function ilog2(n: bigint | number): number {\n  const nBig = BigInt(n);\n  if (n <= 0) {\n    throw new RangeError('Input must be positive');\n  }\n  return nBig.toString(2).length - 1;\n}\n\n/**\n * Equivalent to `2 ** n` with support for `BigInt` values\n * (necessary for browser preprocessors which replace the `**` operator with `Math.pow`)\n *\n * @param n bigint or integer\n * @returns bigint\n */\nexport function iexp2(n: bigint | number): bigint {\n  const nBig = BigInt(n);\n  if (n < 0) {\n    throw new RangeError('Input must be non-negative');\n  }\n  return BigInt(1) << nBig;\n}\n", "/**\n * An error that happens in the Agent. This is the root of all errors and should be used\n * everywhere in the Agent code (this package).\n *\n * @todo https://github.com/dfinity/agent-js/issues/420\n */\nexport class AgentError extends Error {\n  constructor(public readonly message: string) {\n    super(message);\n    Object.setPrototypeOf(this, AgentError.prototype);\n  }\n}\n", "// tslint:disable:max-classes-per-file\n// This file is based on:\n// tslint:disable-next-line: max-line-length\n// https://github.com/dfinity-lab/dfinity/blob/9bca65f8edd65701ea6bdb00e0752f9186bbc893/docs/spec/public/index.adoc#cbor-encoding-of-requests-and-responses\nimport borc from 'borc';\nimport * as cbor from 'simple-cbor';\nimport { CborEncoder, SelfDescribeCborSerializer } from 'simple-cbor';\nimport { Principal } from '@dfinity/principal';\nimport { concat, fromHex } from './utils/buffer';\n\n// We are using hansl/simple-cbor for CBOR serialization, to avoid issues with\n// encoding the uint64 values that the HTTP handler of the client expects for\n// canister IDs. However, simple-cbor does not yet provide deserialization so\n// we are using `Uint8Array` so that we can use the dignifiedquire/borc CBOR\n// decoder.\n\nclass PrincipalEncoder implements CborEncoder<Principal> {\n  public get name() {\n    return 'Principal';\n  }\n\n  public get priority() {\n    return 0;\n  }\n\n  public match(value: any): boolean {\n    return value && value._isPrincipal === true;\n  }\n\n  public encode(v: Principal): cbor.CborValue {\n    return cbor.value.bytes(v.toUint8Array());\n  }\n}\n\nclass BufferEncoder implements CborEncoder<ArrayBuffer> {\n  public get name() {\n    return 'Buffer';\n  }\n\n  public get priority() {\n    return 1;\n  }\n\n  public match(value: any): boolean {\n    return value instanceof ArrayBuffer || ArrayBuffer.isView(value);\n  }\n\n  public encode(v: ArrayBuffer): cbor.CborValue {\n    return cbor.value.bytes(new Uint8Array(v));\n  }\n}\n\nclass BigIntEncoder implements CborEncoder<BigInt> {\n  public get name() {\n    return 'BigInt';\n  }\n\n  public get priority() {\n    return 1;\n  }\n\n  public match(value: any): boolean {\n    return typeof value === `bigint`;\n  }\n\n  public encode(v: bigint): cbor.CborValue {\n    // Always use a bigint encoding.\n    if (v > BigInt(0)) {\n      return cbor.value.tagged(2, cbor.value.bytes(fromHex(v.toString(16))));\n    } else {\n      return cbor.value.tagged(3, cbor.value.bytes(fromHex((BigInt('-1') * v).toString(16))));\n    }\n  }\n}\n\nconst serializer = SelfDescribeCborSerializer.withDefaultEncoders(true);\nserializer.addEncoder(new PrincipalEncoder());\nserializer.addEncoder(new BufferEncoder());\nserializer.addEncoder(new BigIntEncoder());\n\nexport enum CborTag {\n  Uint64LittleEndian = 71,\n  Semantic = 55799,\n}\n\n/**\n * Encode a JavaScript value into CBOR.\n */\nexport function encode(value: any): ArrayBuffer {\n  return serializer.serialize(value);\n}\n\nfunction decodePositiveBigInt(buf: Uint8Array): bigint {\n  const len = buf.byteLength;\n  let res = BigInt(0);\n  for (let i = 0; i < len; i++) {\n    // tslint:disable-next-line:no-bitwise\n    res = res * BigInt(0x100) + BigInt(buf[i]);\n  }\n\n  return res;\n}\n\n// A BORC subclass that decodes byte strings to ArrayBuffer instead of the Buffer class.\nclass Uint8ArrayDecoder extends borc.Decoder {\n  public createByteString(raw: ArrayBuffer[]): ArrayBuffer {\n    return concat(...raw);\n  }\n\n  public createByteStringFromHeap(start: number, end: number): ArrayBuffer {\n    if (start === end) {\n      return new ArrayBuffer(0);\n    }\n\n    return new Uint8Array((this as any)._heap.slice(start, end));\n  }\n}\n\nexport function decode<T>(input: ArrayBuffer): T {\n  const buffer = new Uint8Array(input);\n  const decoder = new Uint8ArrayDecoder({\n    size: buffer.byteLength,\n    tags: {\n      // Override tags 2 and 3 for BigInt support (borc supports only BigNumber).\n      2: val => decodePositiveBigInt(val),\n      3: val => -decodePositiveBigInt(val),\n      [CborTag.Semantic]: (value: T): T => value,\n    },\n  });\n\n  return decoder.decodeFirst(buffer);\n}\n", "/**\n * Concatenate multiple array buffers.\n * @param buffers The buffers to concatenate.\n */\nexport function concat(...buffers: ArrayBuffer[]): ArrayBuffer {\n  const result = new Uint8Array(buffers.reduce((acc, curr) => acc + curr.byteLength, 0));\n  let index = 0;\n  for (const b of buffers) {\n    result.set(new Uint8Array(b), index);\n    index += b.byteLength;\n  }\n  return result.buffer;\n}\n\n/**\n * Transforms a buffer to an hexadecimal string. This will use the buffer as an Uint8Array.\n * @param buffer The buffer to return the hexadecimal string of.\n */\nexport function toHex(buffer: ArrayBuffer): string {\n  return [...new Uint8Array(buffer)].map(x => x.toString(16).padStart(2, '0')).join('');\n}\n\nconst hexRe = new RegExp(/^([0-9A-F]{2})*$/i);\n\n/**\n * Transforms a hexadecimal string into an array buffer.\n * @param hex The hexadecimal string to use.\n */\nexport function fromHex(hex: string): ArrayBuffer {\n  if (!hexRe.test(hex)) {\n    throw new Error('Invalid hexadecimal string.');\n  }\n  const buffer = [...hex]\n    .reduce((acc, curr, i) => {\n      // tslint:disable-next-line:no-bitwise\n      acc[(i / 2) | 0] = (acc[(i / 2) | 0] || '') + curr;\n      return acc;\n    }, [] as string[])\n    .map(x => Number.parseInt(x, 16));\n\n  return new Uint8Array(buffer).buffer;\n}\n\nexport function compare(b1: ArrayBuffer, b2: ArrayBuffer): number {\n  if (b1.byteLength !== b2.byteLength) {\n    return b1.byteLength - b2.byteLength;\n  }\n\n  const u1 = new Uint8Array(b1);\n  const u2 = new Uint8Array(b2);\n  for (let i = 0; i < u1.length; i++) {\n    if (u1[i] !== u2[i]) {\n      return u1[i] - u2[i];\n    }\n  }\n  return 0;\n}\n", "import { lebEncode } from '@dfinity/candid';\nimport { Principal } from '@dfinity/principal';\nimport borc from 'borc';\nimport { sha256 as jsSha256 } from 'js-sha256';\nimport { compare, concat } from './utils/buffer';\n\nexport type RequestId = ArrayBuffer & { __requestId__: void };\n\n/**\n * sha256 hash the provided Buffer\n * @param data - input to hash function\n */\nexport function hash(data: ArrayBuffer): ArrayBuffer {\n  return jsSha256.create().update(new Uint8Array(data)).arrayBuffer();\n}\n\ninterface ToHashable {\n  toHash(): unknown;\n}\n\n/**\n *\n * @param value unknown value\n * @returns ArrayBuffer\n */\nexport function hashValue(value: unknown): ArrayBuffer {\n  if (value instanceof borc.Tagged) {\n    return hashValue(value.value);\n  } else if (typeof value === 'string') {\n    return hashString(value);\n  } else if (typeof value === 'number') {\n    return hash(lebEncode(value));\n  } else if (value instanceof ArrayBuffer || ArrayBuffer.isView(value)) {\n    return hash(value as ArrayBuffer);\n  } else if (Array.isArray(value)) {\n    const vals = value.map(hashValue);\n    return hash(concat(...vals));\n  } else if (value && typeof value === 'object' && (value as any)._isPrincipal) {\n    return hash((value as Principal).toUint8Array());\n  } else if (\n    typeof value === 'object' &&\n    value !== null &&\n    typeof (value as ToHashable).toHash === 'function'\n  ) {\n    return hashValue((value as ToHashable).toHash());\n    // TODO This should be move to a specific async method as the webauthn flow required\n    // the flow to be synchronous to ensure Safari touch id works.\n    // } else if (value instanceof Promise) {\n    //   return value.then(x => hashValue(x));\n  } else if (typeof value === 'bigint') {\n    // Do this check much later than the other bigint check because this one is much less\n    // type-safe.\n    // So we want to try all the high-assurance type guards before this 'probable' one.\n    return hash(lebEncode(value));\n  }\n  throw Object.assign(new Error(`Attempt to hash a value of unsupported type: ${value}`), {\n    // include so logs/callers can understand the confusing value.\n    // (when stringified in error message, prototype info is lost)\n    value,\n  });\n}\n\nconst hashString = (value: string): ArrayBuffer => {\n  const encoded = new TextEncoder().encode(value);\n  return hash(encoded);\n};\n\n/**\n * Get the RequestId of the provided ic-ref request.\n * RequestId is the result of the representation-independent-hash function.\n * https://sdk.dfinity.org/docs/interface-spec/index.html#hash-of-map\n * @param request - ic-ref request to hash into RequestId\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function requestIdOf(request: Record<string, any>): RequestId {\n  const hashed: Array<[ArrayBuffer, ArrayBuffer]> = Object.entries(request)\n    .filter(([, value]) => value !== undefined)\n    .map(([key, value]: [string, unknown]) => {\n      const hashedKey = hashString(key);\n      const hashedValue = hashValue(value);\n\n      return [hashedKey, hashedValue] as [ArrayBuffer, ArrayBuffer];\n    });\n\n  const traversed: Array<[ArrayBuffer, ArrayBuffer]> = hashed;\n\n  const sorted: Array<[ArrayBuffer, ArrayBuffer]> = traversed.sort(([k1], [k2]) => {\n    return compare(k1, k2);\n  });\n\n  const concatenated: ArrayBuffer = concat(...sorted.map(x => concat(...x)));\n  const requestId = hash(concatenated) as RequestId;\n  return requestId;\n}\n", "import * as base64Arraybuffer from 'base64-arraybuffer';\n\n// This WASM is generated from the miracl BLS Rust code (see\n// https://github.com/dfinity/miracl_core_bls12381/)\nimport { wasmBytesBase64 } from './wasm';\n\n/* tslint:disable */\n/* eslint-disable */\nlet wasm: InitOutput;\n\nconst wasmBytes = base64Arraybuffer.decode(wasmBytesBase64);\n\n/**\n * @returns {number}\n */\nexport function bls_init() {\n  let ret = wasm.bls_init();\n  return ret;\n}\n\nlet cachegetUint8Memory0: any = null;\nfunction getUint8Memory0() {\n  if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachegetUint8Memory0;\n}\n\nfunction passArray8ToWasm0(arg: any, malloc: any): [number, number] {\n  const ptr = malloc(arg.length * 1);\n  getUint8Memory0().set(arg, ptr / 1);\n  return [ptr, arg.length];\n}\n\n/**\n * @param {Uint8Array} sig\n * @param {Uint8Array} m\n * @param {Uint8Array} w\n * @returns {number}\n */\nexport function bls_verify(sig: Uint8Array, m: Uint8Array, w: Uint8Array): number {\n  const [ptr0, len0] = passArray8ToWasm0(sig, wasm.__wbindgen_malloc);\n  const [ptr1, len1] = passArray8ToWasm0(m, wasm.__wbindgen_malloc);\n  const [ptr2, len2] = passArray8ToWasm0(w, wasm.__wbindgen_malloc);\n\n  const ret = wasm.bls_verify(ptr0, len0, ptr1, len1, ptr2, len2);\n  return ret;\n}\n\nasync function load(module: any, imports: any) {\n  if (typeof Response === 'function' && module instanceof Response) {\n    const bytes = await module.arrayBuffer();\n    return await WebAssembly.instantiate(bytes, imports);\n  } else {\n    const instance = await WebAssembly.instantiate(module, imports);\n\n    if (instance instanceof WebAssembly.Instance) {\n      return { instance, module };\n    } else {\n      return instance;\n    }\n  }\n}\n\nasync function init(): Promise<InitOutput> {\n  const imports = {};\n  const { instance, module } = await load(wasmBytes, imports);\n\n  wasm = instance.exports as any as InitOutput;\n  (init as any).__wbindgen_wasm_module = module;\n\n  return wasm;\n}\n\nexport type InitInput = RequestInfo | URL | Response | BufferSource | WebAssembly.Module;\n\nexport interface InitOutput {\n  readonly memory: WebAssembly.Memory;\n  readonly bls_init: () => number;\n  readonly bls_verify: (a: number, b: number, c: number, d: number, e: number, f: number) => number;\n  readonly __wbindgen_malloc: (a: number) => number;\n}\n\n/**\n * If `module_or_path` is {RequestInfo} or {URL}, makes a request and\n * for everything else, calls `WebAssembly.instantiate` directly.\n *\n * @param {InitInput | Promise<InitInput>} module_or_path\n *\n * @returns {Promise<InitOutput>}\n */\nexport default init;\n", "export const wasmBytesBase64 = ``;\n", "import init, { bls_init, bls_verify } from '../vendor/bls/bls';\n\nexport let verify: (pk: Uint8Array, sig: Uint8Array, msg: Uint8Array) => boolean;\n\n/**\n *\n * @param pk primary key: Uint8Array\n * @param sig signature: Uint8Array\n * @param msg message: Uint8Array\n * @returns Promise resolving a boolean\n */\nexport async function blsVerify(\n  pk: Uint8Array,\n  sig: Uint8Array,\n  msg: Uint8Array,\n): Promise<boolean> {\n  if (!verify) {\n    await init();\n    if (bls_init() !== 0) {\n      throw new Error('Cannot initialize BLS');\n    }\n    verify = (pk1, sig1, msg1) => {\n      // Reorder things from what the WASM expects (sig, m, w).\n      return bls_verify(sig1, msg1, pk1) === 0;\n    };\n  }\n  return verify(pk, sig, msg);\n}\n", "import * as cbor from './cbor';\nimport { AgentError } from './errors';\nimport { hash } from './request_id';\nimport { concat, fromHex, toHex } from './utils/buffer';\nimport { Principal } from '@dfinity/principal';\nimport * as bls from './utils/bls';\n\n/**\n * A certificate may fail verification with respect to the provided public key\n */\nexport class CertificateVerificationError extends AgentError {\n  constructor(reason: string) {\n    super(`Invalid certificate: ${reason}`);\n  }\n}\n\ninterface Cert {\n  tree: HashTree;\n  signature: ArrayBuffer;\n  delegation?: Delegation;\n}\n\nconst enum NodeId {\n  Empty = 0,\n  Fork = 1,\n  Labeled = 2,\n  Leaf = 3,\n  Pruned = 4,\n}\n\nexport type HashTree =\n  | [NodeId.Empty]\n  | [NodeId.Fork, HashTree, HashTree]\n  | [NodeId.Labeled, ArrayBuffer, HashTree]\n  | [NodeId.Leaf, ArrayBuffer]\n  | [NodeId.Pruned, ArrayBuffer];\n\n/**\n * Make a human readable string out of a hash tree.\n * @param tree\n */\nexport function hashTreeToString(tree: HashTree): string {\n  const indent = (s: string) =>\n    s\n      .split('\\n')\n      .map(x => '  ' + x)\n      .join('\\n');\n  function labelToString(label: ArrayBuffer): string {\n    const decoder = new TextDecoder(undefined, { fatal: true });\n    try {\n      return JSON.stringify(decoder.decode(label));\n    } catch (e) {\n      return `data(...${label.byteLength} bytes)`;\n    }\n  }\n\n  switch (tree[0]) {\n    case NodeId.Empty:\n      return '()';\n    case NodeId.Fork: {\n      const left = hashTreeToString(tree[1]);\n      const right = hashTreeToString(tree[2]);\n      return `sub(\\n left:\\n${indent(left)}\\n---\\n right:\\n${indent(right)}\\n)`;\n    }\n    case NodeId.Labeled: {\n      const label = labelToString(tree[1]);\n      const sub = hashTreeToString(tree[2]);\n      return `label(\\n label:\\n${indent(label)}\\n sub:\\n${indent(sub)}\\n)`;\n    }\n    case NodeId.Leaf: {\n      return `leaf(...${tree[1].byteLength} bytes)`;\n    }\n    case NodeId.Pruned: {\n      return `pruned(${toHex(new Uint8Array(tree[1]))}`;\n    }\n    default: {\n      return `unknown(${JSON.stringify(tree[0])})`;\n    }\n  }\n}\n\ninterface Delegation extends Record<string, any> {\n  subnet_id: ArrayBuffer;\n  certificate: ArrayBuffer;\n}\n\nfunction isBufferEqual(a: ArrayBuffer, b: ArrayBuffer): boolean {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  const a8 = new Uint8Array(a);\n  const b8 = new Uint8Array(b);\n  for (let i = 0; i < a8.length; i++) {\n    if (a8[i] !== b8[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\ntype VerifyFunc = (pk: Uint8Array, sig: Uint8Array, msg: Uint8Array) => Promise<boolean>;\n\nexport interface CreateCertificateOptions {\n  /**\n   * The bytes encoding the certificate to be verified\n   */\n  certificate: ArrayBuffer;\n  /**\n   * The root key against which to verify the certificate\n   * (normally, the root key of the IC main network)\n   */\n  rootKey: ArrayBuffer;\n  /**\n   * The effective canister ID of the request when verifying a response, or\n   * the signing canister ID when verifying a certified variable.\n   */\n  canisterId: Principal;\n  /**\n   * BLS Verification strategy. Default strategy uses wasm for performance, but that may not be available in all contexts.\n   */\n  blsVerify?: VerifyFunc;\n}\n\nexport class Certificate {\n  private readonly cert: Cert;\n\n  /**\n   * Create a new instance of a certificate, automatically verifying it. Throws a\n   * CertificateVerificationError if the certificate cannot be verified.\n   * @constructs {@link AuthClient}\n   * @param {CreateCertificateOptions} options\n   * @see {@link CreateCertificateOptions}\n   * @param {ArrayBuffer} options.certificate The bytes of the certificate\n   * @param {ArrayBuffer} options.rootKey The root key to verify against\n   * @param {Principal} options.canisterId The effective or signing canister ID\n   * @throws {CertificateVerificationError}\n   */\n  public static async create(options: CreateCertificateOptions): Promise<Certificate> {\n    let blsVerify = options.blsVerify;\n    if (!blsVerify) {\n      blsVerify = bls.blsVerify;\n    }\n    const cert = new Certificate(\n      options.certificate,\n      options.rootKey,\n      options.canisterId,\n      blsVerify,\n    );\n    await cert.verify();\n    return cert;\n  }\n\n  private constructor(\n    certificate: ArrayBuffer,\n    private _rootKey: ArrayBuffer,\n    private _canisterId: Principal,\n    private _blsVerify: VerifyFunc,\n  ) {\n    this.cert = cbor.decode(new Uint8Array(certificate));\n  }\n\n  public lookup(path: Array<ArrayBuffer | string>): ArrayBuffer | undefined {\n    return lookup_path(path, this.cert.tree);\n  }\n\n  private async verify(): Promise<void> {\n    const rootHash = await reconstruct(this.cert.tree);\n    const derKey = await this._checkDelegationAndGetKey(this.cert.delegation);\n    const sig = this.cert.signature;\n    const key = extractDER(derKey);\n    const msg = concat(domain_sep('ic-state-root'), rootHash);\n    let sigVer = false;\n    try {\n      sigVer = await this._blsVerify(new Uint8Array(key), new Uint8Array(sig), new Uint8Array(msg));\n    } catch (err) {\n      sigVer = false;\n    }\n    if (!sigVer) {\n      throw new CertificateVerificationError('Signature verification failed');\n    }\n  }\n\n  private async _checkDelegationAndGetKey(d?: Delegation): Promise<ArrayBuffer> {\n    if (!d) {\n      return this._rootKey;\n    }\n    const cert: Certificate = await Certificate.create({\n      certificate: d.certificate,\n      rootKey: this._rootKey,\n      canisterId: this._canisterId,\n    });\n\n    const rangeLookup = cert.lookup(['subnet', d.subnet_id, 'canister_ranges']);\n    if (!rangeLookup) {\n      throw new CertificateVerificationError(\n        `Could not find canister ranges for subnet 0x${toHex(d.subnet_id)}`,\n      );\n    }\n    const ranges_arr: Array<[Uint8Array, Uint8Array]> = cbor.decode(rangeLookup);\n    const ranges: Array<[Principal, Principal]> = ranges_arr.map(v => [\n      Principal.fromUint8Array(v[0]),\n      Principal.fromUint8Array(v[1]),\n    ]);\n\n    const canisterInRange = ranges.some(\n      r => r[0].ltEq(this._canisterId) && r[1].gtEq(this._canisterId),\n    );\n    if (!canisterInRange) {\n      throw new CertificateVerificationError(\n        `Canister ${this._canisterId} not in range of delegations for subnet 0x${toHex(\n          d.subnet_id,\n        )}`,\n      );\n    }\n    const publicKeyLookup = cert.lookup(['subnet', d.subnet_id, 'public_key']);\n    if (!publicKeyLookup) {\n      throw new Error(`Could not find subnet key for subnet 0x${toHex(d.subnet_id)}`);\n    }\n    return publicKeyLookup;\n  }\n}\n\nconst DER_PREFIX = fromHex(\n  '308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100',\n);\nconst KEY_LENGTH = 96;\n\nfunction extractDER(buf: ArrayBuffer): ArrayBuffer {\n  const expectedLength = DER_PREFIX.byteLength + KEY_LENGTH;\n  if (buf.byteLength !== expectedLength) {\n    throw new TypeError(`BLS DER-encoded public key must be ${expectedLength} bytes long`);\n  }\n  const prefix = buf.slice(0, DER_PREFIX.byteLength);\n  if (!isBufferEqual(prefix, DER_PREFIX)) {\n    throw new TypeError(\n      `BLS DER-encoded public key is invalid. Expect the following prefix: ${DER_PREFIX}, but get ${prefix}`,\n    );\n  }\n\n  return buf.slice(DER_PREFIX.byteLength);\n}\n\n/**\n * @param t\n */\nexport async function reconstruct(t: HashTree): Promise<ArrayBuffer> {\n  switch (t[0]) {\n    case NodeId.Empty:\n      return hash(domain_sep('ic-hashtree-empty'));\n    case NodeId.Pruned:\n      return t[1] as ArrayBuffer;\n    case NodeId.Leaf:\n      return hash(concat(domain_sep('ic-hashtree-leaf'), t[1] as ArrayBuffer));\n    case NodeId.Labeled:\n      return hash(\n        concat(\n          domain_sep('ic-hashtree-labeled'),\n          t[1] as ArrayBuffer,\n          await reconstruct(t[2] as HashTree),\n        ),\n      );\n    case NodeId.Fork:\n      return hash(\n        concat(\n          domain_sep('ic-hashtree-fork'),\n          await reconstruct(t[1] as HashTree),\n          await reconstruct(t[2] as HashTree),\n        ),\n      );\n    default:\n      throw new Error('unreachable');\n  }\n}\n\nfunction domain_sep(s: string): ArrayBuffer {\n  const len = new Uint8Array([s.length]);\n  const str = new TextEncoder().encode(s);\n  return concat(len, str);\n}\n\n/**\n * @param path\n * @param tree\n */\nexport function lookup_path(\n  path: Array<ArrayBuffer | string>,\n  tree: HashTree,\n): ArrayBuffer | undefined {\n  if (path.length === 0) {\n    switch (tree[0]) {\n      case NodeId.Leaf: {\n        return new Uint8Array(tree[1]).buffer;\n      }\n      default: {\n        return undefined;\n      }\n    }\n  }\n\n  const label = typeof path[0] === 'string' ? new TextEncoder().encode(path[0]) : path[0];\n  const t = find_label(label, flatten_forks(tree));\n  if (t) {\n    return lookup_path(path.slice(1), t);\n  }\n}\nfunction flatten_forks(t: HashTree): HashTree[] {\n  switch (t[0]) {\n    case NodeId.Empty:\n      return [];\n    case NodeId.Fork:\n      return flatten_forks(t[1] as HashTree).concat(flatten_forks(t[2] as HashTree));\n    default:\n      return [t];\n  }\n}\nfunction find_label(l: ArrayBuffer, trees: HashTree[]): HashTree | undefined {\n  if (trees.length === 0) {\n    return undefined;\n  }\n  for (const t of trees) {\n    if (t[0] === NodeId.Labeled) {\n      const p = t[1] as ArrayBuffer;\n      if (isBufferEqual(l, p)) {\n        return t[2];\n      }\n    }\n  }\n}\n", "/** @module CanisterStatus */\n\nimport { lebDecode, PipeArrayBuffer } from '@dfinity/candid';\nimport { Principal } from '@dfinity/principal';\nimport { AgentError } from '../errors';\nimport { HttpAgent } from '../agent/http';\nimport { Certificate, CreateCertificateOptions } from '../certificate';\nimport { toHex } from '../utils/buffer';\nimport * as Cbor from '../cbor';\n\n/**\n * Types of an entry on the canisterStatus map.\n * An entry of null indicates that the request failed, due to lack of permissions or the result being missing.\n */\nexport type Status = string | ArrayBuffer | Date | ArrayBuffer[] | Principal[] | bigint | null;\n\n/**\n * Interface to define a custom path. Nested paths will be represented as individual buffers, and can be created from text using {@link TextEncoder}\n */\nexport interface CustomPath {\n  key: string;\n  path: ArrayBuffer[] | string;\n  decodeStrategy: 'cbor' | 'hex' | 'leb128' | 'utf-8' | 'raw';\n}\n\n/**\n * Interface to request metadata from the icp:public or icp:private sections.\n * Similar to {@link CustomPath}, but accepts a simple string argument.\n * Private metadata will require the ${@link Identity} used by the ${@link HttpAgent} will need to be requested using an identity that controlls the canister.\n */\nexport interface MetaData {\n  kind: 'metadata';\n  key: string;\n  path: string | ArrayBuffer;\n  decodeStrategy: 'cbor' | 'hex' | 'leb128' | 'utf-8' | 'raw';\n}\n\n/**\n * Pre-configured fields for canister status paths\n */\nexport type Path =\n  | 'time'\n  | 'controllers'\n  | 'subnet'\n  | 'module_hash'\n  | 'candid'\n  | MetaData\n  | CustomPath;\n\nexport type StatusMap = Map<Path | string, Status>;\n\nexport type CanisterStatusOptions = {\n  canisterId: Principal;\n  agent: HttpAgent;\n  paths?: Path[] | Set<Path>;\n  blsVerify?: CreateCertificateOptions['blsVerify'];\n};\n\n/**\n *\n * @param {CanisterStatusOptions} options {@link CanisterStatusOptions}\n * @param {CanisterStatusOptions['canisterId']} options.canisterId {@link Principal}\n * @param {CanisterStatusOptions['agent']} options.agent {@link HttpAgent} optional authenticated agent to use to make the canister request. Useful for accessing private metadata under icp:private\n * @param {CanisterStatusOptions['paths']} options.paths {@link Path[]}\n * @returns {Status} object populated with data from the requested paths\n * @example\n * const status = await canisterStatus({\n *   paths: ['controllers', 'candid'],\n *   ...options\n * });\n *\n * const controllers = status.get('controllers');\n */\nexport const request = async (options: {\n  canisterId: Principal;\n  agent: HttpAgent;\n  paths?: Path[] | Set<Path>;\n}): Promise<StatusMap> => {\n  const { canisterId, agent, paths } = options;\n\n  const uniquePaths = [...new Set(paths)];\n\n  // Map path options to their correct formats\n  const encodedPaths = uniquePaths.map(path => {\n    return encodePath(path, canisterId);\n  });\n  const status = new Map<string | Path, Status>();\n\n  const promises = uniquePaths.map((path, index) => {\n    return (async () => {\n      try {\n        const response = await agent.readState(canisterId, {\n          paths: [encodedPaths[index]],\n        });\n        const cert = await Certificate.create({\n          certificate: response.certificate,\n          rootKey: agent.rootKey,\n          canisterId: canisterId,\n        });\n\n        const data = cert.lookup(encodePath(uniquePaths[index], canisterId));\n        if (!data) {\n          // Typically, the cert lookup will throw\n          console.warn(`Expected to find result for path ${path}, but instead found nothing.`);\n          if (typeof path === 'string') {\n            status.set(path, null);\n          } else {\n            status.set(path.key, null);\n          }\n        } else {\n          switch (path) {\n            case 'time': {\n              status.set(path, decodeTime(data));\n              break;\n            }\n            case 'controllers': {\n              status.set(path, decodeControllers(data));\n              break;\n            }\n            case 'module_hash': {\n              status.set(path, decodeHex(data));\n              break;\n            }\n            case 'candid': {\n              status.set(path, new TextDecoder().decode(data));\n              break;\n            }\n            default: {\n              // Check for CustomPath signature\n              if (typeof path !== 'string' && 'key' in path && 'path' in path) {\n                switch (path.decodeStrategy) {\n                  case 'raw':\n                    status.set(path.key, data);\n                    break;\n                  case 'leb128': {\n                    status.set(path.key, decodeLeb128(data));\n                    break;\n                  }\n                  case 'cbor': {\n                    status.set(path.key, decodeCbor(data));\n                    break;\n                  }\n                  case 'hex': {\n                    status.set(path.key, decodeHex(data));\n                    break;\n                  }\n                  case 'utf-8': {\n                    status.set(path.key, decodeUtf8(data));\n                  }\n                }\n              }\n            }\n          }\n        }\n      } catch (error) {\n        // Break on signature verification errors\n        if ((error as AgentError)?.message?.includes('Invalid certificate')) {\n          throw new AgentError((error as AgentError).message);\n        }\n        if (typeof path !== 'string' && 'key' in path && 'path' in path) {\n          status.set(path.key, null);\n        } else {\n          status.set(path, null);\n        }\n        console.group();\n        console.warn(`Expected to find result for path ${path}, but instead found nothing.`);\n        console.warn(error);\n        console.groupEnd();\n      }\n    })();\n  });\n\n  // Fetch all values separately, as each option can fail\n  await Promise.all(promises);\n\n  return status;\n};\n\nexport const encodePath = (path: Path, canisterId: Principal): ArrayBuffer[] => {\n  const encoder = new TextEncoder();\n\n  const encode = (arg: string): ArrayBuffer => {\n    return new DataView(encoder.encode(arg).buffer).buffer;\n  };\n  const canisterBuffer = new DataView(canisterId.toUint8Array().buffer).buffer;\n  switch (path) {\n    case 'time':\n      return [encode('time')];\n    case 'controllers':\n      return [encode('canister'), canisterBuffer, encode('controllers')];\n    case 'module_hash':\n      return [encode('canister'), canisterBuffer, encode('module_hash')];\n    case 'subnet':\n      return [encode('subnet')];\n    case 'candid':\n      return [encode('canister'), canisterBuffer, encode('metadata'), encode('candid:service')];\n    default: {\n      // Check for CustomPath signature\n      if ('key' in path && 'path' in path) {\n        // For simplified metadata queries\n        if (typeof path['path'] === 'string' || path['path'] instanceof ArrayBuffer) {\n          const metaPath = path.path;\n          const encoded = typeof metaPath === 'string' ? encode(metaPath) : metaPath;\n\n          return [encode('canister'), canisterBuffer, encode('metadata'), encoded];\n\n          // For non-metadata, return the provided custompath\n        } else {\n          return path['path'];\n        }\n      }\n    }\n  }\n  throw new Error(\n    `An unexpeected error was encountered while encoding your path for canister status. Please ensure that your path, ${path} was formatted correctly.`,\n  );\n};\n\nconst decodeHex = (buf: ArrayBuffer): string => {\n  return toHex(buf);\n};\n\nconst decodeLeb128 = (buf: ArrayBuffer): bigint => {\n  return lebDecode(new PipeArrayBuffer(buf));\n};\n\nconst decodeCbor = (buf: ArrayBuffer): ArrayBuffer[] => {\n  return Cbor.decode(buf);\n};\n\nconst decodeUtf8 = (buf: ArrayBuffer): string => {\n  return new TextDecoder().decode(buf);\n};\n\n// time is a LEB128-encoded Nat\nconst decodeTime = (buf: ArrayBuffer): Date => {\n  const decoded = decodeLeb128(buf);\n  return new Date(Number(decoded / BigInt(1_000_000)));\n};\n\n// Controllers are CBOR-encoded buffers, starting with a Tag we don't need\nconst decodeControllers = (buf: ArrayBuffer): Principal[] => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [tag, ...controllersRaw] = decodeCbor(buf);\n  return controllersRaw.map((buf: ArrayBuffer) => {\n    return Principal.fromUint8Array(new Uint8Array(buf));\n  });\n};\n"],
  "mappings": "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AEAE,GAEAC,GAEAC,GAEAC,GACAsD,GACAA,GACAA,GACAA,GAEArD,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GAEAC,GAEAC,GAEAC,GAEAC,GACAiD,GACAA,GACAA,GACAA,GAEAhD,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GAEAE,GAEAC,GAEAC,IAEAC,IACA2C,GACAA,GACAA,GAEA1C,GAEAC,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GAEAC,IAEAC,IAEAC,IAEAC,IAEAqC,GACAA,GACAA,GACApC,IAEAC,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GAEAC,IAEAC,IAEAC,IAEAC,IAEA+B,GACAA,GACAA,GACA9B,IAEAC,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IAEAC,IAEAC,IAEAC,IAEAC,IACAyB,GACAA,GACAA,GAEAxB,IAEAC,IAEAA,IAEAA,IAEAA,IAEAA,IAEAA,IAEAK,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IAEAA,IACAA,IACAA,IAEAI,IACAC,IACAC,IACAC,IACAW,GACAA,G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",
  "names": ["require_sha256", "__commonJSMin", "obj", "outputType", "is224", "message", "method", "i", "type", "key", "sharedMemory", "notString", "code", "index", "length", "blocks", "a", "b", "c", "d", "e", "f", "g", "h", "j", "s0", "s1", "maj", "t1", "t2", "ch", "ab", "da", "cd", "bc", "h0", "h1", "h2", "h3", "h4", "h5", "h6", "h7", "hex", "arr", "buffer", "dataView", "bytes", "oKeyPad", "iKeyPad", "innerHash", "buffer_exports", "__export", "Buffer", "INSPECT_MAX_BYTES", "SlowBuffer", "isBuffer", "_kMaxLength", "init", "inited", "len", "lookup", "revLookup", "toByteArray", "b64", "l", "tmp", "placeHolders", "Arr", "L", "tripletToBase64", "num", "encodeChunk", "uint8", "start", "end", "output", "fromByteArray", "extraBytes", "parts", "maxChunkLength", "len2", "read", "offset", "isLE", "mLen", "nBytes", "m", "eLen", "eMax", "eBias", "nBits", "s", "write", "value", "rt", "kMaxLength", "createBuffer", "that", "arg", "encodingOrOffset", "allocUnsafe", "from", "fromArrayBuffer", "fromString", "fromObject", "assertSize", "size", "alloc", "fill", "encoding", "checked", "string", "byteLength", "actual", "fromArrayLike", "array", "byteOffset", "internalIsBuffer", "isnan", "isArray", "loweredCase", "utf8ToBytes", "base64ToBytes", "slowToString", "hexSlice", "utf8Slice", "asciiSlice", "latin1Slice", "base64Slice", "utf16leSlice", "swap", "n", "bidirectionalIndexOf", "val", "dir", "arrayIndexOf", "indexSize", "arrLength", "valLength", "buf", "foundIndex", "found", "hexWrite", "remaining", "strLen", "parsed", "utf8Write", "blitBuffer", "asciiWrite", "asciiToBytes", "latin1Write", "base64Write", "ucs2Write", "utf16leToBytes", "res", "firstByte", "codePoint", "bytesPerSequence", "secondByte", "thirdByte", "fourthByte", "tempCodePoint", "decodeCodePointsArray", "codePoints", "MAX_ARGUMENTS_LENGTH", "ret", "out", "toHex", "checkOffset", "ext", "checkInt", "max", "min", "objectWriteUInt16", "littleEndian", "objectWriteUInt32", "checkIEEE754", "writeFloat", "noAssert", "writeDouble", "base64clean", "str", "stringtrim", "INVALID_BASE64_RE", "units", "leadSurrogate", "byteArray", "hi", "lo", "src", "dst", "isFastBuffer", "isSlowBuffer", "toString", "init_buffer", "__esmMin", "x", "y", "list", "pos", "target", "thisStart", "thisEnd", "thisCopy", "targetCopy", "newBuf", "sliceLen", "mul", "maxBytes", "limit", "sub", "targetStart", "require_buffer", "exports", "module", "polyfill", "k", "require_ieee754", "require_bignumber", "globalObject", "BigNumber", "isNumeric", "mathceil", "mathfloor", "bignumberError", "tooManyDigits", "BASE", "LOG_BASE", "MAX_SAFE_INTEGER", "POWS_TEN", "SQRT_BASE", "MAX", "clone", "configObject", "div", "convertBase", "parseNumeric", "P", "ONE", "DECIMAL_PLACES", "ROUNDING_MODE", "TO_EXP_NEG", "TO_EXP_POS", "MIN_EXP", "MAX_EXP", "CRYPTO", "MODULO_MODE", "POW_PRECISION", "FORMAT", "ALPHABET", "alphabetHasNormalDecimalDigits", "v", "alphabet", "caseChanged", "isNum", "intCheck", "round", "p", "maxOrMin", "pow2_53", "random53bitInt", "dp", "rand", "args", "sum", "decimal", "toBaseOut", "baseIn", "baseOut", "arrL", "sign", "callerIsToString", "r", "xc", "rm", "toFixedPoint", "coeffToString", "multiply", "base", "temp", "xlo", "xhi", "carry", "klo", "khi", "compare", "aL", "bL", "cmp", "subtract", "more", "prod", "prodL", "q", "qc", "rem", "remL", "rem0", "xi", "xL", "yc0", "yL", "yz", "yc", "bitFloor", "format", "id", "c0", "ne", "toExponential", "normalise", "basePrefix", "dotAfter", "dotBefore", "isInfinityOrNaN", "whitespaceOrPlus", "p1", "p2", "sd", "ni", "rd", "pows10", "valueOf", "half", "isModExp", "nIsBig", "nIsNeg", "nIsOdd", "isOdd", "t", "xLTy", "xe", "ye", "xcL", "ycL", "ylo", "yhi", "zc", "sqrtBase", "rep", "g1", "g2", "groupSeparator", "intPart", "fractionPart", "isNeg", "intDigits", "md", "d0", "d1", "d2", "exp", "n0", "n1", "z", "name", "zs", "require_decoder_asm", "stdlib", "foreign", "heap", "pushInt", "pushInt32", "pushInt32Neg", "pushInt64", "pushInt64Neg", "pushFloat", "pushFloatSingle", "pushFloatDouble", "pushTrue", "pushFalse", "pushUndefined", "pushNull", "pushInfinity", "pushInfinityNeg", "pushNaN", "pushNaNNeg", "pushArrayStart", "pushArrayStartFixed", "pushArrayStartFixed32", "pushArrayStartFixed64", "pushObjectStart", "pushObjectStartFixed", "pushObjectStartFixed32", "pushObjectStartFixed64", "pushByteString", "pushByteStringStart", "pushUtf8String", "pushUtf8StringStart", "pushSimpleUnassigned", "pushTagStart", "pushTagStart4", "pushTagStart8", "pushTagUnassigned", "pushBreak", "pow", "inputLength", "parse", "input", "jumpTable", "readUInt16", "readUInt32", "INT_P", "octet", "UINT_P_8", "UINT_P_16", "UINT_P_32", "UINT_P_64", "INT_N", "UINT_N_8", "UINT_N_16", "UINT_N_32", "UINT_N_64", "BYTE_STRING", "step", "BYTE_STRING_8", "BYTE_STRING_16", "BYTE_STRING_32", "BYTE_STRING_64", "BYTE_STRING_BREAK", "UTF8_STRING", "UTF8_STRING_8", "UTF8_STRING_16", "UTF8_STRING_32", "UTF8_STRING_64", "UTF8_STRING_BREAK", "ARRAY", "ARRAY_8", "ARRAY_16", "ARRAY_32", "ARRAY_64", "ARRAY_BREAK", "MAP", "MAP_8", "MAP_16", "MAP_32", "MAP_64", "MAP_BREAK", "TAG_KNOWN", "TAG_BIGNUM_POS", "TAG_BIGNUM_NEG", "TAG_FRAC", "TAG_BIGNUM_FLOAT", "TAG_UNASSIGNED", "TAG_BASE64_URL", "TAG_BASE64", "TAG_BASE16", "TAG_MORE_1", "TAG_MORE_2", "TAG_MORE_4", "TAG_MORE_8", "SIMPLE_UNASSIGNED", "SIMPLE_FALSE", "SIMPLE_TRUE", "SIMPLE_NULL", "SIMPLE_UNDEFINED", "SIMPLE_BYTE", "SIMPLE_FLOAT_HALF", "mant", "SIMPLE_FLOAT_SINGLE", "SIMPLE_FLOAT_DOUBLE", "ERROR", "BREAK", "require_constants", "Bignumber", "require_utils", "constants", "SHIFT32", "SHIFT16", "MAX_SAFE_HIGH", "keys", "f1", "f2", "u32", "u", "s16", "lenA", "lenB", "count", "require_simple", "MT", "SIMPLE", "SYMS", "Simple", "gen", "hasParent", "require_tagged", "Tagged", "tag", "err", "converters", "er", "error", "require_url_browser", "defaultBase", "URL", "URLWithLegacySupport", "url", "hash", "host", "hostname", "href", "origin", "password", "pathname", "port", "protocol", "search", "searchParams", "username", "o", "userPass", "auth", "path", "require_relative", "location", "protocolMap", "defaultProtocol", "urlParsed", "require_iso_url", "URLSearchParams", "relative", "require_decoder", "ieee754", "parser", "utils", "Decoder", "opts", "hasChildren", "tagNumber", "typ", "raw", "len1", "len3", "len4", "enc", "require_diagnose", "Diagnose", "fl", "map", "collectObject", "acc", "require_encoder", "NUMBYTES", "TAG", "HALF", "FLOAT", "DOUBLE", "TRUE", "FALSE", "UNDEFINED", "NULL", "MAXINT_BN", "BUF_NAN", "BUF_INF_NEG", "BUF_INF_POS", "toType", "Encoder", "options", "addTypes", "fun", "old", "b2", "b4", "mt", "orig", "dec", "slide", "keyLength", "result", "resultLength", "resultMethod", "require_src", "MAX_U64_NUMBER", "_concat", "newBuffer", "_serializeValue", "major", "minor", "byte", "_serializeNumber", "_serializeString", "utf8", "charcode", "tagged", "uSmall", "u8", "radix", "u16", "u64", "iSmall", "i8", "i16", "i32", "i64", "done", "newI64", "number", "items", "stable", "entries", "keyA", "keyB", "singleFloat", "single", "doubleFloat", "bool", "true_", "false_", "null_", "undefined_", "cbor", "__importStar", "BufferClasses", "JsonDefaultCborEncoder", "_serializer", "_stable", "item", "ToCborEncoder", "CborSerializer", "encoder", "chosenEncoder", "SelfDescribeCborSerializer", "require_base64_arraybuffer", "chars", "arraybuffer", "base64", "bufferLength", "encoded1", "encoded2", "encoded3", "encoded4", "idl_exports", "Bool", "BoolClass", "ConstructType", "Empty", "EmptyClass", "FixedIntClass", "FixedNatClass", "Float32", "Float64", "FloatClass", "Func", "FuncClass", "Int", "Int16", "Int32", "Int64", "Int8", "IntClass", "Nat", "Nat16", "Nat32", "Nat64", "Nat8", "NatClass", "Null", "NullClass", "Opt", "OptClass", "PrimitiveType", "Principal", "PrincipalClass", "Rec", "RecClass", "Record", "RecordClass", "Reserved", "ReservedClass", "Service", "ServiceClass", "Text", "TextClass", "Tuple", "TupleClass", "Type", "Unknown", "UnknownClass", "Variant", "VariantClass", "Vec", "VecClass", "Visitor", "decode", "encode", "lookupTable", "skip", "bits", "encodeByte", "decodeChar", "char", "lookUpTable", "getCrc32", "crc", "import_js_sha256", "sha224", "data", "shaObj", "jsSha224", "SELF_AUTHENTICATING_SUFFIX", "ANONYMOUS_SUFFIX", "MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR", "fromHexString", "hexString", "_a", "toHexString", "_arr", "publicKey", "sha", "other", "text", "canisterIdNoDash", "principal", "checksumArrayBuf", "checksum", "matches", "concat", "buffers", "curr", "PipeArrayBuffer", "amount", "idlHash", "idlLabelToId", "label", "eob", "safeRead", "pipe", "safeReadUint8", "lebEncode", "lebDecode", "weight", "slebEncode", "getLowerBytes", "slebDecode", "pipeView", "writeUIntLE", "writeIntLE", "readUIntLE", "readIntLE", "iexp2", "nBig", "magicNumber", "toReadableString_max", "zipWith", "xs", "ys", "TypeTable", "idx", "knot", "knotIdx", "typeName", "ty", "fields", "components", "toReadableString", "typeTable", "decodedValue", "typeFunc", "_bits", "view", "opcode", "ok", "_type", "encoded", "opCode", "vec", "rets", "opt", "values", "bufs", "T", "_", "record", "expectedRecordIdx", "actualRecordIdx", "expectKey", "expectType", "expectedId", "actualId", "_components", "tuple", "wireType", "variant", "wireHash", "decodePrincipalId", "argTypes", "retTypes", "annotations", "types", "methodName", "canister", "methodLen", "argLen", "retLen", "annLen", "anns", "annon", "ann", "func", "meths", "labelBuf", "labelLen", "_key", "magic", "table", "typs", "vals", "magicBuffer", "readTypeTable", "objectLength", "prevHash", "argLength", "returnValues", "returnValuesLength", "annotationLength", "servLength", "methods", "nameLength", "funcName", "funcType", "rawList", "rawTable", "rawTypes", "getType", "buildType", "entry", "rec", "typeRef", "ind", "AgentError", "import_borc", "import_simple_cbor", "hexRe", "fromHex", "b1", "u1", "u2", "PrincipalEncoder", "BufferEncoder", "BigIntEncoder", "serializer", "CborTag", "decodePositiveBigInt", "Uint8ArrayDecoder", "borc", "jsSha256", "hashValue", "hashString", "requestIdOf", "request", "sorted", "hashedKey", "hashedValue", "k1", "k2", "concatenated", "base64Arraybuffer", "wasmBytesBase64", "wasm", "wasmBytes", "bls_init", "cachegetUint8Memory0", "getUint8Memory0", "passArray8ToWasm0", "malloc", "ptr", "bls_verify", "sig", "w", "ptr0", "len0", "ptr1", "ptr2", "load", "imports", "instance", "bls_default", "verify", "blsVerify", "pk", "msg", "pk1", "sig1", "msg1", "CertificateVerificationError", "reason", "isBufferEqual", "a8", "b8", "Certificate", "certificate", "_rootKey", "_canisterId", "_blsVerify", "cert", "lookup_path", "rootHash", "reconstruct", "derKey", "extractDER", "domain_sep", "sigVer", "rangeLookup", "publicKeyLookup", "DER_PREFIX", "KEY_LENGTH", "expectedLength", "prefix", "tree", "find_label", "flatten_forks", "trees", "canisterId", "agent", "paths", "uniquePaths", "encodedPaths", "encodePath", "status", "promises", "response", "decodeTime", "decodeControllers", "decodeHex", "decodeLeb128", "decodeCbor", "decodeUtf8", "canisterBuffer", "metaPath", "decoded", "controllersRaw"]
}
